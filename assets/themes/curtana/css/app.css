.cf:before,
.cf:after {
  display: table;
  content: "";
}
.cf:after {
  clear: both;
}
*,
*:before,
*:after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
html {
  font-size: 100%;
  -webkit-text-size-adjust: none;
     -moz-text-size-adjust: none;
      -ms-text-size-adjust: none;
          text-size-adjust: none;
  text-rendering: optimizelegibility;
  image-rendering: optimizequality;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background: #fff;
}
body {
  padding: 0 24vw;
  margin: 0 auto 0;
  font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", "Hiragino Sans GB", Arial, sans-serif;
  font-size: 1.6vw;
  line-height: 1.42857143;
  hanging-punctuation: first allow-end;
  color: #000;
  background: #fff;
  transition: all .2s ease;
}
@media (max-width: 1080px) {
  body {
    padding-left: 8vw;
    padding-right: 8vw;
    font-size: 2.24vw;
  }
}
@media (max-width: 640px) {
  body {
    padding-left: 4vw;
    padding-right: 4vw;
    font-size: 3.84vw;
  }
}
@media (max-width: 400px) {
  body {
    font-size: 5.12vw;
  }
}
input,
button,
select,
textarea {
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
button,
input,
select[multiple],
textarea {
  background-image: none;
}
a,
button {
  color: #000;
  text-decoration: none;
  transition: color 0.5s ease, border-color 0.5s ease, background 0.5s ease, opacity 1.5s ease;
}
a:hover,
button:hover,
a:focus,
button:focus {
  transition: color 0.1s ease, border-color 0.1s ease, background 0.1s ease, opacity 0.1s ease;
  text-decoration: underline;
  -webkit-text-decoration-skip: ink;
          text-decoration-skip: ink;
}
a[disabled],
button[disabled] {
  opacity: .4;
  cursor: not-allowed;
}
button {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  background: none;
  border: none;
  outline: none;
}
img,
hr {
  border: 0;
}
del {
  text-decoration: line-through;
}
::-webkit-input-placeholder {
  color: #000;
  opacity: .2;
}
:-ms-input-placeholder {
  color: #000;
  opacity: .2;
}
::-ms-input-placeholder {
  color: #000;
  opacity: .2;
}
::placeholder {
  color: #000;
  opacity: .2;
}
:focus::-webkit-input-placeholder {
  color: #a212d1;
}
:focus:-ms-input-placeholder {
  color: #a212d1;
}
:focus::-ms-input-placeholder {
  color: #a212d1;
}
:focus::placeholder {
  color: #a212d1;
}
.js-system--apple {
  -webkit-font-feature-settings: "case", "ss01", "ss02";
          font-feature-settings: "case", "ss01", "ss02";
}
.navigation {
  padding-top: 1.4vmax;
  padding-bottom: 1.4vmax;
  margin-right: -1vmax;
  margin-left: -1vmax;
  font-size: 60%;
  font-weight: bold;
  letter-spacing: .45em;
  text-transform: uppercase;
}
.navigation li {
  display: inline-block;
  line-height: 2;
  list-style: none;
}
.navigation li a {
  padding: 0.5em 1vmax;
}
.navigation li a:hover,
.navigation li a:focus {
  color: #a212d1;
  text-decoration: none;
}
.current a {
  color: #a212d1;
}
body:hover .latest {
  color: #a212d1 !important;
}
.content {
  margin-bottom: 16vmin;
}
.content:before,
.content:after {
  display: table;
  content: "";
}
.content:after {
  clear: both;
}
.content article > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content .post-content > *:first-child,
.content .page-content > *:first-child {
  margin-top: 0;
}
.content .post-content > *:first-child > *:first-child,
.content .page-content > *:first-child > *:first-child {
  margin-top: 0;
}
.content a {
  font-weight: bold;
}
.content a:has(>code) {
  -webkit-text-decoration-color: #00cc80;
          text-decoration-color: #00cc80;
}
.content p {
  margin-bottom: 1.6rem;
  line-height: 1.71428571;
}
.content header {
  display: flex;
  min-height: calc(100vh - 5.6vmax - 5ex);
  padding-top: 10vmin;
  padding-bottom: 10vmin;
  margin-bottom: 16vmin;
  flex-direction: column;
  justify-content: center;
  background: rgba(0, 0, 0, 0.02);
  padding-left: 24vw;
  padding-right: 24vw;
  margin-left: -24vw;
  margin-right: -24vw;
}
@media (max-width: 1080px) {
  .content header {
    min-height: calc(50vh - 1.4vmax * 2 - 3ex);
    padding-top: 16vmin;
    padding-bottom: 16vmin;
    padding-left: 8vw;
    padding-right: 8vw;
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content header {
    padding-left: 4vw;
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content header h1 {
  font-size: 360%;
  font-weight: bold;
  letter-spacing: -0.04em;
  margin-left: -2px;
  -webkit-hyphens: none;
      -ms-hyphens: none;
          hyphens: none;
  line-height: 1.1;
}
@media (max-width: 640px) {
  .content header h1 {
    font-size: 280%;
  }
}
.content header h1 svg,
.content header h1 img {
  display: block;
  max-width: 100%;
  margin-left: 0;
  margin-right: 0;
  margin-bottom: .3em;
}
@media (max-width: 640px) {
  .content header h1 svg,
  .content header h1 img {
    width: 100% !important;
    height: 100% !important;
  }
}
.content header h2 {
  margin: 1.2vmin 0 0;
}
.content header .image-title {
  text-indent: -999999px;
  line-height: 0;
}
.content header small {
  display: block;
  margin-top: 2vmin;
}
.content h2,
.content h3,
.content h4,
.content h5,
.content h6 {
  margin: 10vmin 0 1rem;
  font-size: 72%;
  font-weight: normal;
  opacity: .5;
}
.content ul,
.content ol {
  margin-bottom: 1.8rem;
  list-style: none;
  counter-reset: list;
}
@media (max-width: 640px) {
  .content ul,
  .content ol {
    margin-left: 1em;
  }
}
.content ul li,
.content ol li {
  line-height: 1.71428571;
}
.content ul li:before,
.content ol li:before {
  position: absolute;
  display: inline-block;
  width: 4em;
  margin-top: 1px;
  margin-left: -4em;
  font-size: 80%;
  line-height: 2.14285714;
  text-align: right;
  opacity: .6;
  pointer-events: none;
}
.content ul li > ul,
.content ol li > ul,
.content ul li > ol,
.content ol li > ol {
  margin-left: 1em;
  margin-bottom: 0;
}
.content ul li:before {
  content: "â€¢";
  padding-right: .6em;
}
.content ol li:before {
  counter-increment: list;
  content: counter(list) ".";
  padding-right: .3em;
}
.content dl {
  line-height: 1.71428571;
}
@media (max-width: 640px) {
  .content dl {
    margin-left: 1em;
  }
}
.content dl dt:before {
  position: absolute;
  width: 1em;
  margin-left: -1em;
  content: "-";
  opacity: .6;
  pointer-events: none;
}
.content dl dd {
  margin-bottom: 1.8rem;
}
.content img,
.content video,
.content iframe,
.content .browser {
  display: block;
  width: calc(100% + (8vw * 2));
  min-height: calc(100vh - 5.6vmax - 5ex);
  margin: 0 -8vw 1.8rem;
}
@media (max-width: 1080px) {
  .content img,
  .content video,
  .content iframe,
  .content .browser {
    width: calc(100% + (8vw * 2));
    min-height: calc(50vh - 1.4vmax * 2 - 3ex);
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content img,
  .content video,
  .content iframe,
  .content .browser {
    width: calc(100% + (4vw * 2));
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content img.size-fit,
.content video.size-fit,
.content iframe.size-fit,
.content .browser.size-fit,
.content img.no-enlarge,
.content video.no-enlarge,
.content iframe.no-enlarge,
.content .browser.no-enlarge {
  margin-left: 0;
  margin-right: 0;
  max-width: 100%;
  width: auto;
}
.content img.size-large,
.content video.size-large,
.content iframe.size-large,
.content .browser.size-large {
  width: calc(100% + (24vw * 2));
  margin-left: -24vw;
  margin-right: -24vw;
}
@media (max-width: 1080px) {
  .content img.size-large,
  .content video.size-large,
  .content iframe.size-large,
  .content .browser.size-large {
    width: calc(100% + (8vw * 2));
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content img.size-large,
  .content video.size-large,
  .content iframe.size-large,
  .content .browser.size-large {
    width: calc(100% + (4vw * 2));
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content img.size-small,
.content video.size-small,
.content iframe.size-small,
.content .browser.size-small {
  width: calc(100% + (1.2vw * 2));
  margin-left: -1.2vw;
  margin-right: -1.2vw;
}
@media (max-width: 1080px) {
  .content img.size-small,
  .content video.size-small,
  .content iframe.size-small,
  .content .browser.size-small {
    width: calc(100% + (8vw * 2));
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content img.size-small,
  .content video.size-small,
  .content iframe.size-small,
  .content .browser.size-small {
    width: calc(100% + (4vw * 2));
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content img.size-left,
.content video.size-left,
.content iframe.size-left,
.content .browser.size-left {
  float: left;
  max-width: 36vw;
  margin-top: 0.6vw;
  margin-right: 1.2vw;
  margin-bottom: 0.6vw;
}
@media (max-width: 1080px) {
  .content img.size-left,
  .content video.size-left,
  .content iframe.size-left,
  .content .browser.size-left {
    float: none;
    max-width: none;
    margin-top: auto;
    margin-right: auto;
    margin-bottom: auto;
  }
}
.content img.size-right,
.content video.size-right,
.content iframe.size-right,
.content .browser.size-right {
  float: right;
  max-width: 36vw;
  margin-top: 0.6vw;
  margin-left: 1.2vw;
  margin-bottom: 0.6vw;
}
@media (max-width: 1080px) {
  .content img.size-right,
  .content video.size-right,
  .content iframe.size-right,
  .content .browser.size-right {
    float: none;
    max-width: none;
    margin-top: auto;
    margin-left: auto;
    margin-bottom: auto;
  }
}
.content blockquote {
  position: relative;
  margin-bottom: 2.8rem;
  margin-left: -1.2vw;
  font-size: 90%;
}
@media (max-width: 640px) {
  .content blockquote {
    margin-left: 0;
  }
}
.content blockquote > p {
  padding-left: 1.2vw;
  border-left: 2px solid;
  padding-bottom: 1.6rem;
  margin-bottom: 0;
  opacity: .6;
}
.content blockquote > p:last-of-type {
  padding-bottom: 0;
  margin-bottom: 1.6rem;
}
@media (max-width: 640px) {
  .content blockquote > p {
    padding-left: calc(4vw - 2px);
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content blockquote footer:before,
.content blockquote footer:after {
  display: table;
  content: "";
}
.content blockquote footer:after {
  clear: both;
}
.content blockquote cite {
  float: right;
  font-style: normal;
}
.content blockquote cite:before {
  content: "\2500\2500\00a0";
}
.content hr::before {
  display: block;
  content: '';
  width: 3px;
  height: 3px;
  margin: 2em auto;
  border-radius: 50%;
  background: #000;
  box-shadow: 24px 0 0 0 #000, -24px 0 0 0 #000;
}
.content sup {
  font-size: 75%;
}
.content pre,
.content code {
  font-family: Menlo, Consolas, monospace;
  color: #00cc80;
}
.content pre {
  background: rgba(0, 136, 255, 0.04);
}
.content code {
  font-size: 92%;
  overflow-wrap: break-word;
}
.content pre,
.content .highlight > pre,
.content .highlighter-rouge pre.highlight {
  padding: 1.2vw;
  margin-left: -1.2vw;
  margin-right: -1.2vw;
  margin-bottom: 1.8rem;
  overflow-x: auto;
  font-size: 80%;
  line-height: 1.71428571;
  -webkit-overflow-scrolling: touch;
}
@media (max-width: 1080px) {
  .content pre,
  .content .highlight > pre,
  .content .highlighter-rouge pre.highlight {
    padding-left: 8vw;
    padding-right: 8vw;
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content pre,
  .content .highlight > pre,
  .content .highlighter-rouge pre.highlight {
    padding-left: 4vw;
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content pre code,
.content .highlight > pre code,
.content .highlighter-rouge pre.highlight code {
  overflow-wrap: normal;
}
.content form input {
  display: block;
  width: 100%;
  padding: 1vmin 0;
  margin: 0 0 1.8rem;
  border: none;
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 0;
  outline: none;
  transition: padding .2s ease;
}
.content form input:focus {
  padding: 1vmin;
  background: rgba(0, 0, 0, 0.02);
  border-color: #000;
}
.content input:focus:required:invalid:focus,
.content textarea:focus:required:invalid:focus,
.content select:focus:required:invalid:focus {
  background: rgba(162, 18, 209, 0.05);
  border-color: #a212d1;
  box-shadow: none;
}
.content table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: 90%;
  width: 100%;
  margin-left: -1.2vw;
  margin-right: -1.2vw;
  margin-bottom: 1.8rem;
}
@media (max-width: 1080px) {
  .content table {
    width: calc(100% + (8vw * 2));
    margin-left: -8vw;
    margin-right: -8vw;
  }
}
@media (max-width: 640px) {
  .content table {
    width: calc(100% + (4vw * 2));
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.content table th,
.content table td {
  padding: 0.6em 1.2vw;
}
.content table th:first-child,
.content table td:first-child {
  padding-left: 1.2vw;
}
.content table th:last-child,
.content table td:last-child {
  padding-right: 1.2vw;
}
@media (max-width: 1080px) {
  .content table th:first-child,
  .content table td:first-child {
    padding-left: 8vw;
  }
  .content table th:last-child,
  .content table td:last-child {
    padding-right: 8vw;
  }
}
@media (max-width: 640px) {
  .content table th:first-child,
  .content table td:first-child {
    padding-left: 4vw;
  }
  .content table th:last-child,
  .content table td:last-child {
    padding-right: 4vw;
  }
}
.content table th {
  border-bottom: 2px solid rgba(0, 0, 0, 0.06);
  text-align: left;
}
.content table td {
  border-top: 1px solid rgba(0, 0, 0, 0.04);
}
:lang(zh),
:lang(ja) {
  text-align: justify;
}
:lang(zh) header,
:lang(ja) header,
:lang(zh) header *,
:lang(ja) header * {
  text-align: start;
}
:lang(zh) ruby rt,
:lang(ja) ruby rt {
  text-align: start;
}
.post-modified-date {
  font-size: 75%;
  opacity: .5;
}
.largetype {
  font-size: 360%;
  font-weight: bold;
  letter-spacing: -0.04em;
  font-size: 200%;
  margin-bottom: 1.8rem !important;
}
.browser {
  position: relative;
  padding-top: 24px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 5px 5px 0 0;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.05);
}
@media (max-width: 1080px), (max-width: 640px) {
  .browser {
    border-radius: 0;
  }
}
.browser:before {
  position: absolute;
  top: 8px;
  left: 10px;
  display: block;
  width: 8px;
  height: 8px;
  background: #fcdddf;
  border-radius: 50%;
  content: "";
  box-shadow: 16px 0 0 0 rgba(254, 240, 203, 0.96), 32px 0 0 0 rgba(177, 247, 185, 0.96), 0 0 0 1px rgba(156, 11, 21, 0.3), 16px 0 0 1px rgba(147, 108, 4, 0.3), 32px 0 0 1px rgba(11, 107, 22, 0.3);
}
.browser img {
  margin-left: 0;
  margin-right: 0;
  width: auto;
  max-width: 100%;
  box-shadow: 0 -1px 0 0 rgba(0, 0, 0, 0.05);
}
.screenshot-mac {
  margin-left: -56px;
  margin-right: -56px;
}
@media (max-width: 1080px), (max-width: 640px) {
  .screenshot-mac {
    margin-left: 0;
    margin-right: 0;
  }
}
.note,
.store,
.download {
  padding-left: 1.2vw;
  margin-left: -1.2vw;
  border-left: 2px solid #a212d1;
}
@media (max-width: 640px) {
  .note,
  .store,
  .download {
    padding-left: calc(4vw - 2px);
    padding-right: 4vw;
    margin-left: -4vw;
    margin-right: -4vw;
  }
}
.footnotes {
  font-size: 80%;
}
.footnotes::before {
  display: block;
  content: '';
  width: 3px;
  height: 3px;
  margin: 2em auto;
  border-radius: 50%;
  background: #000;
  box-shadow: 24px 0 0 0 #000, -24px 0 0 0 #000;
}
:target [rev=footnote],
:target [rel=footnote],
:target .reversefootnote,
:target .footnote {
  color: #a212d1;
}
.list {
  display: block;
  margin: 0 0 .4rem;
}
.list h1 {
  font-size: 360%;
  font-weight: bold;
  letter-spacing: -0.04em;
  font-size: 200%;
  line-height: 1.1;
  opacity: 1;
  margin: 0;
}
@media (max-width: 640px) {
  .list h1 {
    font-size: 180%;
  }
}
@media (max-width: 640px) {
  .list .external {
    display: none;
  }
}
.external .dot {
  display: inline-block;
  width: .7rem;
  height: .7rem;
  margin: 0 .1em;
  vertical-align: middle;
  background: #000;
  border-radius: 50%;
  transition: -webkit-transform .4s ease;
  transition: transform .4s ease;
  transition: transform .4s ease, -webkit-transform .4s ease;
}
.external .dot--post {
  margin-left: 1rem;
}
.external:hover .dot,
.external:focus .dot {
  -webkit-transform: scale(1.4);
          transform: scale(1.4);
}
.footer {
  padding: 0 0 16vmin;
  font-size: 75%;
  text-transform: lowercase;
}
.footer ul li {
  display: inline;
}
.footer ul li:after {
  padding: 0 1vmax;
  content: " / ";
  opacity: .3;
}
.footer ul li:last-child:after {
  content: none;
}
.gist {
  font-size: 80% !important;
}
.gist code,
.gist pre {
  padding: 0;
  color: inherit;
  background-color: transparent;
}
.gist .gist-data {
  font-family: Menlo, Consolas, monospace !important;
}
.gist .gist-data .file-data {
  font-size: 100% !important;
}
.gist .gist-data .file-data > table {
  margin-bottom: 0 !important;
}
.gist .highlight {
  font-size: 90% !important;
}
.gist .markdown-body {
  font-size: 100% !important;
  padding: 1em !important;
}
@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  body {
    padding: 10mm !important;
    margin: 0 !important;
  }
  a,
  a:visited {
    text-decoration: none;
  }
  .content header {
    min-height: 0;
    padding-bottom: 0;
  }
  .content .post-content,
  .content .page-content {
    max-width: 100% !important;
  }
  .content .post-content a[href]:after,
  .content .page-content a[href]:after {
    content: " (" attr(href) ")";
    font-weight: normal;
  }
  .content .post-content a[href^="#"]:after,
  .content .page-content a[href^="#"]:after,
  .content .post-content a[href^="javascript:"]:after,
  .content .page-content a[href^="javascript:"]:after {
    content: "";
  }
  .content .post-content abbr[title]:after,
  .content .page-content abbr[title]:after {
    content: " (" attr(title) ")";
    font-weight: normal;
  }
  pre,
  blockquote {
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  p,
  h2,
  h3,
  h4,
  h5,
  h6 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
  .navigation,
  .footer {
    display: none;
  }
}
.highlight > pre,
.highlighter-rouge pre.highlight {
  background: rgba(49, 5, 63, 0.02);
}
.highlight code,
.highlighter-rouge code {
  color: #727272;
}
.highlight .err,
.highlighter-rouge .err {
  background-color: rgba(168, 7, 220, 0.1);
}
.highlight .c,
.highlighter-rouge .c {
  font-style: italic;
}
.highlight .cm,
.highlighter-rouge .cm {
  font-style: italic;
}
.highlight .cp,
.highlighter-rouge .cp {
  font-weight: bold;
}
.highlight .c1,
.highlighter-rouge .c1 {
  font-style: italic;
}
.highlight .cs,
.highlighter-rouge .cs {
  font-weight: bold;
  font-style: italic;
}
.highlight .nc,
.highlighter-rouge .nc {
  font-weight: bold;
}
.highlight .ne,
.highlighter-rouge .ne {
  font-weight: bold;
}
.highlight .nf,
.highlighter-rouge .nf {
  font-weight: bold;
}
.highlight .o,
.highlighter-rouge .o {
  font-weight: bold;
}
.highlight .ow,
.highlighter-rouge .ow {
  font-weight: bold;
}
.highlight .gs,
.highlighter-rouge .gs {
  font-weight: bold;
}
.highlight .ge,
.highlighter-rouge .ge {
  font-style: italic;
}
.highlight .k,
.highlighter-rouge .k {
  font-weight: bold;
}
.highlight .kt,
.highlighter-rouge .kt {
  font-weight: bold;
}
.highlight .kc,
.highlighter-rouge .kc {
  font-weight: bold;
}
.highlight .kd,
.highlighter-rouge .kd {
  font-weight: bold;
}
.highlight .kp,
.highlighter-rouge .kp {
  font-weight: bold;
}
.highlight .kr,
.highlighter-rouge .kr {
  font-weight: bold;
}
.highlight .err,
.highlighter-rouge .err {
  color: #20a79f;
}
.highlight .x,
.highlighter-rouge .x {
  color: #20a7ad;
}
.highlight .n,
.highlighter-rouge .n {
  color: #20a7bc;
}
.highlight .na,
.highlighter-rouge .na {
  color: #20a7cb;
}
.highlight .nb,
.highlighter-rouge .nb {
  color: #209bcd;
}
.highlight .bp,
.highlighter-rouge .bp {
  color: #208ccd;
}
.highlight .nc,
.highlighter-rouge .nc {
  color: #207dcd;
}
.highlight .no,
.highlighter-rouge .no {
  color: #206fcd;
}
.highlight .nd,
.highlighter-rouge .nd {
  color: #2060cd;
}
.highlight .ni,
.highlighter-rouge .ni {
  color: #2051cd;
}
.highlight .ne,
.highlighter-rouge .ne {
  color: #2043cd;
}
.highlight .nf,
.highlighter-rouge .nf {
  color: #2034cd;
}
.highlight .nl,
.highlighter-rouge .nl {
  color: #2026cd;
}
.highlight .nn,
.highlighter-rouge .nn {
  color: #2017cd;
}
.highlight .nx,
.highlighter-rouge .nx {
  color: #2008cd;
}
.highlight .nt,
.highlighter-rouge .nt {
  color: #2a04cd;
}
.highlight .nv,
.highlighter-rouge .nv {
  color: #3904cd;
}
.highlight .vc,
.highlighter-rouge .vc {
  color: #4704cd;
}
.highlight .vg,
.highlighter-rouge .vg {
  color: #5604cd;
}
.highlight .vi,
.highlighter-rouge .vi {
  color: #6504cd;
}
.highlight .g,
.highlighter-rouge .g {
  color: #7304cd;
}
.highlight .gd,
.highlighter-rouge .gd {
  color: #8204cd;
}
.highlight .ge,
.highlighter-rouge .ge {
  color: #9104cd;
}
.highlight .gr,
.highlighter-rouge .gr {
  color: #9f04cd;
}
.highlight .gh,
.highlighter-rouge .gh {
  color: #ae04cd;
}
.highlight .gi,
.highlighter-rouge .gi {
  color: #bc04cd;
}
.highlight .go,
.highlighter-rouge .go {
  color: #c404c6;
}
.highlight .gp,
.highlighter-rouge .gp {
  color: #c404b7;
}
.highlight .gs,
.highlighter-rouge .gs {
  color: #c404a8;
}
.highlight .gu,
.highlighter-rouge .gu {
  color: #c4049a;
}
.highlight .gt,
.highlighter-rouge .gt {
  color: #c4048b;
}
.highlight .gl,
.highlighter-rouge .gl {
  color: #c4047d;
}
.highlight .k,
.highlighter-rouge .k {
  color: #c4046e;
}
.highlight .kc,
.highlighter-rouge .kc {
  color: #c4045f;
}
.highlight .kd,
.highlighter-rouge .kd {
  color: #c40451;
}
.highlight .kn,
.highlighter-rouge .kn {
  color: #c40442;
}
.highlight .kp,
.highlighter-rouge .kp {
  color: #c40433;
}
.highlight .kr,
.highlighter-rouge .kr {
  color: #c4092a;
}
.highlight .kt,
.highlighter-rouge .kt {
  color: #c4172a;
}
.highlight .kv,
.highlighter-rouge .kv {
  color: #c4262a;
}
.highlight .w,
.highlighter-rouge .w {
  color: #c4342a;
}
.highlight .l,
.highlighter-rouge .l {
  color: #c4432a;
}
.highlight .ld,
.highlighter-rouge .ld {
  color: #c4522a;
}
.highlight .s,
.highlighter-rouge .s {
  color: #c4602a;
}
.highlight .sb,
.highlighter-rouge .sb {
  color: #c46f2a;
}
.highlight .sc,
.highlighter-rouge .sc {
  color: #c47d2a;
}
.highlight .sd,
.highlighter-rouge .sd {
  color: #c48c2a;
}
.highlight .s2,
.highlighter-rouge .s2 {
  color: #c49b2a;
}
.highlight .se,
.highlighter-rouge .se {
  color: #c1a72a;
}
.highlight .sh,
.highlighter-rouge .sh {
  color: #b2a72a;
}
.highlight .si,
.highlighter-rouge .si {
  color: #a4a72a;
}
.highlight .sx,
.highlighter-rouge .sx {
  color: #95a72a;
}
.highlight .sr,
.highlighter-rouge .sr {
  color: #87a72a;
}
.highlight .s1,
.highlighter-rouge .s1 {
  color: #78a72a;
}
.highlight .ss,
.highlighter-rouge .ss {
  color: #69a72a;
}
.highlight .m,
.highlighter-rouge .m {
  color: #5ba72a;
}
.highlight .mf,
.highlighter-rouge .mf {
  color: #4ca72a;
}
.highlight .mh,
.highlighter-rouge .mh {
  color: #3ea72a;
}
.highlight .mi,
.highlighter-rouge .mi {
  color: #2fa72a;
}
.highlight .il,
.highlighter-rouge .il {
  color: #20a72a;
}
.highlight .mo,
.highlighter-rouge .mo {
  color: #20a739;
}
.highlight .mb,
.highlighter-rouge .mb {
  color: #20a747;
}
.highlight .mx,
.highlighter-rouge .mx {
  color: #20a756;
}
.highlight .o,
.highlighter-rouge .o {
  color: #20a764;
}
.highlight .ow,
.highlighter-rouge .ow {
  color: #20a773;
}
.highlight .p,
.highlighter-rouge .p {
  color: #20a782;
}
.highlight .pi,
.highlighter-rouge .pi {
  color: #20a790;
}
.highlight .c,
.highlighter-rouge .c {
  color: #50578c;
  opacity: .6;
}
.highlight .cd,
.highlighter-rouge .cd {
  color: #73428c;
  opacity: .6;
}
.highlight .cm,
.highlighter-rouge .cm {
  color: #88426a;
  opacity: .6;
}
.highlight .cp,
.highlighter-rouge .cp {
  color: #886555;
  opacity: .6;
}
.highlight .c1,
.highlighter-rouge .c1 {
  color: #657955;
  opacity: .6;
}
.highlight .cs,
.highlighter-rouge .cs {
  color: #507978;
  opacity: .6;
}
.highlight table,
.highlighter-rouge table,
.highlight table th,
.highlighter-rouge table th,
.highlight table td,
.highlighter-rouge table td,
.highlight table td pre,
.highlighter-rouge table td pre {
  padding: 0;
  margin: 0;
  border: none;
  background: transparent;
  font-size: 100%;
}
.highlight table pre,
.highlighter-rouge table pre {
  overflow-x: visible;
}
.highlight table .gutter:first-child,
.highlighter-rouge table .gutter:first-child,
.highlight table .gutter:last-child,
.highlighter-rouge table .gutter:last-child {
  padding: 0 !important;
}
.highlight table .gutter .lineno,
.highlighter-rouge table .gutter .lineno {
  color: #727272;
  opacity: .5;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.highlight table .code,
.highlighter-rouge table .code {
  padding-left: 1em;
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9hcHAvYXNzZXRzL3RoZW1lcy9jdXJ0YW5hL19sZXNzL21peGlucy5sZXNzIiwiYXBwLmNzcyIsIl9hcHAvYXNzZXRzL3RoZW1lcy9jdXJ0YW5hL19sZXNzL3Jlc2V0Lmxlc3MiLCJfYXBwL2Fzc2V0cy90aGVtZXMvY3VydGFuYS9fbGVzcy9jb21tb24ubGVzcyIsIl9hcHAvYXNzZXRzL3RoZW1lcy9jdXJ0YW5hL19sZXNzL3BsdWdpbnMubGVzcyIsIl9hcHAvYXNzZXRzL3RoZW1lcy9jdXJ0YW5hL19sZXNzL3ByaW50Lmxlc3MiLCJfYXBwL2Fzc2V0cy90aGVtZXMvY3VydGFuYS9fbGVzcy9jb21wb25lbnRzL3JhbmRvbWl6ZWQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFPRTs7RUFDRSxlQUFBO0VBQ0EsWUFBQTtDQ0xIO0FEUUM7RUFDRSxZQUFBO0NDTkg7QUNIRDs7O0VBR0UsV0FBQTtFQUNBLFVBQUE7RUFDQSx1QkFBQTtDREtEO0FDRkQ7RUFDRSxnQkFBQTtFQUNBLCtCQUFBO0tBQUEsNEJBQUE7TUFBQSwyQkFBQTtVQUFBLHVCQUFBO0VBQ0EsbUNBQUE7RUFDQSxpQ0FBQTtFQUNBLG9DQUFBO0VBQ0EsbUNBQUE7RUFLQSxpQkFBQTtDREFEO0FDR0Q7RUFDRSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esd0dBQUE7RUFDQSxpQkFBQTtFQUNBLHdCQUFBO0VBQ0EscUNBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7RUFDQSx5QkFBQTtDREREO0FDR0M7RUE4RUY7SUZyRkUsa0JBQUE7SUFDQSxtQkFBQTtJRVFFLGtCQUFBO0dEQ0Q7Q0FDRjtBQ0NDO0VBeUVGO0lGckZFLGtCQUFBO0lBQ0EsbUJBQUE7SUVhRSxrQkFBQTtHREdEO0NBQ0Y7QUNEQztFQW9FRjtJQW5FSSxrQkFBQTtHRElEO0NBQ0Y7QUNBRDs7OztFQUlFLGVBQUE7RUFDQSxxQkFBQTtFQUNBLG1CQUFBO0VBQ0EscUJBQUE7Q0RFRDtBQ0dEOzs7O0VBSUUsdUJBQUE7Q0RERDtB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O0FLajhCRDs7RUE2QlMsa0JBQUE7Q0x3NkJSO0FLcjhCRDs7RUE4QlMsa0JBQUE7Q0wyNkJSO0FLejhCRDs7RUFzSE0sZUFBQTtDTHUxQkw7QUs3OEJEOztFQXNITSxlQUFBO0NMMjFCTDtBS2o5QkQ7O0VBc0hNLGVBQUE7Q0wrMUJMO0FLcjlCRDs7RUFzSE0sZUFBQTtDTG0yQkw7QUt6OUJEOztFQXNITSxlQUFBO0NMdTJCTDtBSzc5QkQ7O0VBc0hNLGVBQUE7Q0wyMkJMO0FLaitCRDs7RUFzSE0sZUFBQTtDTCsyQkw7QUtyK0JEOztFQXNITSxlQUFBO0NMbTNCTDtBS3orQkQ7O0VBc0hNLGVBQUE7Q0x1M0JMO0FLNytCRDs7RUFzSE0sZUFBQTtDTDIzQkw7QUtqL0JEOztFQXNITSxlQUFBO0NMKzNCTDtBS3IvQkQ7O0VBc0hNLGVBQUE7Q0xtNEJMO0FLei9CRDs7RUFzSE0sZUFBQTtDTHU0Qkw7QUs3L0JEOztFQXNITSxlQUFBO0NMMjRCTDtBS2pnQ0Q7O0VBc0hNLGVBQUE7Q0wrNEJMO0FLcmdDRDs7RUFzSE0sZUFBQTtDTG01Qkw7QUt6Z0NEOztFQXNITSxlQUFBO0NMdTVCTDtBSzdnQ0Q7O0VBc0hNLGVBQUE7Q0wyNUJMO0FLamhDRDs7RUFzSE0sZUFBQTtDTCs1Qkw7QUtyaENEOztFQXNITSxlQUFBO0NMbTZCTDtBS3poQ0Q7O0VBc0hNLGVBQUE7Q0x1NkJMO0FLN2hDRDs7RUFzSE0sZUFBQTtDTDI2Qkw7QUtqaUNEOztFQXNITSxlQUFBO0NMKzZCTDtBS3JpQ0Q7O0VBc0hNLGVBQUE7Q0xtN0JMO0FLemlDRDs7RUFzSE0sZUFBQTtDTHU3Qkw7QUs3aUNEOztFQXNITSxlQUFBO0NMMjdCTDtBS2pqQ0Q7O0VBc0hNLGVBQUE7Q0wrN0JMO0FLcmpDRDs7RUFzSE0sZUFBQTtDTG04Qkw7QUt6akNEOztFQXNITSxlQUFBO0NMdThCTDtBSzdqQ0Q7O0VBc0hNLGVBQUE7Q0wyOEJMO0FLamtDRDs7RUFzSE0sZUFBQTtDTCs4Qkw7QUtya0NEOztFQXNITSxlQUFBO0NMbTlCTDtBS3prQ0Q7O0VBc0hNLGVBQUE7Q0x1OUJMO0FLN2tDRDs7RUFzSE0sZUFBQTtDTDI5Qkw7QUtqbENEOztFQXNITSxlQUFBO0NMKzlCTDtBS3JsQ0Q7O0VBc0hNLGVBQUE7Q0xtK0JMO0FLemxDRDs7RUFzSE0sZUFBQTtDTHUrQkw7QUs3bENEOztFQXNITSxlQUFBO0NMMitCTDtBS2ptQ0Q7O0VBc0hNLGVBQUE7Q0wrK0JMO0FLcm1DRDs7RUFzSE0sZUFBQTtDTG0vQkw7QUt6bUNEOztFQXNITSxlQUFBO0NMdS9CTDtBSzdtQ0Q7O0VBc0hNLGVBQUE7Q0wyL0JMO0FLam5DRDs7RUFzSE0sZUFBQTtDTCsvQkw7QUtybkNEOztFQXNITSxlQUFBO0NMbWdDTDtBS3puQ0Q7O0VBc0hNLGVBQUE7Q0x1Z0NMO0FLN25DRDs7RUFzSE0sZUFBQTtDTDJnQ0w7QUtqb0NEOztFQXNITSxlQUFBO0NMK2dDTDtBS3JvQ0Q7O0VBc0hNLGVBQUE7Q0xtaENMO0FLem9DRDs7RUFzSE0sZUFBQTtDTHVoQ0w7QUs3b0NEOztFQXNITSxlQUFBO0NMMmhDTDtBS2pwQ0Q7O0VBc0hNLGVBQUE7Q0wraENMO0FLcnBDRDs7RUFzSE0sZUFBQTtDTG1pQ0w7QUt6cENEOztFQXNITSxlQUFBO0NMdWlDTDtBSzdwQ0Q7O0VBc0hNLGVBQUE7Q0wyaUNMO0FLanFDRDs7RUFzSE0sZUFBQTtDTCtpQ0w7QUtycUNEOztFQXNITSxlQUFBO0NMbWpDTDtBS3pxQ0Q7O0VBc0hNLGVBQUE7Q0x1akNMO0FLN3FDRDs7RUFzSE0sZUFBQTtDTDJqQ0w7QUtqckNEOztFQXNITSxlQUFBO0NMK2pDTDtBS3JyQ0Q7O0VBc0hNLGVBQUE7Q0xta0NMO0FLenJDRDs7RUFzSE0sZUFBQTtDTHVrQ0w7QUs3ckNEOztFQXNITSxlQUFBO0NMMmtDTDtBS2pzQ0Q7O0VBc0hNLGVBQUE7Q0wra0NMO0FLcnNDRDs7RUFzSE0sZUFBQTtDTG1sQ0w7QUt6c0NEOztFQXNITSxlQUFBO0NMdWxDTDtBSzdzQ0Q7O0VBc0hNLGVBQUE7Q0wybENMO0FLanRDRDs7RUFzSE0sZUFBQTtDTCtsQ0w7QUtydENEOztFQTBJTSxlQUFBO0VBQ0EsWUFBQTtDTCtrQ0w7QUsxdENEOztFQTBJTSxlQUFBO0VBQ0EsWUFBQTtDTG9sQ0w7QUsvdENEOztFQTBJTSxlQUFBO0VBQ0EsWUFBQTtDTHlsQ0w7QUtwdUNEOztFQTBJTSxlQUFBO0VBQ0EsWUFBQTtDTDhsQ0w7QUt6dUNEOztFQTBJTSxlQUFBO0VBQ0EsWUFBQTtDTG1tQ0w7QUs5dUNEOztFQTBJTSxlQUFBO0VBQ0EsWUFBQTtDTHdtQ0w7QUsvbENHOzs7Ozs7OztFQUlFLFdBQUE7RUFDQSxVQUFBO0VBQ0EsYUFBQTtFQUNBLHdCQUFBO0VBQ0EsZ0JBQUE7Q0xxbUNMO0FLandDRDs7RUFtS00sb0JBQUE7Q0xrbUNMO0FLNWxDSzs7OztFQUVFLHNCQUFBO0NMZ21DUDtBSzN3Q0Q7O0VBK0tRLGVBQUE7RUFDQSxZQUFBO0VBQ0EsMEJBQUE7S0FBQSx1QkFBQTtNQUFBLHNCQUFBO1VBQUEsa0JBQUE7Q0xnbUNQO0FLanhDRDs7RUFzTE0sa0JBQUE7Q0wrbENMIiwiZmlsZSI6ImFwcC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvL1xuLy8gTWl4aW5zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBodHRwOi8vbmljb2xhc2dhbGxhZ2hlci5jb20vbWljcm8tY2xlYXJmaXgtaGFjay9cbi5jZiB7XG5cbiAgJjpiZWZvcmUsICY6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gIH1cblxuICAmOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDtcbiAgfVxufVxuXG4uaGVhZGluZygpIHtcbiAgZm9udC1zaXplOiAzNjAlO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbGV0dGVyLXNwYWNpbmc6IEBoZWFkaW5nLWxldHRlci1zcGFjaW5nO1xufVxuXG4uc3ViLWhlYWRpbmcoKSB7XG4gIGZvbnQtc2l6ZTogNzIlO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBvcGFjaXR5OiAuNTtcbn1cblxuLnBhZGRpbmctb2Zmc2V0KEBwYWRkaW5nLWxlZnQsIEBwYWRkaW5nLXJpZ2h0OiBAcGFkZGluZy1sZWZ0KSB7XG4gIHBhZGRpbmctbGVmdDogQHBhZGRpbmctbGVmdDtcbiAgcGFkZGluZy1yaWdodDogQHBhZGRpbmctcmlnaHQ7XG59XG5cbi5tYXJnaW4tb2Zmc2V0KEBtYXJnaW4tbGVmdCwgQG1hcmdpbi1yaWdodDogQG1hcmdpbi1sZWZ0KSB7XG4gIG1hcmdpbi1sZWZ0OiBAbWFyZ2luLWxlZnQ7XG4gIG1hcmdpbi1yaWdodDogQG1hcmdpbi1yaWdodDtcbn1cblxuLnNwbGl0ZXIoKSB7XG4gIEBzaXplOiAzcHg7XG4gIEBjb2xvcjogQHRleHQtY29sb3I7XG5cbiAgJjo6YmVmb3JlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb250ZW50OiAnJztcbiAgICB3aWR0aDogQHNpemU7XG4gICAgaGVpZ2h0OiBAc2l6ZTtcbiAgICBtYXJnaW46IDJlbSBhdXRvO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBiYWNrZ3JvdW5kOiBAY29sb3I7XG4gICAgYm94LXNoYWRvdzogKEBzaXplICogOCkgMCAwIDAgQGNvbG9yLCAoQHNpemUgKiAtOCkgMCAwIDAgQGNvbG9yO1xuICB9XG59XG4iLCIuY2Y6YmVmb3JlLFxuLmNmOmFmdGVyIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIGNvbnRlbnQ6IFwiXCI7XG59XG4uY2Y6YWZ0ZXIge1xuICBjbGVhcjogYm90aDtcbn1cbiosXG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5odG1sIHtcbiAgZm9udC1zaXplOiAxMDAlO1xuICB0ZXh0LXNpemUtYWRqdXN0OiBub25lO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVsZWdpYmlsaXR5O1xuICBpbWFnZS1yZW5kZXJpbmc6IG9wdGltaXplcXVhbGl0eTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG59XG5ib2R5IHtcbiAgcGFkZGluZzogMCAyNHZ3O1xuICBtYXJnaW46IDAgYXV0byAwO1xuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIkhlbHZldGljYSBOZXVlXCIsIFwiSGlyYWdpbm8gU2FucyBHQlwiLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjZ2dztcbiAgbGluZS1oZWlnaHQ6IDEuNDI4NTcxNDM7XG4gIGhhbmdpbmctcHVuY3R1YXRpb246IGZpcnN0IGFsbG93LWVuZDtcbiAgY29sb3I6ICMwMDA7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDgwcHgpIHtcbiAgYm9keSB7XG4gICAgcGFkZGluZy1sZWZ0OiA4dnc7XG4gICAgcGFkZGluZy1yaWdodDogOHZ3O1xuICAgIGZvbnQtc2l6ZTogMi4yNHZ3O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgYm9keSB7XG4gICAgcGFkZGluZy1sZWZ0OiA0dnc7XG4gICAgcGFkZGluZy1yaWdodDogNHZ3O1xuICAgIGZvbnQtc2l6ZTogMy44NHZ3O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgYm9keSB7XG4gICAgZm9udC1zaXplOiA1LjEydnc7XG4gIH1cbn1cbmlucHV0LFxuYnV0dG9uLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG59XG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdFttdWx0aXBsZV0sXG50ZXh0YXJlYSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG59XG5hLFxuYnV0dG9uIHtcbiAgY29sb3I6ICMwMDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC41cyBlYXNlLCBib3JkZXItY29sb3IgMC41cyBlYXNlLCBiYWNrZ3JvdW5kIDAuNXMgZWFzZSwgb3BhY2l0eSAxLjVzIGVhc2U7XG59XG5hOmhvdmVyLFxuYnV0dG9uOmhvdmVyLFxuYTpmb2N1cyxcbmJ1dHRvbjpmb2N1cyB7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMXMgZWFzZSwgYm9yZGVyLWNvbG9yIDAuMXMgZWFzZSwgYmFja2dyb3VuZCAwLjFzIGVhc2UsIG9wYWNpdHkgMC4xcyBlYXNlO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgdGV4dC1kZWNvcmF0aW9uLXNraXA6IGluaztcbn1cbmFbZGlzYWJsZWRdLFxuYnV0dG9uW2Rpc2FibGVkXSB7XG4gIG9wYWNpdHk6IC40O1xuICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xufVxuYnV0dG9uIHtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5pbWcsXG5ociB7XG4gIGJvcmRlcjogMDtcbn1cbmRlbCB7XG4gIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xufVxuOjpwbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjMDAwO1xuICBvcGFjaXR5OiAuMjtcbn1cbjpmb2N1czo6cGxhY2Vob2xkZXIge1xuICBjb2xvcjogI2EyMTJkMTtcbn1cbi5qcy1zeXN0ZW0tLWFwcGxlIHtcbiAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImNhc2VcIiwgXCJzczAxXCIsIFwic3MwMlwiO1xufVxuLm5hdmlnYXRpb24ge1xuICBwYWRkaW5nLXRvcDogMS40dm1heDtcbiAgcGFkZGluZy1ib3R0b206IDEuNHZtYXg7XG4gIG1hcmdpbi1yaWdodDogLTF2bWF4O1xuICBtYXJnaW4tbGVmdDogLTF2bWF4O1xuICBmb250LXNpemU6IDYwJTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGxldHRlci1zcGFjaW5nOiAuNDVlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbi5uYXZpZ2F0aW9uIGxpIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBsaW5lLWhlaWdodDogMjtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cbi5uYXZpZ2F0aW9uIGxpIGEge1xuICBwYWRkaW5nOiAwLjVlbSAxdm1heDtcbn1cbi5uYXZpZ2F0aW9uIGxpIGE6aG92ZXIsXG4ubmF2aWdhdGlvbiBsaSBhOmZvY3VzIHtcbiAgY29sb3I6ICNhMjEyZDE7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbi5jdXJyZW50IGEge1xuICBjb2xvcjogI2EyMTJkMTtcbn1cbmJvZHk6aG92ZXIgLmxhdGVzdCB7XG4gIGNvbG9yOiAjYTIxMmQxICFpbXBvcnRhbnQ7XG59XG4uY29udGVudCB7XG4gIG1hcmdpbi1ib3R0b206IDE2dm1pbjtcbn1cbi5jb250ZW50OmJlZm9yZSxcbi5jb250ZW50OmFmdGVyIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIGNvbnRlbnQ6IFwiXCI7XG59XG4uY29udGVudDphZnRlciB7XG4gIGNsZWFyOiBib3RoO1xufVxuLmNvbnRlbnQgYXJ0aWNsZSA+ICo6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDtcbn1cbi5jb250ZW50IGFydGljbGUgPiAqOmxhc3QtY2hpbGQgPiAqOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG4uY29udGVudCBhcnRpY2xlID4gKjpsYXN0LWNoaWxkID4gKjpsYXN0LWNoaWxkID4gKjpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xufVxuLmNvbnRlbnQgYXJ0aWNsZSA+ICo6bGFzdC1jaGlsZCA+ICo6bGFzdC1jaGlsZCA+ICo6bGFzdC1jaGlsZCA+ICo6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDtcbn1cbi5jb250ZW50IC5wb3N0LWNvbnRlbnQgPiAqOmZpcnN0LWNoaWxkLFxuLmNvbnRlbnQgLnBhZ2UtY29udGVudCA+ICo6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuLmNvbnRlbnQgLnBvc3QtY29udGVudCA+ICo6Zmlyc3QtY2hpbGQgPiAqOmZpcnN0LWNoaWxkLFxuLmNvbnRlbnQgLnBhZ2UtY29udGVudCA+ICo6Zmlyc3QtY2hpbGQgPiAqOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi5jb250ZW50IGEge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5jb250ZW50IGE6aGFzKD5jb2RlKSB7XG4gIHRleHQtZGVjb3JhdGlvbi1jb2xvcjogIzAwY2M4MDtcbn1cbi5jb250ZW50IHAge1xuICBtYXJnaW4tYm90dG9tOiAxLjZyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjcxNDI4NTcxO1xufVxuLmNvbnRlbnQgaGVhZGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgbWluLWhlaWdodDogY2FsYygxMDB2aCAtIDUuNnZtYXggLSA1ZXgpO1xuICBwYWRkaW5nLXRvcDogMTB2bWluO1xuICBwYWRkaW5nLWJvdHRvbTogMTB2bWluO1xuICBtYXJnaW4tYm90dG9tOiAxNnZtaW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMDIpO1xuICBwYWRkaW5nLWxlZnQ6IDI0dnc7XG4gIHBhZGRpbmctcmlnaHQ6IDI0dnc7XG4gIG1hcmdpbi1sZWZ0OiAtMjR2dztcbiAgbWFyZ2luLXJpZ2h0OiAtMjR2dztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDgwcHgpIHtcbiAgLmNvbnRlbnQgaGVhZGVyIHtcbiAgICBtaW4taGVpZ2h0OiBjYWxjKDUwdmggLSAxLjR2bWF4ICogMiAtIDNleCk7XG4gICAgcGFkZGluZy10b3A6IDE2dm1pbjtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTZ2bWluO1xuICAgIHBhZGRpbmctbGVmdDogOHZ3O1xuICAgIHBhZGRpbmctcmlnaHQ6IDh2dztcbiAgICBtYXJnaW4tbGVmdDogLTh2dztcbiAgICBtYXJnaW4tcmlnaHQ6IC04dnc7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCkge1xuICAuY29udGVudCBoZWFkZXIge1xuICAgIHBhZGRpbmctbGVmdDogNHZ3O1xuICAgIHBhZGRpbmctcmlnaHQ6IDR2dztcbiAgICBtYXJnaW4tbGVmdDogLTR2dztcbiAgICBtYXJnaW4tcmlnaHQ6IC00dnc7XG4gIH1cbn1cbi5jb250ZW50IGhlYWRlciBoMSB7XG4gIGZvbnQtc2l6ZTogMzYwJTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGxldHRlci1zcGFjaW5nOiAtMC4wNGVtO1xuICBtYXJnaW4tbGVmdDogLTJweDtcbiAgaHlwaGVuczogbm9uZTtcbiAgbGluZS1oZWlnaHQ6IDEuMTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCkge1xuICAuY29udGVudCBoZWFkZXIgaDEge1xuICAgIGZvbnQtc2l6ZTogMjgwJTtcbiAgfVxufVxuLmNvbnRlbnQgaGVhZGVyIGgxIHN2Zyxcbi5jb250ZW50IGhlYWRlciBoMSBpbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXJnaW4tbGVmdDogMDtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xuICBtYXJnaW4tYm90dG9tOiAuM2VtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIC5jb250ZW50IGhlYWRlciBoMSBzdmcsXG4gIC5jb250ZW50IGhlYWRlciBoMSBpbWcge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbn1cbi5jb250ZW50IGhlYWRlciBoMiB7XG4gIG1hcmdpbjogMS4ydm1pbiAwIDA7XG59XG4uY29udGVudCBoZWFkZXIgLmltYWdlLXRpdGxlIHtcbiAgdGV4dC1pbmRlbnQ6IC05OTk5OTlweDtcbiAgbGluZS1oZWlnaHQ6IDA7XG59XG4uY29udGVudCBoZWFkZXIgc21hbGwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDogMnZtaW47XG59XG4uY29udGVudCBoMixcbi5jb250ZW50IGgzLFxuLmNvbnRlbnQgaDQsXG4uY29udGVudCBoNSxcbi5jb250ZW50IGg2IHtcbiAgbWFyZ2luOiAxMHZtaW4gMCAxcmVtO1xuICBmb250LXNpemU6IDcyJTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgb3BhY2l0eTogLjU7XG59XG4uY29udGVudCB1bCxcbi5jb250ZW50IG9sIHtcbiAgbWFyZ2luLWJvdHRvbTogMS44cmVtO1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBjb3VudGVyLXJlc2V0OiBsaXN0O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIC5jb250ZW50IHVsLFxuICAuY29udGVudCBvbCB7XG4gICAgbWFyZ2luLWxlZnQ6IDFlbTtcbiAgfVxufVxuLmNvbnRlbnQgdWwgbGksXG4uY29udGVudCBvbCBsaSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjcxNDI4NTcxO1xufVxuLmNvbnRlbnQgdWwgbGk6YmVmb3JlLFxuLmNvbnRlbnQgb2wgbGk6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiA0ZW07XG4gIG1hcmdpbi10b3A6IDFweDtcbiAgbWFyZ2luLWxlZnQ6IC00ZW07XG4gIGZvbnQtc2l6ZTogODAlO1xuICBsaW5lLWhlaWdodDogMi4xNDI4NTcxNDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIG9wYWNpdHk6IC42O1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cbi5jb250ZW50IHVsIGxpID4gdWwsXG4uY29udGVudCBvbCBsaSA+IHVsLFxuLmNvbnRlbnQgdWwgbGkgPiBvbCxcbi5jb250ZW50IG9sIGxpID4gb2wge1xuICBtYXJnaW4tbGVmdDogMWVtO1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuLmNvbnRlbnQgdWwgbGk6YmVmb3JlIHtcbiAgY29udGVudDogXCLigKJcIjtcbiAgcGFkZGluZy1yaWdodDogLjZlbTtcbn1cbi5jb250ZW50IG9sIGxpOmJlZm9yZSB7XG4gIGNvdW50ZXItaW5jcmVtZW50OiBsaXN0O1xuICBjb250ZW50OiBjb3VudGVyKGxpc3QpIFwiLlwiO1xuICBwYWRkaW5nLXJpZ2h0OiAuM2VtO1xufVxuLmNvbnRlbnQgZGwge1xuICBsaW5lLWhlaWdodDogMS43MTQyODU3MTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCkge1xuICAuY29udGVudCBkbCB7XG4gICAgbWFyZ2luLWxlZnQ6IDFlbTtcbiAgfVxufVxuLmNvbnRlbnQgZGwgZHQ6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMWVtO1xuICBtYXJnaW4tbGVmdDogLTFlbTtcbiAgY29udGVudDogXCItXCI7XG4gIG9wYWNpdHk6IC42O1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cbi5jb250ZW50IGRsIGRkIHtcbiAgbWFyZ2luLWJvdHRvbTogMS44cmVtO1xufVxuLmNvbnRlbnQgaW1nLFxuLmNvbnRlbnQgdmlkZW8sXG4uY29udGVudCBpZnJhbWUsXG4uY29udGVudCAuYnJvd3NlciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogY2FsYygxMDAlICsgKDh2dyAqIDIpKTtcbiAgbWluLWhlaWdodDogY2FsYygxMDB2aCAtIDUuNnZtYXggLSA1ZXgpO1xuICBtYXJnaW46IDAgLTh2dyAxLjhyZW07XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTA4MHB4KSB7XG4gIC5jb250ZW50IGltZyxcbiAgLmNvbnRlbnQgdmlkZW8sXG4gIC5jb250ZW50IGlmcmFtZSxcbiAgLmNvbnRlbnQgLmJyb3dzZXIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKyAoOHZ3ICogMikpO1xuICAgIG1pbi1oZWlnaHQ6IGNhbGMoNTB2aCAtIDEuNHZtYXggKiAyIC0gM2V4KTtcbiAgICBtYXJnaW4tbGVmdDogLTh2dztcbiAgICBtYXJnaW4tcmlnaHQ6IC04dnc7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCkge1xuICAuY29udGVudCBpbWcsXG4gIC5jb250ZW50IHZpZGVvLFxuICAuY29udGVudCBpZnJhbWUsXG4gIC5jb250ZW50IC5icm93c2VyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICsgKDR2dyAqIDIpKTtcbiAgICBtYXJnaW4tbGVmdDogLTR2dztcbiAgICBtYXJnaW4tcmlnaHQ6IC00dnc7XG4gIH1cbn1cbi5jb250ZW50IGltZy5zaXplLWZpdCxcbi5jb250ZW50IHZpZGVvLnNpemUtZml0LFxuLmNvbnRlbnQgaWZyYW1lLnNpemUtZml0LFxuLmNvbnRlbnQgLmJyb3dzZXIuc2l6ZS1maXQsXG4uY29udGVudCBpbWcubm8tZW5sYXJnZSxcbi5jb250ZW50IHZpZGVvLm5vLWVubGFyZ2UsXG4uY29udGVudCBpZnJhbWUubm8tZW5sYXJnZSxcbi5jb250ZW50IC5icm93c2VyLm5vLWVubGFyZ2Uge1xuICBtYXJnaW4tbGVmdDogMDtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHdpZHRoOiBhdXRvO1xufVxuLmNvbnRlbnQgaW1nLnNpemUtbGFyZ2UsXG4uY29udGVudCB2aWRlby5zaXplLWxhcmdlLFxuLmNvbnRlbnQgaWZyYW1lLnNpemUtbGFyZ2UsXG4uY29udGVudCAuYnJvd3Nlci5zaXplLWxhcmdlIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSArICgyNHZ3ICogMikpO1xuICBtYXJnaW4tbGVmdDogLTI0dnc7XG4gIG1hcmdpbi1yaWdodDogLTI0dnc7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTA4MHB4KSB7XG4gIC5jb250ZW50IGltZy5zaXplLWxhcmdlLFxuICAuY29udGVudCB2aWRlby5zaXplLWxhcmdlLFxuICAuY29udGVudCBpZnJhbWUuc2l6ZS1sYXJnZSxcbiAgLmNvbnRlbnQgLmJyb3dzZXIuc2l6ZS1sYXJnZSB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSArICg4dncgKiAyKSk7XG4gICAgbWFyZ2luLWxlZnQ6IC04dnc7XG4gICAgbWFyZ2luLXJpZ2h0OiAtOHZ3O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLmNvbnRlbnQgaW1nLnNpemUtbGFyZ2UsXG4gIC5jb250ZW50IHZpZGVvLnNpemUtbGFyZ2UsXG4gIC5jb250ZW50IGlmcmFtZS5zaXplLWxhcmdlLFxuICAuY29udGVudCAuYnJvd3Nlci5zaXplLWxhcmdlIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICsgKDR2dyAqIDIpKTtcbiAgICBtYXJnaW4tbGVmdDogLTR2dztcbiAgICBtYXJnaW4tcmlnaHQ6IC00dnc7XG4gIH1cbn1cbi5jb250ZW50IGltZy5zaXplLXNtYWxsLFxuLmNvbnRlbnQgdmlkZW8uc2l6ZS1zbWFsbCxcbi5jb250ZW50IGlmcmFtZS5zaXplLXNtYWxsLFxuLmNvbnRlbnQgLmJyb3dzZXIuc2l6ZS1zbWFsbCB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKyAoMS4ydncgKiAyKSk7XG4gIG1hcmdpbi1sZWZ0OiAtMS4ydnc7XG4gIG1hcmdpbi1yaWdodDogLTEuMnZ3O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwODBweCkge1xuICAuY29udGVudCBpbWcuc2l6ZS1zbWFsbCxcbiAgLmNvbnRlbnQgdmlkZW8uc2l6ZS1zbWFsbCxcbiAgLmNvbnRlbnQgaWZyYW1lLnNpemUtc21hbGwsXG4gIC5jb250ZW50IC5icm93c2VyLnNpemUtc21hbGwge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKyAoOHZ3ICogMikpO1xuICAgIG1hcmdpbi1sZWZ0OiAtOHZ3O1xuICAgIG1hcmdpbi1yaWdodDogLTh2dztcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIC5jb250ZW50IGltZy5zaXplLXNtYWxsLFxuICAuY29udGVudCB2aWRlby5zaXplLXNtYWxsLFxuICAuY29udGVudCBpZnJhbWUuc2l6ZS1zbWFsbCxcbiAgLmNvbnRlbnQgLmJyb3dzZXIuc2l6ZS1zbWFsbCB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSArICg0dncgKiAyKSk7XG4gICAgbWFyZ2luLWxlZnQ6IC00dnc7XG4gICAgbWFyZ2luLXJpZ2h0OiAtNHZ3O1xuICB9XG59XG4uY29udGVudCBpbWcuc2l6ZS1sZWZ0LFxuLmNvbnRlbnQgdmlkZW8uc2l6ZS1sZWZ0LFxuLmNvbnRlbnQgaWZyYW1lLnNpemUtbGVmdCxcbi5jb250ZW50IC5icm93c2VyLnNpemUtbGVmdCB7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXgtd2lkdGg6IDM2dnc7XG4gIG1hcmdpbi10b3A6IDAuNnZ3O1xuICBtYXJnaW4tcmlnaHQ6IDEuMnZ3O1xuICBtYXJnaW4tYm90dG9tOiAwLjZ2dztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDgwcHgpIHtcbiAgLmNvbnRlbnQgaW1nLnNpemUtbGVmdCxcbiAgLmNvbnRlbnQgdmlkZW8uc2l6ZS1sZWZ0LFxuICAuY29udGVudCBpZnJhbWUuc2l6ZS1sZWZ0LFxuICAuY29udGVudCAuYnJvd3Nlci5zaXplLWxlZnQge1xuICAgIGZsb2F0OiBub25lO1xuICAgIG1heC13aWR0aDogbm9uZTtcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICBtYXJnaW4tYm90dG9tOiBhdXRvO1xuICB9XG59XG4uY29udGVudCBpbWcuc2l6ZS1yaWdodCxcbi5jb250ZW50IHZpZGVvLnNpemUtcmlnaHQsXG4uY29udGVudCBpZnJhbWUuc2l6ZS1yaWdodCxcbi5jb250ZW50IC5icm93c2VyLnNpemUtcmlnaHQge1xuICBmbG9hdDogcmlnaHQ7XG4gIG1heC13aWR0aDogMzZ2dztcbiAgbWFyZ2luLXRvcDogMC42dnc7XG4gIG1hcmdpbi1sZWZ0OiAxLjJ2dztcbiAgbWFyZ2luLWJvdHRvbTogMC42dnc7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTA4MHB4KSB7XG4gIC5jb250ZW50IGltZy5zaXplLXJpZ2h0LFxuICAuY29udGVudCB2aWRlby5zaXplLXJpZ2h0LFxuICAuY29udGVudCBpZnJhbWUuc2l6ZS1yaWdodCxcbiAgLmNvbnRlbnQgLmJyb3dzZXIuc2l6ZS1yaWdodCB7XG4gICAgZmxvYXQ6IG5vbmU7XG4gICAgbWF4LXdpZHRoOiBub25lO1xuICAgIG1hcmdpbi10b3A6IGF1dG87XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLWJvdHRvbTogYXV0bztcbiAgfVxufVxuLmNvbnRlbnQgYmxvY2txdW90ZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLWJvdHRvbTogMi44cmVtO1xuICBtYXJnaW4tbGVmdDogLTEuMnZ3O1xuICBmb250LXNpemU6IDkwJTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCkge1xuICAuY29udGVudCBibG9ja3F1b3RlIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgfVxufVxuLmNvbnRlbnQgYmxvY2txdW90ZSA+IHAge1xuICBwYWRkaW5nLWxlZnQ6IDEuMnZ3O1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkO1xuICBwYWRkaW5nLWJvdHRvbTogMS42cmVtO1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBvcGFjaXR5OiAuNjtcbn1cbi5jb250ZW50IGJsb2NrcXVvdGUgPiBwOmxhc3Qtb2YtdHlwZSB7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxLjZyZW07XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLmNvbnRlbnQgYmxvY2txdW90ZSA+IHAge1xuICAgIHBhZGRpbmctbGVmdDogY2FsYyg0dncgLSAycHgpO1xuICAgIHBhZGRpbmctcmlnaHQ6IDR2dztcbiAgICBtYXJnaW4tbGVmdDogLTR2dztcbiAgICBtYXJnaW4tcmlnaHQ6IC00dnc7XG4gIH1cbn1cbi5jb250ZW50IGJsb2NrcXVvdGUgZm9vdGVyOmJlZm9yZSxcbi5jb250ZW50IGJsb2NrcXVvdGUgZm9vdGVyOmFmdGVyIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIGNvbnRlbnQ6IFwiXCI7XG59XG4uY29udGVudCBibG9ja3F1b3RlIGZvb3RlcjphZnRlciB7XG4gIGNsZWFyOiBib3RoO1xufVxuLmNvbnRlbnQgYmxvY2txdW90ZSBjaXRlIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG4uY29udGVudCBibG9ja3F1b3RlIGNpdGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXDI1MDBcXDI1MDBcXDAwYTBcIjtcbn1cbi5jb250ZW50IGhyOjpiZWZvcmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29udGVudDogJyc7XG4gIHdpZHRoOiAzcHg7XG4gIGhlaWdodDogM3B4O1xuICBtYXJnaW46IDJlbSBhdXRvO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQ6ICMwMDA7XG4gIGJveC1zaGFkb3c6IDI0cHggMCAwIDAgIzAwMCwgLTI0cHggMCAwIDAgIzAwMDtcbn1cbi5jb250ZW50IHN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xufVxuLmNvbnRlbnQgcHJlLFxuLmNvbnRlbnQgY29kZSB7XG4gIGZvbnQtZmFtaWx5OiBNZW5sbywgQ29uc29sYXMsIG1vbm9zcGFjZTtcbiAgY29sb3I6ICMwMGNjODA7XG59XG4uY29udGVudCBwcmUge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDEzNiwgMjU1LCAwLjA0KTtcbn1cbi5jb250ZW50IGNvZGUge1xuICBmb250LXNpemU6IDkyJTtcbiAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcbn1cbi5jb250ZW50IHByZSxcbi5jb250ZW50IC5oaWdobGlnaHQgPiBwcmUsXG4uY29udGVudCAuaGlnaGxpZ2h0ZXItcm91Z2UgcHJlLmhpZ2hsaWdodCB7XG4gIHBhZGRpbmc6IDEuMnZ3O1xuICBtYXJnaW4tbGVmdDogLTEuMnZ3O1xuICBtYXJnaW4tcmlnaHQ6IC0xLjJ2dztcbiAgbWFyZ2luLWJvdHRvbTogMS44cmVtO1xuICBvdmVyZmxvdy14OiBhdXRvO1xuICBmb250LXNpemU6IDgwJTtcbiAgbGluZS1oZWlnaHQ6IDEuNzE0Mjg1NzE7XG4gIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDgwcHgpIHtcbiAgLmNvbnRlbnQgcHJlLFxuICAuY29udGVudCAuaGlnaGxpZ2h0ID4gcHJlLFxuICAuY29udGVudCAuaGlnaGxpZ2h0ZXItcm91Z2UgcHJlLmhpZ2hsaWdodCB7XG4gICAgcGFkZGluZy1sZWZ0OiA4dnc7XG4gICAgcGFkZGluZy1yaWdodDogOHZ3O1xuICAgIG1hcmdpbi1sZWZ0OiAtOHZ3O1xuICAgIG1hcmdpbi1yaWdodDogLTh2dztcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIC5jb250ZW50IHByZSxcbiAgLmNvbnRlbnQgLmhpZ2hsaWdodCA+IHByZSxcbiAgLmNvbnRlbnQgLmhpZ2hsaWdodGVyLXJvdWdlIHByZS5oaWdobGlnaHQge1xuICAgIHBhZGRpbmctbGVmdDogNHZ3O1xuICAgIHBhZGRpbmctcmlnaHQ6IDR2dztcbiAgICBtYXJnaW4tbGVmdDogLTR2dztcbiAgICBtYXJnaW4tcmlnaHQ6IC00dnc7XG4gIH1cbn1cbi5jb250ZW50IHByZSBjb2RlLFxuLmNvbnRlbnQgLmhpZ2hsaWdodCA+IHByZSBjb2RlLFxuLmNvbnRlbnQgLmhpZ2hsaWdodGVyLXJvdWdlIHByZS5oaWdobGlnaHQgY29kZSB7XG4gIG92ZXJmbG93LXdyYXA6IG5vcm1hbDtcbn1cbi5jb250ZW50IGZvcm0gaW5wdXQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDF2bWluIDA7XG4gIG1hcmdpbjogMCAwIDEuOHJlbTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBvdXRsaW5lOiBub25lO1xuICB0cmFuc2l0aW9uOiBwYWRkaW5nIC4ycyBlYXNlO1xufVxuLmNvbnRlbnQgZm9ybSBpbnB1dDpmb2N1cyB7XG4gIHBhZGRpbmc6IDF2bWluO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMDIpO1xuICBib3JkZXItY29sb3I6ICMwMDA7XG59XG4uY29udGVudCBpbnB1dDpmb2N1czpyZXF1aXJlZDppbnZhbGlkOmZvY3VzLFxuLmNvbnRlbnQgdGV4dGFyZWE6Zm9jdXM6cmVxdWlyZWQ6aW52YWxpZDpmb2N1cyxcbi5jb250ZW50IHNlbGVjdDpmb2N1czpyZXF1aXJlZDppbnZhbGlkOmZvY3VzIHtcbiAgYmFja2dyb3VuZDogcmdiYSgxNjIsIDE4LCAyMDksIDAuMDUpO1xuICBib3JkZXItY29sb3I6ICNhMjEyZDE7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG59XG4uY29udGVudCB0YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xuICBmb250LXNpemU6IDkwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1sZWZ0OiAtMS4ydnc7XG4gIG1hcmdpbi1yaWdodDogLTEuMnZ3O1xuICBtYXJnaW4tYm90dG9tOiAxLjhyZW07XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTA4MHB4KSB7XG4gIC5jb250ZW50IHRhYmxlIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICsgKDh2dyAqIDIpKTtcbiAgICBtYXJnaW4tbGVmdDogLTh2dztcbiAgICBtYXJnaW4tcmlnaHQ6IC04dnc7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCkge1xuICAuY29udGVudCB0YWJsZSB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSArICg0dncgKiAyKSk7XG4gICAgbWFyZ2luLWxlZnQ6IC00dnc7XG4gICAgbWFyZ2luLXJpZ2h0OiAtNHZ3O1xuICB9XG59XG4uY29udGVudCB0YWJsZSB0aCxcbi5jb250ZW50IHRhYmxlIHRkIHtcbiAgcGFkZGluZzogMC42ZW0gMS4ydnc7XG59XG4uY29udGVudCB0YWJsZSB0aDpmaXJzdC1jaGlsZCxcbi5jb250ZW50IHRhYmxlIHRkOmZpcnN0LWNoaWxkIHtcbiAgcGFkZGluZy1sZWZ0OiAxLjJ2dztcbn1cbi5jb250ZW50IHRhYmxlIHRoOmxhc3QtY2hpbGQsXG4uY29udGVudCB0YWJsZSB0ZDpsYXN0LWNoaWxkIHtcbiAgcGFkZGluZy1yaWdodDogMS4ydnc7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTA4MHB4KSB7XG4gIC5jb250ZW50IHRhYmxlIHRoOmZpcnN0LWNoaWxkLFxuICAuY29udGVudCB0YWJsZSB0ZDpmaXJzdC1jaGlsZCB7XG4gICAgcGFkZGluZy1sZWZ0OiA4dnc7XG4gIH1cbiAgLmNvbnRlbnQgdGFibGUgdGg6bGFzdC1jaGlsZCxcbiAgLmNvbnRlbnQgdGFibGUgdGQ6bGFzdC1jaGlsZCB7XG4gICAgcGFkZGluZy1yaWdodDogOHZ3O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLmNvbnRlbnQgdGFibGUgdGg6Zmlyc3QtY2hpbGQsXG4gIC5jb250ZW50IHRhYmxlIHRkOmZpcnN0LWNoaWxkIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDR2dztcbiAgfVxuICAuY29udGVudCB0YWJsZSB0aDpsYXN0LWNoaWxkLFxuICAuY29udGVudCB0YWJsZSB0ZDpsYXN0LWNoaWxkIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiA0dnc7XG4gIH1cbn1cbi5jb250ZW50IHRhYmxlIHRoIHtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wNik7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG4uY29udGVudCB0YWJsZSB0ZCB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMDQpO1xufVxuOmxhbmcoemgpLFxuOmxhbmcoamEpIHtcbiAgdGV4dC1hbGlnbjoganVzdGlmeTtcbn1cbjpsYW5nKHpoKSBoZWFkZXIsXG46bGFuZyhqYSkgaGVhZGVyLFxuOmxhbmcoemgpIGhlYWRlciAqLFxuOmxhbmcoamEpIGhlYWRlciAqIHtcbiAgdGV4dC1hbGlnbjogc3RhcnQ7XG59XG46bGFuZyh6aCkgcnVieSBydCxcbjpsYW5nKGphKSBydWJ5IHJ0IHtcbiAgdGV4dC1hbGlnbjogc3RhcnQ7XG59XG4ucG9zdC1tb2RpZmllZC1kYXRlIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIG9wYWNpdHk6IC41O1xufVxuLmxhcmdldHlwZSB7XG4gIGZvbnQtc2l6ZTogMzYwJTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGxldHRlci1zcGFjaW5nOiAtMC4wNGVtO1xuICBmb250LXNpemU6IDIwMCU7XG4gIG1hcmdpbi1ib3R0b206IDEuOHJlbSAhaW1wb3J0YW50O1xufVxuLmJyb3dzZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctdG9wOiAyNHB4O1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XG4gIGJvcmRlci1yYWRpdXM6IDVweCA1cHggMCAwO1xuICBib3gtc2hhZG93OiAwIDAgMCAxcHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDgwcHgpLCAobWF4LXdpZHRoOiA2NDBweCkge1xuICAuYnJvd3NlciB7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgfVxufVxuLmJyb3dzZXI6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDhweDtcbiAgbGVmdDogMTBweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiA4cHg7XG4gIGhlaWdodDogOHB4O1xuICBiYWNrZ3JvdW5kOiAjZmNkZGRmO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJveC1zaGFkb3c6IDE2cHggMCAwIDAgcmdiYSgyNTQsIDI0MCwgMjAzLCAwLjk2KSwgMzJweCAwIDAgMCByZ2JhKDE3NywgMjQ3LCAxODUsIDAuOTYpLCAwIDAgMCAxcHggcmdiYSgxNTYsIDExLCAyMSwgMC4zKSwgMTZweCAwIDAgMXB4IHJnYmEoMTQ3LCAxMDgsIDQsIDAuMyksIDMycHggMCAwIDFweCByZ2JhKDExLCAxMDcsIDIyLCAwLjMpO1xufVxuLmJyb3dzZXIgaW1nIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG4gIG1hcmdpbi1yaWdodDogMDtcbiAgd2lkdGg6IGF1dG87XG4gIG1heC13aWR0aDogMTAwJTtcbiAgYm94LXNoYWRvdzogMCAtMXB4IDAgMCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xufVxuLnNjcmVlbnNob3QtbWFjIHtcbiAgbWFyZ2luLWxlZnQ6IC01NnB4O1xuICBtYXJnaW4tcmlnaHQ6IC01NnB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwODBweCksIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIC5zY3JlZW5zaG90LW1hYyB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG59XG4ubm90ZSxcbi5zdG9yZSxcbi5kb3dubG9hZCB7XG4gIHBhZGRpbmctbGVmdDogMS4ydnc7XG4gIG1hcmdpbi1sZWZ0OiAtMS4ydnc7XG4gIGJvcmRlci1sZWZ0OiAycHggc29saWQgI2EyMTJkMTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCkge1xuICAubm90ZSxcbiAgLnN0b3JlLFxuICAuZG93bmxvYWQge1xuICAgIHBhZGRpbmctbGVmdDogY2FsYyg0dncgLSAycHgpO1xuICAgIHBhZGRpbmctcmlnaHQ6IDR2dztcbiAgICBtYXJnaW4tbGVmdDogLTR2dztcbiAgICBtYXJnaW4tcmlnaHQ6IC00dnc7XG4gIH1cbn1cbi5mb290bm90ZXMge1xuICBmb250LXNpemU6IDgwJTtcbn1cbi5mb290bm90ZXM6OmJlZm9yZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb250ZW50OiAnJztcbiAgd2lkdGg6IDNweDtcbiAgaGVpZ2h0OiAzcHg7XG4gIG1hcmdpbjogMmVtIGF1dG87XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZDogIzAwMDtcbiAgYm94LXNoYWRvdzogMjRweCAwIDAgMCAjMDAwLCAtMjRweCAwIDAgMCAjMDAwO1xufVxuOnRhcmdldCBbcmV2PWZvb3Rub3RlXSxcbjp0YXJnZXQgW3JlbD1mb290bm90ZV0sXG46dGFyZ2V0IC5yZXZlcnNlZm9vdG5vdGUsXG46dGFyZ2V0IC5mb290bm90ZSB7XG4gIGNvbG9yOiAjYTIxMmQxO1xufVxuLmxpc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIDAgLjRyZW07XG59XG4ubGlzdCBoMSB7XG4gIGZvbnQtc2l6ZTogMzYwJTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGxldHRlci1zcGFjaW5nOiAtMC4wNGVtO1xuICBmb250LXNpemU6IDIwMCU7XG4gIGxpbmUtaGVpZ2h0OiAxLjE7XG4gIG9wYWNpdHk6IDE7XG4gIG1hcmdpbjogMDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NDBweCkge1xuICAubGlzdCBoMSB7XG4gICAgZm9udC1zaXplOiAxODAlO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLmxpc3QgLmV4dGVybmFsIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4uZXh0ZXJuYWwgLmRvdCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IC43cmVtO1xuICBoZWlnaHQ6IC43cmVtO1xuICBtYXJnaW46IDAgLjFlbTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgYmFja2dyb3VuZDogIzAwMDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjRzIGVhc2U7XG59XG4uZXh0ZXJuYWwgLmRvdC0tcG9zdCB7XG4gIG1hcmdpbi1sZWZ0OiAxcmVtO1xufVxuLmV4dGVybmFsOmhvdmVyIC5kb3QsXG4uZXh0ZXJuYWw6Zm9jdXMgLmRvdCB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS40KTtcbn1cbi5mb290ZXIge1xuICBwYWRkaW5nOiAwIDAgMTZ2bWluO1xuICBmb250LXNpemU6IDc1JTtcbiAgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZTtcbn1cbi5mb290ZXIgdWwgbGkge1xuICBkaXNwbGF5OiBpbmxpbmU7XG59XG4uZm9vdGVyIHVsIGxpOmFmdGVyIHtcbiAgcGFkZGluZzogMCAxdm1heDtcbiAgY29udGVudDogXCIgLyBcIjtcbiAgb3BhY2l0eTogLjM7XG59XG4uZm9vdGVyIHVsIGxpOmxhc3QtY2hpbGQ6YWZ0ZXIge1xuICBjb250ZW50OiBub25lO1xufVxuLmdpc3Qge1xuICBmb250LXNpemU6IDgwJSAhaW1wb3J0YW50O1xufVxuLmdpc3QgY29kZSxcbi5naXN0IHByZSB7XG4gIHBhZGRpbmc6IDA7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cbi5naXN0IC5naXN0LWRhdGEge1xuICBmb250LWZhbWlseTogTWVubG8sIENvbnNvbGFzLCBtb25vc3BhY2UgIWltcG9ydGFudDtcbn1cbi5naXN0IC5naXN0LWRhdGEgLmZpbGUtZGF0YSB7XG4gIGZvbnQtc2l6ZTogMTAwJSAhaW1wb3J0YW50O1xufVxuLmdpc3QgLmdpc3QtZGF0YSAuZmlsZS1kYXRhID4gdGFibGUge1xuICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG4uZ2lzdCAuaGlnaGxpZ2h0IHtcbiAgZm9udC1zaXplOiA5MCUgIWltcG9ydGFudDtcbn1cbi5naXN0IC5tYXJrZG93bi1ib2R5IHtcbiAgZm9udC1zaXplOiAxMDAlICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDFlbSAhaW1wb3J0YW50O1xufVxuQG1lZGlhIHByaW50IHtcbiAgKixcbiAgKjpiZWZvcmUsXG4gICo6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICBib2R5IHtcbiAgICBwYWRkaW5nOiAxMG1tICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gIH1cbiAgYSxcbiAgYTp2aXNpdGVkIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbiAgLmNvbnRlbnQgaGVhZGVyIHtcbiAgICBtaW4taGVpZ2h0OiAwO1xuICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICB9XG4gIC5jb250ZW50IC5wb3N0LWNvbnRlbnQsXG4gIC5jb250ZW50IC5wYWdlLWNvbnRlbnQge1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG4gIC5jb250ZW50IC5wb3N0LWNvbnRlbnQgYVtocmVmXTphZnRlcixcbiAgLmNvbnRlbnQgLnBhZ2UtY29udGVudCBhW2hyZWZdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cihocmVmKSBcIilcIjtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICB9XG4gIC5jb250ZW50IC5wb3N0LWNvbnRlbnQgYVtocmVmXj1cIiNcIl06YWZ0ZXIsXG4gIC5jb250ZW50IC5wYWdlLWNvbnRlbnQgYVtocmVmXj1cIiNcIl06YWZ0ZXIsXG4gIC5jb250ZW50IC5wb3N0LWNvbnRlbnQgYVtocmVmXj1cImphdmFzY3JpcHQ6XCJdOmFmdGVyLFxuICAuY29udGVudCAucGFnZS1jb250ZW50IGFbaHJlZl49XCJqYXZhc2NyaXB0OlwiXTphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgfVxuICAuY29udGVudCAucG9zdC1jb250ZW50IGFiYnJbdGl0bGVdOmFmdGVyLFxuICAuY29udGVudCAucGFnZS1jb250ZW50IGFiYnJbdGl0bGVdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cih0aXRsZSkgXCIpXCI7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgfVxuICBwcmUsXG4gIGJsb2NrcXVvdGUge1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgfVxuICB0aGVhZCB7XG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwO1xuICB9XG4gIHRyLFxuICBpbWcge1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgfVxuICBpbWcge1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG4gIHAsXG4gIGgyLFxuICBoMyxcbiAgaDQsXG4gIGg1LFxuICBoNiB7XG4gICAgb3JwaGFuczogMztcbiAgICB3aWRvd3M6IDM7XG4gIH1cbiAgaDIsXG4gIGgzIHtcbiAgICBwYWdlLWJyZWFrLWFmdGVyOiBhdm9pZDtcbiAgfVxuICAubmF2aWdhdGlvbixcbiAgLmZvb3RlciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLmhpZ2hsaWdodCA+IHByZSxcbi5oaWdobGlnaHRlci1yb3VnZSBwcmUuaGlnaGxpZ2h0IHtcbiAgYmFja2dyb3VuZDogcmdiYSg0OSwgNSwgNjMsIDAuMDIpO1xufVxuLmhpZ2hsaWdodCBjb2RlLFxuLmhpZ2hsaWdodGVyLXJvdWdlIGNvZGUge1xuICBjb2xvcjogIzcyNzI3Mjtcbn1cbi5oaWdobGlnaHQgLmVycixcbi5oaWdobGlnaHRlci1yb3VnZSAuZXJyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNjgsIDcsIDIyMCwgMC4xKTtcbn1cbi5oaWdobGlnaHQgLmMsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLmMge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG4uaGlnaGxpZ2h0IC5jbSxcbi5oaWdobGlnaHRlci1yb3VnZSAuY20ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG4uaGlnaGxpZ2h0IC5jcCxcbi5oaWdobGlnaHRlci1yb3VnZSAuY3Age1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5oaWdobGlnaHQgLmMxLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5jMSB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbi5oaWdobGlnaHQgLmNzLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5jcyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG4uaGlnaGxpZ2h0IC5uYyxcbi5oaWdobGlnaHRlci1yb3VnZSAubmMge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5oaWdobGlnaHQgLm5lLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5uZSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLmhpZ2hsaWdodCAubmYsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLm5mIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uaGlnaGxpZ2h0IC5vLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5vIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uaGlnaGxpZ2h0IC5vdyxcbi5oaWdobGlnaHRlci1yb3VnZSAub3cge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5oaWdobGlnaHQgLmdzLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5ncyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLmhpZ2hsaWdodCAuZ2UsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLmdlIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuLmhpZ2hsaWdodCAuayxcbi5oaWdobGlnaHRlci1yb3VnZSAuayB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLmhpZ2hsaWdodCAua3QsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLmt0IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uaGlnaGxpZ2h0IC5rYyxcbi5oaWdobGlnaHRlci1yb3VnZSAua2Mge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5oaWdobGlnaHQgLmtkLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5rZCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLmhpZ2hsaWdodCAua3AsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLmtwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uaGlnaGxpZ2h0IC5rcixcbi5oaWdobGlnaHRlci1yb3VnZSAua3Ige1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5oaWdobGlnaHQgLmVycixcbi5oaWdobGlnaHRlci1yb3VnZSAuZXJyIHtcbiAgY29sb3I6ICMyMGE3OWY7XG59XG4uaGlnaGxpZ2h0IC54LFxuLmhpZ2hsaWdodGVyLXJvdWdlIC54IHtcbiAgY29sb3I6ICMyMGE3YWQ7XG59XG4uaGlnaGxpZ2h0IC5uLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5uIHtcbiAgY29sb3I6ICMyMGE3YmM7XG59XG4uaGlnaGxpZ2h0IC5uYSxcbi5oaWdobGlnaHRlci1yb3VnZSAubmEge1xuICBjb2xvcjogIzIwYTdjYjtcbn1cbi5oaWdobGlnaHQgLm5iLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5uYiB7XG4gIGNvbG9yOiAjMjA5YmNkO1xufVxuLmhpZ2hsaWdodCAuYnAsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLmJwIHtcbiAgY29sb3I6ICMyMDhjY2Q7XG59XG4uaGlnaGxpZ2h0IC5uYyxcbi5oaWdobGlnaHRlci1yb3VnZSAubmMge1xuICBjb2xvcjogIzIwN2RjZDtcbn1cbi5oaWdobGlnaHQgLm5vLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5ubyB7XG4gIGNvbG9yOiAjMjA2ZmNkO1xufVxuLmhpZ2hsaWdodCAubmQsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLm5kIHtcbiAgY29sb3I6ICMyMDYwY2Q7XG59XG4uaGlnaGxpZ2h0IC5uaSxcbi5oaWdobGlnaHRlci1yb3VnZSAubmkge1xuICBjb2xvcjogIzIwNTFjZDtcbn1cbi5oaWdobGlnaHQgLm5lLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5uZSB7XG4gIGNvbG9yOiAjMjA0M2NkO1xufVxuLmhpZ2hsaWdodCAubmYsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLm5mIHtcbiAgY29sb3I6ICMyMDM0Y2Q7XG59XG4uaGlnaGxpZ2h0IC5ubCxcbi5oaWdobGlnaHRlci1yb3VnZSAubmwge1xuICBjb2xvcjogIzIwMjZjZDtcbn1cbi5oaWdobGlnaHQgLm5uLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5ubiB7XG4gIGNvbG9yOiAjMjAxN2NkO1xufVxuLmhpZ2hsaWdodCAubngsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLm54IHtcbiAgY29sb3I6ICMyMDA4Y2Q7XG59XG4uaGlnaGxpZ2h0IC5udCxcbi5oaWdobGlnaHRlci1yb3VnZSAubnQge1xuICBjb2xvcjogIzJhMDRjZDtcbn1cbi5oaWdobGlnaHQgLm52LFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5udiB7XG4gIGNvbG9yOiAjMzkwNGNkO1xufVxuLmhpZ2hsaWdodCAudmMsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLnZjIHtcbiAgY29sb3I6ICM0NzA0Y2Q7XG59XG4uaGlnaGxpZ2h0IC52Zyxcbi5oaWdobGlnaHRlci1yb3VnZSAudmcge1xuICBjb2xvcjogIzU2MDRjZDtcbn1cbi5oaWdobGlnaHQgLnZpLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC52aSB7XG4gIGNvbG9yOiAjNjUwNGNkO1xufVxuLmhpZ2hsaWdodCAuZyxcbi5oaWdobGlnaHRlci1yb3VnZSAuZyB7XG4gIGNvbG9yOiAjNzMwNGNkO1xufVxuLmhpZ2hsaWdodCAuZ2QsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLmdkIHtcbiAgY29sb3I6ICM4MjA0Y2Q7XG59XG4uaGlnaGxpZ2h0IC5nZSxcbi5oaWdobGlnaHRlci1yb3VnZSAuZ2Uge1xuICBjb2xvcjogIzkxMDRjZDtcbn1cbi5oaWdobGlnaHQgLmdyLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5nciB7XG4gIGNvbG9yOiAjOWYwNGNkO1xufVxuLmhpZ2hsaWdodCAuZ2gsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLmdoIHtcbiAgY29sb3I6ICNhZTA0Y2Q7XG59XG4uaGlnaGxpZ2h0IC5naSxcbi5oaWdobGlnaHRlci1yb3VnZSAuZ2kge1xuICBjb2xvcjogI2JjMDRjZDtcbn1cbi5oaWdobGlnaHQgLmdvLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5nbyB7XG4gIGNvbG9yOiAjYzQwNGM2O1xufVxuLmhpZ2hsaWdodCAuZ3AsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLmdwIHtcbiAgY29sb3I6ICNjNDA0Yjc7XG59XG4uaGlnaGxpZ2h0IC5ncyxcbi5oaWdobGlnaHRlci1yb3VnZSAuZ3Mge1xuICBjb2xvcjogI2M0MDRhODtcbn1cbi5oaWdobGlnaHQgLmd1LFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5ndSB7XG4gIGNvbG9yOiAjYzQwNDlhO1xufVxuLmhpZ2hsaWdodCAuZ3QsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLmd0IHtcbiAgY29sb3I6ICNjNDA0OGI7XG59XG4uaGlnaGxpZ2h0IC5nbCxcbi5oaWdobGlnaHRlci1yb3VnZSAuZ2wge1xuICBjb2xvcjogI2M0MDQ3ZDtcbn1cbi5oaWdobGlnaHQgLmssXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLmsge1xuICBjb2xvcjogI2M0MDQ2ZTtcbn1cbi5oaWdobGlnaHQgLmtjLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5rYyB7XG4gIGNvbG9yOiAjYzQwNDVmO1xufVxuLmhpZ2hsaWdodCAua2QsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLmtkIHtcbiAgY29sb3I6ICNjNDA0NTE7XG59XG4uaGlnaGxpZ2h0IC5rbixcbi5oaWdobGlnaHRlci1yb3VnZSAua24ge1xuICBjb2xvcjogI2M0MDQ0Mjtcbn1cbi5oaWdobGlnaHQgLmtwLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5rcCB7XG4gIGNvbG9yOiAjYzQwNDMzO1xufVxuLmhpZ2hsaWdodCAua3IsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLmtyIHtcbiAgY29sb3I6ICNjNDA5MmE7XG59XG4uaGlnaGxpZ2h0IC5rdCxcbi5oaWdobGlnaHRlci1yb3VnZSAua3Qge1xuICBjb2xvcjogI2M0MTcyYTtcbn1cbi5oaWdobGlnaHQgLmt2LFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5rdiB7XG4gIGNvbG9yOiAjYzQyNjJhO1xufVxuLmhpZ2hsaWdodCAudyxcbi5oaWdobGlnaHRlci1yb3VnZSAudyB7XG4gIGNvbG9yOiAjYzQzNDJhO1xufVxuLmhpZ2hsaWdodCAubCxcbi5oaWdobGlnaHRlci1yb3VnZSAubCB7XG4gIGNvbG9yOiAjYzQ0MzJhO1xufVxuLmhpZ2hsaWdodCAubGQsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLmxkIHtcbiAgY29sb3I6ICNjNDUyMmE7XG59XG4uaGlnaGxpZ2h0IC5zLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5zIHtcbiAgY29sb3I6ICNjNDYwMmE7XG59XG4uaGlnaGxpZ2h0IC5zYixcbi5oaWdobGlnaHRlci1yb3VnZSAuc2Ige1xuICBjb2xvcjogI2M0NmYyYTtcbn1cbi5oaWdobGlnaHQgLnNjLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5zYyB7XG4gIGNvbG9yOiAjYzQ3ZDJhO1xufVxuLmhpZ2hsaWdodCAuc2QsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLnNkIHtcbiAgY29sb3I6ICNjNDhjMmE7XG59XG4uaGlnaGxpZ2h0IC5zMixcbi5oaWdobGlnaHRlci1yb3VnZSAuczIge1xuICBjb2xvcjogI2M0OWIyYTtcbn1cbi5oaWdobGlnaHQgLnNlLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5zZSB7XG4gIGNvbG9yOiAjYzFhNzJhO1xufVxuLmhpZ2hsaWdodCAuc2gsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLnNoIHtcbiAgY29sb3I6ICNiMmE3MmE7XG59XG4uaGlnaGxpZ2h0IC5zaSxcbi5oaWdobGlnaHRlci1yb3VnZSAuc2kge1xuICBjb2xvcjogI2E0YTcyYTtcbn1cbi5oaWdobGlnaHQgLnN4LFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5zeCB7XG4gIGNvbG9yOiAjOTVhNzJhO1xufVxuLmhpZ2hsaWdodCAuc3IsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLnNyIHtcbiAgY29sb3I6ICM4N2E3MmE7XG59XG4uaGlnaGxpZ2h0IC5zMSxcbi5oaWdobGlnaHRlci1yb3VnZSAuczEge1xuICBjb2xvcjogIzc4YTcyYTtcbn1cbi5oaWdobGlnaHQgLnNzLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5zcyB7XG4gIGNvbG9yOiAjNjlhNzJhO1xufVxuLmhpZ2hsaWdodCAubSxcbi5oaWdobGlnaHRlci1yb3VnZSAubSB7XG4gIGNvbG9yOiAjNWJhNzJhO1xufVxuLmhpZ2hsaWdodCAubWYsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLm1mIHtcbiAgY29sb3I6ICM0Y2E3MmE7XG59XG4uaGlnaGxpZ2h0IC5taCxcbi5oaWdobGlnaHRlci1yb3VnZSAubWgge1xuICBjb2xvcjogIzNlYTcyYTtcbn1cbi5oaWdobGlnaHQgLm1pLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5taSB7XG4gIGNvbG9yOiAjMmZhNzJhO1xufVxuLmhpZ2hsaWdodCAuaWwsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLmlsIHtcbiAgY29sb3I6ICMyMGE3MmE7XG59XG4uaGlnaGxpZ2h0IC5tbyxcbi5oaWdobGlnaHRlci1yb3VnZSAubW8ge1xuICBjb2xvcjogIzIwYTczOTtcbn1cbi5oaWdobGlnaHQgLm1iLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5tYiB7XG4gIGNvbG9yOiAjMjBhNzQ3O1xufVxuLmhpZ2hsaWdodCAubXgsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLm14IHtcbiAgY29sb3I6ICMyMGE3NTY7XG59XG4uaGlnaGxpZ2h0IC5vLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5vIHtcbiAgY29sb3I6ICMyMGE3NjQ7XG59XG4uaGlnaGxpZ2h0IC5vdyxcbi5oaWdobGlnaHRlci1yb3VnZSAub3cge1xuICBjb2xvcjogIzIwYTc3Mztcbn1cbi5oaWdobGlnaHQgLnAsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgLnAge1xuICBjb2xvcjogIzIwYTc4Mjtcbn1cbi5oaWdobGlnaHQgLnBpLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5waSB7XG4gIGNvbG9yOiAjMjBhNzkwO1xufVxuLmhpZ2hsaWdodCAuYyxcbi5oaWdobGlnaHRlci1yb3VnZSAuYyB7XG4gIGNvbG9yOiAjNTA1NzhjO1xuICBvcGFjaXR5OiAuNjtcbn1cbi5oaWdobGlnaHQgLmNkLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5jZCB7XG4gIGNvbG9yOiAjNzM0MjhjO1xuICBvcGFjaXR5OiAuNjtcbn1cbi5oaWdobGlnaHQgLmNtLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5jbSB7XG4gIGNvbG9yOiAjODg0MjZhO1xuICBvcGFjaXR5OiAuNjtcbn1cbi5oaWdobGlnaHQgLmNwLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5jcCB7XG4gIGNvbG9yOiAjODg2NTU1O1xuICBvcGFjaXR5OiAuNjtcbn1cbi5oaWdobGlnaHQgLmMxLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5jMSB7XG4gIGNvbG9yOiAjNjU3OTU1O1xuICBvcGFjaXR5OiAuNjtcbn1cbi5oaWdobGlnaHQgLmNzLFxuLmhpZ2hsaWdodGVyLXJvdWdlIC5jcyB7XG4gIGNvbG9yOiAjNTA3OTc4O1xuICBvcGFjaXR5OiAuNjtcbn1cbi5oaWdobGlnaHQgdGFibGUsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgdGFibGUsXG4uaGlnaGxpZ2h0IHRhYmxlIHRoLFxuLmhpZ2hsaWdodGVyLXJvdWdlIHRhYmxlIHRoLFxuLmhpZ2hsaWdodCB0YWJsZSB0ZCxcbi5oaWdobGlnaHRlci1yb3VnZSB0YWJsZSB0ZCxcbi5oaWdobGlnaHQgdGFibGUgdGQgcHJlLFxuLmhpZ2hsaWdodGVyLXJvdWdlIHRhYmxlIHRkIHByZSB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgZm9udC1zaXplOiAxMDAlO1xufVxuLmhpZ2hsaWdodCB0YWJsZSBwcmUsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgdGFibGUgcHJlIHtcbiAgb3ZlcmZsb3cteDogdmlzaWJsZTtcbn1cbi5oaWdobGlnaHQgdGFibGUgLmd1dHRlcjpmaXJzdC1jaGlsZCxcbi5oaWdobGlnaHRlci1yb3VnZSB0YWJsZSAuZ3V0dGVyOmZpcnN0LWNoaWxkLFxuLmhpZ2hsaWdodCB0YWJsZSAuZ3V0dGVyOmxhc3QtY2hpbGQsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgdGFibGUgLmd1dHRlcjpsYXN0LWNoaWxkIHtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xufVxuLmhpZ2hsaWdodCB0YWJsZSAuZ3V0dGVyIC5saW5lbm8sXG4uaGlnaGxpZ2h0ZXItcm91Z2UgdGFibGUgLmd1dHRlciAubGluZW5vIHtcbiAgY29sb3I6ICM3MjcyNzI7XG4gIG9wYWNpdHk6IC41O1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cbi5oaWdobGlnaHQgdGFibGUgLmNvZGUsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgdGFibGUgLmNvZGUge1xuICBwYWRkaW5nLWxlZnQ6IDFlbTtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbDloY0hBdllYTnpaWFJ6TDNSb1pXMWxjeTlqZFhKMFlXNWhMMTlzWlhOekwyMXBlR2x1Y3k1c1pYTnpJaXdpWDJGd2NDOWhjM05sZEhNdmRHaGxiV1Z6TDJOMWNuUmhibUV2WDJ4bGMzTXZjbVZ6WlhRdWJHVnpjeUlzSWw5aGNIQXZZWE56WlhSekwxOXNaWE56TDNWelpYSXViR1Z6Y3lJc0lsOWhjSEF2WVhOelpYUnpMM1JvWlcxbGN5OWpkWEowWVc1aEwxOXNaWE56TDJOdmJXMXZiaTVzWlhOeklpd2lYMkZ3Y0M5aGMzTmxkSE12ZEdobGJXVnpMMk4xY25SaGJtRXZYMnhsYzNNdmNHeDFaMmx1Y3k1c1pYTnpJaXdpWDJGd2NDOWhjM05sZEhNdmRHaGxiV1Z6TDJOMWNuUmhibUV2WDJ4bGMzTXZjSEpwYm5RdWJHVnpjeUlzSWw5aGNIQXZZWE56WlhSekwzUm9aVzFsY3k5amRYSjBZVzVoTDE5c1pYTnpMMk52YlhCdmJtVnVkSE12Y21GdVpHOXRhWHBsWkM1c1pYTnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVTlGTEVkQlFVTTdRVUZCVXl4SFFVRkRPMFZCUTFRc1kwRkJRVHRGUVVOQkxGTkJRVk1zUlVGQlZEczdRVUZIUml4SFFVRkRPMFZCUTBNc1YwRkJRVHM3UVVOVVNqdEJRVU5CTEVOQlFVTTdRVUZEUkN4RFFVRkRPMFZCUTBNc1ZVRkJRVHRGUVVOQkxGTkJRVUU3UlVGRFFTeHpRa0ZCUVRzN1FVRkhSanRGUVVORkxHVkJRVUU3UlVGRFFTeHpRa0ZCUVR0RlFVTkJMR3REUVVGQk8wVkJRMEVzWjBOQlFVRTdSVUZEUVN4dFEwRkJRVHRGUVVOQkxHdERRVUZCTzBWQlMwRXNaMEpCUVVFN08wRkJSMFk3UlVGRFJTeGxRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3huUkVOMFFuRkNMR3RDUVVGclFpeHhRMFJ6UW5aRE8wVkJRMEVzWjBKQlFVRTdSVUZEUVN4MVFrRkJRVHRGUVVOQkxHOURRVUZCTzBWQlEwRXNWMEZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzZDBKQlFVRTdPMEZCUlVFc1VVRkJiVU03UlVFNFJYSkRPMGxFY2taRkxHbENRVUZCTzBsQlEwRXNhMEpCUVVFN1NVTlJSU3hwUWtGQlFUczdPMEZCUjBZc1VVRkJiVU03UlVGNVJYSkRPMGxFY2taRkxHbENRVUZCTzBsQlEwRXNhMEpCUVVFN1NVTmhSU3hwUWtGQlFUczdPMEZCUjBZc1VVRkJiVU03UlVGdlJYSkRPMGxCYmtWSkxHbENRVUZCT3pzN1FVRkxTanRCUVVOQk8wRkJRMEU3UVVGRFFUdEZRVU5GTEdOQlFVRTdSVUZEUVN4dlFrRkJRVHRGUVVOQkxHdENRVUZCTzBWQlEwRXNiMEpCUVVFN08wRkJTMFk3UVVGRFFUdEJRVU5CTEUxQlFVMDdRVUZEVGp0RlFVTkZMSE5DUVVGQk96dEJRVWxHTzBGQlFVYzdSVUZEUkN4WFFVRkJPMFZCUTBFc2NVSkJRVUU3UlVGRFFTdzBSa0ZCUVRzN1FVRkZRU3hEUVVGRE8wRkJRVVFzVFVGQlF6dEJRVU5FTEVOQlFVTTdRVUZCUkN4TlFVRkRPMFZCUTBNc05FWkJRVUU3UlVGRFFTd3dRa0ZCUVR0RlFVTkJMSGxDUVVGQk96dEJRVWRHTEVOQlFVTTdRVUZCUkN4TlFVRkRPMFZCUTBNc1YwRkJRVHRGUVVOQkxHMUNRVUZCT3p0QlFVbEtPMFZCUTBVc1owSkJRVUU3UlVGRFFTeGxRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzWVVGQlFUczdRVUZIUmp0QlFVRkxPMFZCUTBnc1UwRkJRVHM3UVVGSFJqdEZRVU5GTERaQ1FVRkJPenRCUVVkR08wVkJRMFVzVjBGQlFUdEZRVU5CTEZkQlFVRTdPMEZCUlVFc1RVRkJUVHRGUVVOS0xHTkJRVUU3TzBGRmRFZEdMRlZCUVVNN1JVRkRReXgxUWtGQmRVSXNVVUZCVVN4UlFVRlJMRTFCUVhaRE96dEJRVTlLTzBWQlEwVXNiMEpCUVVFN1JVRkRRU3gxUWtGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeGpRVUZCTzBWQlEwRXNhVUpCUVVFN1JVRkRRU3h4UWtGQlFUdEZRVU5CTEhsQ1FVRkJPenRCUVZKR0xGZEJWVVU3UlVGRFJTeHhRa0ZCUVR0RlFVTkJMR05CUVVFN1JVRkRRU3huUWtGQlFUczdRVUZpU2l4WFFWVkZMRWRCUzBVN1JVRkRSU3h2UWtGQlFUczdRVUZGUVN4WFFWSktMRWRCUzBVc1JVRkhSenRCUVVORUxGZEJWRW9zUjBGTFJTeEZRVWxITzBWQlEwTXNZMEZCUVR0RlFVTkJMSEZDUVVGQk96dEJRVTlTTEZGQlJVVTdSVUZEUlN4alFVRkJPenRCUVV0S0xFbEJRVWtzVFVGQlR6dEZRVU5VTEdOQlFVRTdPMEZCU1VZN1JVRkRSU3h4UWtGQlFUczdRVWh5UkVFc1VVRkJRenRCUVVGVExGRkJRVU03UlVGRFZDeGpRVUZCTzBWQlEwRXNVMEZCVXl4RlFVRlVPenRCUVVkR0xGRkJRVU03UlVGRFF5eFhRVUZCT3p0QlJ6aERTaXhSUVU5RkxGRkJSMFVzU1VGQlJ6dEZRVU5FTERKQ1FVRkJPenRCUVZoT0xGRkJUMFVzVVVGSFJTeEpRVUZITEZkQlNVUXNTVUZCUnp0RlFVTkVMREpDUVVGQk96dEJRV1pTTEZGQlQwVXNVVUZIUlN4SlFVRkhMRmRCU1VRc1NVRkJSeXhYUVVsRUxFbEJRVWM3UlVGRFJDd3lRa0ZCUVRzN1FVRnVRbFlzVVVGUFJTeFJRVWRGTEVsQlFVY3NWMEZKUkN4SlFVRkhMRmRCU1VRc1NVRkJSeXhYUVVsRUxFbEJRVWM3UlVGRFJDd3lRa0ZCUVRzN1FVRjJRbG9zVVVFclFrVXNZMEZIUlN4SlFVRkhPMEZCYkVOUUxGRkJaME5GTEdOQlJVVXNTVUZCUnp0RlFVTkVMR0ZCUVVFN08wRkJia05PTEZGQkswSkZMR05CUjBVc1NVRkJSeXhaUVVkRUxFbEJRVWM3UVVGeVExUXNVVUZuUTBVc1kwRkZSU3hKUVVGSExGbEJSMFFzU1VGQlJ6dEZRVU5FTEdGQlFVRTdPMEZCZEVOU0xGRkJNa05GTzBWQlEwVXNhVUpCUVVFN08wRkJUVUVzVVVGUVJpeEZRVTlITEVsQlFVazdSVUZEU0N3NFFrRkJRVHM3UVVGdVJFNHNVVUYxUkVVN1JVRkRSU3h4UWtGQlFUdEZRVU5CTEhWQ1FVRkJPenRCUVhwRVNpeFJRVFJFUlR0RlFVTkZMR0ZCUVVFN1JVRkRRU3haUVVGWkxESkNRVUZhTzBWQlIwRXNiVUpCUVVFN1JVRkRRU3h6UWtGQlFUdEZRVU5CTEhGQ1FVRkJPMFZCUTBFc2MwSkJRVUU3UlVGRFFTeDFRa0ZCUVR0RlFVTkJMQ3RDUVVGQk8wVklia2RHTEd0Q1FVRkJPMFZCUTBFc2JVSkJRVUU3UlVGSlFTeHJRa0ZCUVR0RlFVTkJMRzFDUVVGQk96dEJSMmxIUlN4UlFVRnRRenRGUVdkMFFuWkRMRkZCT1hSQ1JUdEpRV1ZKTEZsQlFWa3NPRUpCUVZvN1NVRkRRU3h0UWtGQlFUdEpRVU5CTEhOQ1FVRkJPMGxJTVVkS0xHbENRVUZCTzBsQlEwRXNhMEpCUVVFN1NVRkpRU3hwUWtGQlFUdEpRVU5CTEd0Q1FVRkJPenM3UVVkNVIwVXNVVUZCYlVNN1JVRjNjMEoyUXl4UlFUbDBRa1U3U1VoNlJrRXNhVUpCUVVFN1NVRkRRU3hyUWtGQlFUdEpRVWxCTEdsQ1FVRkJPMGxCUTBFc2EwSkJRVUU3T3p0QlIzVkNSaXhSUVRSRVJTeFBRVEpDUlR0RlNHaEpSaXhsUVVGQk8wVkJRMEVzYVVKQlFVRTdSVUZEUVN4MVFrRkJRVHRGUjJsSlNTeHBRa0ZCUVR0RlFVTkJMR0ZCUVVFN1JVRkRRU3huUWtGQlFUczdRVUZGUVN4UlFVRnRRenRGUVRSeVFucERMRkZCT1hSQ1JTeFBRVEpDUlR0SlFWTkpMR1ZCUVVFN096dEJRV2hIVWl4UlFUUkVSU3hQUVRKQ1JTeEhRV1ZGTzBGQmRFZE9MRkZCTkVSRkxFOUJNa0pGTEVkQlowSkZPMFZCUlVVc1kwRkJRVHRGUVVOQkxHVkJRVUU3UlVGSlFTeGpRVUZCTzBWQlEwRXNaVUZCUVR0RlFVTkJMRzFDUVVGQk96dEJRVVZCTEZGQlFXMURPMFZCZDNGQ00wTXNVVUU1ZEVKRkxFOUJNa0pGTEVkQlpVVTdSVUZ2Y2tKT0xGRkJPWFJDUlN4UFFUSkNSU3hIUVdkQ1JUdEpRVmxKTEhOQ1FVRkJPMGxCUTBFc2RVSkJRVUU3T3p0QlFYQklWaXhSUVRSRVJTeFBRVGhFUlR0RlFVTkZMRzFDUVVGQk96dEJRVE5JVGl4UlFUUkVSU3hQUVc5RlJUdEZRVU5GTEhOQ1FVRkJPMFZCUTBFc1kwRkJRVHM3UVVGc1NVNHNVVUUwUkVVc1QwRjVSVVU3UlVGRFJTeGpRVUZCTzBWQlEwRXNhVUpCUVVFN08wRkJka2xPTEZGQk1rbEZPMEZCTTBsR0xGRkJORWxGTzBGQk5VbEdMRkZCTmtsRk8wRkJOMGxHTEZGQk9FbEZPMEZCT1VsR0xGRkJLMGxGTzBWQlEwVXNjVUpCUVVFN1JVaHVURVlzWTBGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc1YwRkJRVHM3UVVkcFEwWXNVVUZ2U2tVN1FVRndTa1lzVVVGeFNrVTdSVUZEUlN4eFFrRkJRVHRGUVVOQkxHZENRVUZCTzBWQlEwRXNiVUpCUVVFN08wRkJSVUVzVVVGQmJVTTdSVUZuYjBKMlF5eFJRWFJ2UWtVN1JVRnpiMEpHTEZGQmNtOUNSVHRKUVUxSkxHZENRVUZCT3pzN1FVRXpTazRzVVVGdlNrVXNSMEZWUlR0QlFUbEtTaXhSUVhGS1JTeEhRVk5GTzBWQlEwVXNkVUpCUVVFN08wRkJSVUVzVVVGaVNpeEhRVlZGTEVkQlIwYzdRVUZCUkN4UlFWcEtMRWRCVTBVc1IwRkhSenRGUVVORExHdENRVUZCTzBWQlEwRXNjVUpCUVVFN1JVRkRRU3hWUVVGQk8wVkJRMEVzWlVGQlFUdEZRVU5CTEdsQ1FVRkJPMFZCUTBFc1kwRkJRVHRGUVVOQkxIVkNRVUZCTzBWQlEwRXNhVUpCUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzYjBKQlFVRTdPMEZCTTB0U0xGRkJiMHBGTEVkQlZVVXNSMEZuUWtVN1FVRTVTMDRzVVVGeFNrVXNSMEZUUlN4SFFXZENSVHRCUVRsTFRpeFJRVzlLUlN4SFFWVkZMRWRCYVVKRk8wRkJMMHRPTEZGQmNVcEZMRWRCVTBVc1IwRnBRa1U3UlVGRFJTeG5Ra0ZCUVR0RlFVTkJMR2RDUVVGQk96dEJRV3BNVWl4UlFYTk1SU3hIUVVGSExFZEJRVVU3UlVGRFNDeFRRVUZUTEVkQlFWUTdSVUZEUVN4dFFrRkJRVHM3UVVGNFRFb3NVVUV5VEVVc1IwRkJSeXhIUVVGRk8wVkJRMGdzZFVKQlFVRTdSVUZEUVN4VFFVRlRMR05CUVdNc1IwRkJka0k3UlVGRFFTeHRRa0ZCUVRzN1FVRTVURW9zVVVGcFRVVTdSVUZEUlN4MVFrRkJRVHM3UVVGRlFTeFJRVUZ0UXp0RlFYTnNRblpETEZGQmVteENSVHRKUVVsSkxHZENRVUZCT3pzN1FVRkxRU3hSUVZSS0xFZEJUMFVzUjBGRlJ6dEZRVU5ETEd0Q1FVRkJPMFZCUTBFc1ZVRkJRVHRGUVVOQkxHbENRVUZCTzBWQlEwRXNVMEZCVXl4SFFVRlVPMFZCUTBFc1YwRkJRVHRGUVVOQkxHOUNRVUZCT3p0QlFXaE9VaXhSUVdsTlJTeEhRVzFDUlR0RlFVTkZMSEZDUVVGQk96dEJRWEpPVGl4UlFYbE9SVHRCUVhwT1JpeFJRVEJPUlR0QlFURk9SaXhSUVRKT1JUdEJRVE5PUml4UlFUUk9SVHRGUVVORkxHTkJRVUU3UlVGRFFTeFBRVUZQTEhOQ1FVRlFPMFZCUTBFc1dVRkJXU3d5UWtGQldqdEZRVVZCTEhGQ1FVRkJPenRCUVVWQkxGRkJRVzFETzBWQmRXcENka01zVVVGcWEwSkZPMFZCYVd0Q1JpeFJRV2hyUWtVN1JVRm5hMEpHTEZGQkwycENSVHRGUVN0cVFrWXNVVUU1YWtKRk8wbEJVVWtzVDBGQlR5eHpRa0ZCVUR0SlFVTkJMRmxCUVZrc09FSkJRVm83U1VnM1VFb3NhVUpCUVVFN1NVRkRRU3hyUWtGQlFUczdPMEZIYVZGRkxGRkJRVzFETzBWQloycENka01zVVVGcWEwSkZPMFZCYVd0Q1JpeFJRV2hyUWtVN1JVRm5hMEpHTEZGQkwycENSVHRGUVN0cVFrWXNVVUU1YWtKRk8wbEJaVWtzVDBGQlR5eHpRa0ZCVUR0SlNHNVJTaXhwUWtGQlFUdEpRVU5CTEd0Q1FVRkJPenM3UVVkM1VVVXNVVUY0UWtZc1NVRjNRa2M3UVVGQlJDeFJRWFpDUml4TlFYVkNSenRCUVVGRUxGRkJkRUpHTEU5QmMwSkhPMEZCUVVRc1VVRnlRa1lzVTBGeFFrYzdRVUZEUkN4UlFYcENSaXhKUVhsQ1J6dEJRVUZFTEZGQmVFSkdMRTFCZDBKSE8wRkJRVVFzVVVGMlFrWXNUMEYxUWtjN1FVRkJSQ3hSUVhSQ1JpeFRRWE5DUnp0RlFVTkRMR05CUVVFN1JVRkRRU3hsUVVGQk8wVkJRMEVzWlVGQlFUdEZRVU5CTEZkQlFVRTdPMEZCU1VZc1VVRnFRMFlzU1VGcFEwYzdRVUZCUkN4UlFXaERSaXhOUVdkRFJ6dEJRVUZFTEZGQkwwSkdMRTlCSzBKSE8wRkJRVVFzVVVFNVFrWXNVMEU0UWtjN1JVRkRReXhQUVVGUExIVkNRVUZRTzBWSWJsSktMR3RDUVVGQk8wVkJRMEVzYlVKQlFVRTdPMEZIY1ZKSkxGRkJRVzFETzBWQk5HaENla01zVVVGcWEwSkZMRWxCYVVOSE8wVkJaMmxDVEN4UlFXaHJRa1VzVFVGblEwYzdSVUZuYVVKTUxGRkJMMnBDUlN4UFFTdENSenRGUVdkcFFrd3NVVUU1YWtKRkxGTkJPRUpITzBsQlMwY3NUMEZCVHl4elFrRkJVRHRKU0haU1RpeHBRa0ZCUVR0SlFVTkJMR3RDUVVGQk96czdRVWN3VWtrc1VVRkJiVU03UlVGMWFFSjZReXhSUVdwclFrVXNTVUZwUTBjN1JVRm5hVUpNTEZGQmFHdENSU3hOUVdkRFJ6dEZRV2RwUWt3c1VVRXZha0pGTEU5QkswSkhPMFZCWjJsQ1RDeFJRVGxxUWtVc1UwRTRRa2M3U1VGVlJ5eFBRVUZQTEhOQ1FVRlFPMGxJTlZKT0xHbENRVUZCTzBsQlEwRXNhMEpCUVVFN096dEJSMmRUUlN4UlFXaEVSaXhKUVdkRVJ6dEJRVUZFTEZGQkwwTkdMRTFCSzBOSE8wRkJRVVFzVVVFNVEwWXNUMEU0UTBjN1FVRkJSQ3hSUVRkRFJpeFRRVFpEUnp0RlFVTkRMRTlCUVU4c2QwSkJRVkE3UlVoc1Uwb3NiVUpCUVVFN1JVRkRRU3h2UWtGQlFUczdRVWR2VTBrc1VVRkJiVU03UlVFMlowSjZReXhSUVdwclFrVXNTVUZuUkVjN1JVRnBhRUpNTEZGQmFHdENSU3hOUVN0RFJ6dEZRV2xvUWt3c1VVRXZha0pGTEU5Qk9FTkhPMFZCYVdoQ1RDeFJRVGxxUWtVc1UwRTJRMGM3U1VGTFJ5eFBRVUZQTEhOQ1FVRlFPMGxJZEZOT0xHbENRVUZCTzBsQlEwRXNhMEpCUVVFN096dEJSM2xUU1N4UlFVRnRRenRGUVhkblFucERMRkZCYW10Q1JTeEpRV2RFUnp0RlFXbG9Ra3dzVVVGb2EwSkZMRTFCSzBOSE8wVkJhV2hDVEN4UlFTOXFRa1VzVDBFNFEwYzdSVUZwYUVKTUxGRkJPV3BDUlN4VFFUWkRSenRKUVZWSExFOUJRVThzYzBKQlFWQTdTVWd6VTA0c2FVSkJRVUU3U1VGRFFTeHJRa0ZCUVRzN08wRkhLMU5GTEZGQkwwUkdMRWxCSzBSSE8wRkJRVVFzVVVFNVJFWXNUVUU0UkVjN1FVRkJSQ3hSUVRkRVJpeFBRVFpFUnp0QlFVRkVMRkZCTlVSR0xGTkJORVJITzBWQlEwTXNWMEZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc2IwSkJRVUU3TzBGQlJVRXNVVUZCYlVNN1JVRXlabnBETEZGQmFtdENSU3hKUVN0RVJ6dEZRV3RuUWt3c1VVRm9hMEpGTEUxQk9FUkhPMFZCYTJkQ1RDeFJRUzlxUWtVc1QwRTJSRWM3UlVGclowSk1MRkZCT1dwQ1JTeFRRVFJFUnp0SlFWRkhMRmRCUVVFN1NVRkRRU3hsUVVGQk8wbEJRMEVzWjBKQlFVRTdTVUZEUVN4clFrRkJRVHRKUVVOQkxHMUNRVUZCT3pzN1FVRkpTaXhSUVM5RlJpeEpRU3RGUnp0QlFVRkVMRkZCT1VWR0xFMUJPRVZITzBGQlFVUXNVVUUzUlVZc1QwRTJSVWM3UVVGQlJDeFJRVFZGUml4VFFUUkZSenRGUVVORExGbEJRVUU3UlVGRFFTeGxRVUZCTzBWQlEwRXNhVUpCUVVFN1JVRkRRU3hyUWtGQlFUdEZRVU5CTEc5Q1FVRkJPenRCUVVWQkxGRkJRVzFETzBWQk1tVjZReXhSUVdwclFrVXNTVUVyUlVjN1JVRnJaa3dzVVVGb2EwSkZMRTFCT0VWSE8wVkJhMlpNTEZGQkwycENSU3hQUVRaRlJ6dEZRV3RtVEN4UlFUbHFRa1VzVTBFMFJVYzdTVUZSUnl4WFFVRkJPMGxCUTBFc1pVRkJRVHRKUVVOQkxHZENRVUZCTzBsQlEwRXNhVUpCUVVFN1NVRkRRU3h0UWtGQlFUczdPMEZCY0ZSU0xGRkJlVlJGTzBWQlEwVXNhMEpCUVVFN1JVRkRRU3h4UWtGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc1kwRkJRVHM3UVVGRlFTeFJRVUZ0UXp0RlFUSmtka01zVVVGcVpVVTdTVUZQU1N4alFVRkJPenM3UVVGb1ZVNHNVVUY1VkVVc1YwRlZSVHRGUVVORkxHMUNRVUZCTzBWQlEwRXNjMEpCUVVFN1JVRkxRU3h6UWtGQlFUdEZRVVZCTEdkQ1FVRkJPMFZCUTBFc1YwRkJRVHM3UVVGSFFTeFJRWFpDU2l4WFFWVkZMRWxCWVVjN1JVRkRReXhwUWtGQlFUdEZRVU5CTEhGQ1FVRkJPenRCUVVkR0xGRkJRVzFETzBWQmNXTjZReXhSUVdwbFJTeFhRVlZGTzBsSWFGZEdMR05IYlZoelFpeGxTRzVZZEVJN1NVRkRRU3hyUWtGQlFUdEpRVWxCTEdsQ1FVRkJPMGxCUTBFc2EwSkJRVUU3T3p0QlFUZENRU3hSUnpaWFFTeFhRV3REUlN4UFNDOVpSRHRCUVVGVExGRkhObGRXTEZkQmEwTkZMRTlJTDFsVE8wVkJRMVFzWTBGQlFUdEZRVU5CTEZOQlFWTXNSVUZCVkRzN1FVRkhSaXhSUjNkWFFTeFhRV3REUlN4UFNERlpSRHRGUVVORExGZEJRVUU3TzBGSE9FTktMRkZCZVZSRkxGZEJjME5GTzBWQlEwVXNXVUZCUVR0RlFVTkJMR3RDUVVGQk96dEJRVVZCTEZGQk1VTktMRmRCYzBORkxFdEJTVWM3UlVGRlF5eFRRVUZUTEdsQ1FVRlVPenRCU0hKWVRpeFJSekJZUVN4SFNERllRenRGUVVORExHTkJRVUU3UlVGRFFTeFRRVUZUTEVWQlFWUTdSVUZEUVN4VlFVRkJPMFZCUTBFc1YwRkJRVHRGUVVOQkxHZENRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3huUWtGQlFUdEZRVU5CTERaRFFVRkJPenRCUjFGS0xGRkJPRmRGTzBWQlEwVXNZMEZCUVRzN1FVRXZWMG9zVVVGcldFVTdRVUZzV0VZc1VVRnRXRVU3UlVGRFJTeDFRMEZCUVR0RlFVTkJMR05CUVVFN08wRkJjbGhLTEZGQmQxaEZPMFZCUTBVc2JVTkJRVUU3TzBGQmVsaEtMRkZCTkZoRk8wVkJRMFVzWTBGQlFUdEZRVU5CTEhsQ1FVRkJPenRCUVRsWVNpeFJRV2xpUlR0QlFXcGlSaXhSUVd0aVJTeFhRVUZYTzBGQmJHSmlMRkZCYldKRkxHMUNRVUZ0UWl4SlFVRkhPMFZCUTNCQ0xHTkJRVUU3UlVnMVkwWXNiVUpCUVVFN1JVRkRRU3h2UWtGQlFUdEZSelpqUlN4eFFrRkJRVHRGUVVOQkxHZENRVUZCTzBWQlEwRXNZMEZCUVR0RlFVTkJMSFZDUVVGQk8wVkJSVUVzYVVOQlFVRTdPMEZCUlVFc1VVRkJiVU03UlVFMlZuWkRMRkZCZWxkRk8wVkJlVmRHTEZGQmVGZEZMRmRCUVZjN1JVRjNWMklzVVVGMlYwVXNiVUpCUVcxQ0xFbEJRVWM3U1Vob1pIUkNMR2xDUVVGQk8wbEJRMEVzYTBKQlFVRTdTVUZKUVN4cFFrRkJRVHRKUVVOQkxHdENRVUZCT3pzN1FVZDVaRVVzVVVGQmJVTTdSVUYzVm5aRExGRkJlbGRGTzBWQmVWZEdMRkZCZUZkRkxGZEJRVmM3UlVGM1YySXNVVUYyVjBVc2JVSkJRVzFDTEVsQlFVYzdTVWhvWkhSQ0xHbENRVUZCTzBsQlEwRXNhMEpCUVVFN1NVRkpRU3hwUWtGQlFUdEpRVU5CTEd0Q1FVRkJPenM3UVVkMVFrWXNVVUZwWWtVc1NVRjFRa1U3UVVGNFkwb3NVVUZyWWtVc1YwRkJWeXhOUVhOQ1ZEdEJRWGhqU2l4UlFXMWlSU3h0UWtGQmJVSXNTVUZCUnl4VlFYRkNjRUk3UlVGRFJTeHhRa0ZCUVRzN1FVRjZZMDRzVVVFNFkwVXNTMEZGUlR0RlFVTkZMR05CUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzWjBKQlFVRTdSVUZEUVN4clFrRkJRVHRGUVVOQkxGbEJRVUU3UlVGRFFTd3lRMEZCUVR0RlFVVkJMR2RDUVVGQk8wVkJRMEVzWVVGQlFUdEZRVU5CTERSQ1FVRkJPenRCUVVWQkxGRkJaRW9zUzBGRlJTeE5RVmxITzBWQlEwTXNZMEZCUVR0RlFVTkJMQ3RDUVVGQk8wVkJRMEVzYTBKQlFVRTdPMEZCV1VZc1VVRk9TaXhOUVVsSExFMUJRVTBzVTBGQlV5eFJRVVZpTzBGQlFVUXNVVUZNU2l4VFFVZEhMRTFCUVUwc1UwRkJVeXhSUVVWaU8wRkJRVVFzVVVGS1NpeFBRVVZITEUxQlFVMHNVMEZCVXl4UlFVVmlPMFZCUTBNc2IwTkJRVUU3UlVGRFFTeHhRa0ZCUVR0RlFVVkJMR2RDUVVGQk96dEJRUzlsVWl4UlFXOW1SVHRGUVVORkxIbENRVUZCTzBWQlEwRXNhVUpCUVVFN1JVRkRRU3hqUVVGQk8wVkJRMEVzVjBGQlFUdEZTR2hvUWtZc2JVSkJRVUU3UlVGRFFTeHZRa0ZCUVR0RlIybG9Ra1VzY1VKQlFVRTdPMEZCWjBKQkxGRkJRVzFETzBWQloxSjJReXhSUVhSVFJUdEpRWFZDU1N4UFFVRlBMSE5DUVVGUU8wbElibWxDU2l4cFFrRkJRVHRKUVVOQkxHdENRVUZCT3pzN1FVZHphVUpGTEZGQlFXMURPMFZCTWxGMlF5eFJRWFJUUlR0SlFUUkNTU3hQUVVGUExITkNRVUZRTzBsSWVHbENTaXhwUWtGQlFUdEpRVU5CTEd0Q1FVRkJPenM3UVVkMVFrWXNVVUZ2WmtVc1RVRnhRMFU3UVVGNmFFSktMRkZCYjJaRkxFMUJjME5GTzBWQlEwVXNiMEpCUVVFN08wRkJSVUVzVVVGNlEwb3NUVUZ4UTBVc1IwRkpSenRCUVVGRUxGRkJla05LTEUxQmMwTkZMRWRCUjBjN1JVRkRReXh0UWtGQlFUczdRVUZSUml4UlFXeEVTaXhOUVhGRFJTeEhRV0ZITzBGQlFVUXNVVUZzUkVvc1RVRnpRMFVzUjBGWlJ6dEZRVU5ETEc5Q1FVRkJPenRCUVZGR0xGRkJRVzFETzBWQlJXcERMRkZCTjBST0xFMUJjVU5GTEVkQmQwSkxPMFZCUVVRc1VVRTNSRTRzVFVGelEwVXNSMEYxUWtzN1NVRkRReXhwUWtGQlFUczdSVUZIUml4UlFXcEZUaXhOUVhGRFJTeEhRVFJDU3p0RlFVRkVMRkZCYWtWT0xFMUJjME5GTEVkQk1rSkxPMGxCUTBNc2EwSkJRVUU3T3p0QlFVbEtMRkZCUVcxRE8wVkJSV3BETEZGQmVFVk9MRTFCY1VORkxFZEJiVU5MTzBWQlFVUXNVVUY0UlU0c1RVRnpRMFVzUjBGclEwczdTVUZEUXl4cFFrRkJRVHM3UlVGSFJpeFJRVFZGVGl4TlFYRkRSU3hIUVhWRFN6dEZRVUZFTEZGQk5VVk9MRTFCYzBORkxFZEJjME5MTzBsQlEwTXNhMEpCUVVFN096dEJRV3ByUWxZc1VVRnZaa1VzVFVGclJrVTdSVUZEUlN3MFEwRkJRVHRGUVVWQkxHZENRVUZCT3p0QlFYcHJRazRzVVVGdlprVXNUVUYzUmtVN1JVRkRSU3g1UTBGQlFUczdRVUZOVGl4TFFVRkxPMEZCUTB3c1MwRkJTenRGUVVOSUxHMUNRVUZCT3p0QlFVbEZMRXRCVGtNc1NVRkpTRHRCUVVWRkxFdEJURU1zU1VGSFNEdEJRVWRGTEV0QlVFTXNTVUZKU0N4UFFVZEpPMEZCUVVZc1MwRk9ReXhKUVVkSUxFOUJSMGs3UlVGRFFTeHBRa0ZCUVRzN1FVRlNUaXhMUVVGTExFbEJXVWdzUzBGRlJUdEJRV0pLTEV0QlFVc3NTVUZYU0N4TFFVVkZPMFZCUTBVc2FVSkJRVUU3TzBGQlRVNDdSVUZEUlN4alFVRkJPMFZCUTBFc1YwRkJRVHM3UVVGSlJqdEZTSFp3UWtVc1pVRkJRVHRGUVVOQkxHbENRVUZCTzBWQlEwRXNkVUpCUVVFN1JVZDFjRUpCTEdWQlFVRTdSVUZEUVN4blEwRkJRVHM3UVVGSlJqdEZRVU5GTEd0Q1FVRkJPMFZCUTBFc2FVSkJRVUU3UlVGRFFTeHZRMEZCUVR0RlFVTkJMREJDUVVGQk8wVkJRMEVzZVVOQlFVRTdPMEZCUjBFc1VVRkJhME1zY1VKQlFUaENPMFZCTmtwc1JUdEpRVFZLU1N4blFrRkJRVHM3TzBGQlIwWXNVVUZCUXp0RlFVTkRMR3RDUVVGQk8wVkJRMEVzVVVGQlFUdEZRVU5CTEZWQlFVRTdSVUZEUVN4alFVRkJPMFZCUTBFc1ZVRkJRVHRGUVVOQkxGZEJRVUU3UlVGRFFTeHRRa0ZCUVR0RlFVTkJMR3RDUVVGQk8wVkJRMEVzVTBGQlV5eEZRVUZVTzBWQlEwRXNhMDFCUVVFN08wRkJkRUpLTEZGQkswSkZPMFZCUlVVc1kwRkJRVHRGUVVOQkxHVkJRVUU3UlVGRFFTeFhRVUZCTzBWQlEwRXNaVUZCUVR0RlFVTkJMREJEUVVGQk96dEJRVXRLTzBWSWRuSkNSU3hyUWtGQlFUdEZRVU5CTEcxQ1FVRkJPenRCUnpCeVFrRXNVVUZCYTBNc2NVSkJRVGhDTzBWQmRVaHNSVHRKU0d4NlFrVXNZMEZCUVR0SlFVTkJMR1ZCUVVFN096dEJSMmR6UWtZN1FVRkRRVHRCUVVOQk8wVkJRMFVzYlVKQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVOQkxEaENRVUZCT3p0QlFVVkJMRkZCUVcxRE8wVkJNRWR5UXp0RlFVRkJPMFZCUVVFN1NVaDJla0pGTEdOSE9ITkNhMElzWlVnNWMwSnNRanRKUVVOQkxHdENRVUZCTzBsQlNVRXNhVUpCUVVFN1NVRkRRU3hyUWtGQlFUczdPMEZIT0hOQ1JqdEZRVVZGTEdOQlFVRTdPMEZJZW5OQ1FTeFZRVUZETzBWQlEwTXNZMEZCUVR0RlFVTkJMRk5CUVZNc1JVRkJWRHRGUVVOQkxGVkJRVUU3UlVGRFFTeFhRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3hyUWtGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc05rTkJRVUU3TzBGSGIzTkNTaXhQUVVkRk8wRkJTRVlzVDBGSlJUdEJRVXBHTEU5QlQwVTdRVUZRUml4UFFWRkZPMFZCUTBVc1kwRkJRVHM3UVVGTFNqdEZRVU5GTEdOQlFVRTdSVUZEUVN4cFFrRkJRVHM3UVVGR1JpeExRVWxGTzBWSWRuWkNRU3hsUVVGQk8wVkJRMEVzYVVKQlFVRTdSVUZEUVN4MVFrRkJRVHRGUjNWMlFrVXNaVUZCUVR0RlFVTkJMR2RDUVVGQk8wVkJSVUVzVlVGQlFUdEZRVU5CTEZOQlFVRTdPMEZCUlVFc1VVRkJiVU03UlVGdlJYWkRMRXRCTlVWRk8wbEJWVWtzWlVGQlFUczdPMEZCVFVZc1VVRkJiVU03UlVFMFJIWkRMRXRCT1VSRk8wbEJTVWtzWVVGQlFUczdPMEZCVFU0c1UwRkZSVHRGUVVORkxIRkNRVUZCTzBWQlEwRXNXVUZCUVR0RlFVTkJMR0ZCUVVFN1JVRkRRU3hqUVVGQk8wVkJRMEVzYzBKQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHdENRVUZCTzBWQlEwRXNPRUpCUVVFN08wRkJSMEVzVTBGWVJpeExRVmRITzBWQlEwTXNhVUpCUVVFN08wRkJTVW9zVTBGQlF5eE5RVWRETzBGQlJrWXNVMEZCUXl4TlFVVkRPMFZCUTBVc1YwRkJWeXhWUVVGWU96dEJRVXRPTzBWQlEwVXNiVUpCUVVFN1JVRkRRU3hqUVVGQk8wVkJRMEVzZVVKQlFVRTdPMEZCU0VZc1QwRkxSU3hIUVVWRk8wVkJRMFVzWlVGQlFUczdRVUZGUVN4UFFVeEtMRWRCUlVVc1IwRkhSenRGUVVORExHZENRVUZCTzBWQlEwRXNVMEZCVXl4TFFVRlVPMFZCUTBFc1YwRkJRVHM3UVVGTFFTeFBRV0pPTEVkQlJVVXNSMEZUUnl4WFFVVkZPMFZCUTBNc1lVRkJRVHM3UVVNeE1FSldPMFZCUTBVc2VVSkJRVUU3TzBGQlJFWXNTMEZIUlR0QlFVaEdMRXRCUjFFN1JVRkRTaXhWUVVGQk8wVkJRMEVzWTBGQlFUdEZRVU5CTERaQ1FVRkJPenRCUVU1S0xFdEJVMFU3UlVGRFJTeDFRMEZCUVRzN1FVRldTaXhMUVZORkxGZEJSMFU3UlVGRFJTd3dRa0ZCUVRzN1FVRmlUaXhMUVZORkxGZEJSMFVzVjBGSFJUdEZRVU5GTERKQ1FVRkJPenRCUVdoQ1VpeExRWE5DUlR0RlFVTkZMSGxDUVVGQk96dEJRWFpDU2l4TFFUQkNSVHRGUVVORkxEQkNRVUZCTzBWQlEwRXNkVUpCUVVFN08wRkRNMEpLTzBWQlJVVTdSVUZEUVN4RFFVRkRPMFZCUTBRc1EwRkJRenRKUVVORExHdERRVUZCTzBsQlEwRXNjMEpCUVVFN1NVRkRRU3d5UWtGQlFUdEpRVU5CTERSQ1FVRkJPenRGUVVkR08wbEJRMFVzZDBKQlFVRTdTVUZEUVN4dlFrRkJRVHM3UlVGSFJqdEZRVU5CTEVOQlFVTTdTVUZEUXl4eFFrRkJRVHM3UlVGSFJpeFJRVUZUTzBsQlExQXNZVUZCUVR0SlFVTkJMR2xDUVVGQk96dEZRVWRHTEZGQlFWTTdSVUZEVkN4UlFVRlRPMGxCUTFBc01FSkJRVUU3TzBWQlJrWXNVVUZCVXl4alFVbFFMRVZCUVVNc1RVRkJUVHRGUVVoVUxGRkJRVk1zWTBGSFVDeEZRVUZETEUxQlFVMDdTVUZEVEN4VFFVRlRMRXRCUVVzc1YwRkJWeXhIUVVGNlFqdEpRVU5CTEcxQ1FVRkJPenRGUVU1S0xGRkJRVk1zWTBGWFVDeEZRVUZETEZkQlFWYzdSVUZXWkN4UlFVRlRMR05CVlZBc1JVRkJReXhYUVVGWE8wVkJXR1FzVVVGQlV5eGpRVmxRTEVWQlFVTXNjVUpCUVhGQ08wVkJXSGhDTEZGQlFWTXNZMEZYVUN4RlFVRkRMSEZDUVVGeFFqdEpRVU53UWl4VFFVRlRMRVZCUVZRN08wVkJZa29zVVVGQlV5eGpRV2RDVUN4TFFVRkpMRTlCUVU4N1JVRm1ZaXhSUVVGVExHTkJaVkFzUzBGQlNTeFBRVUZQTzBsQlExUXNVMEZCVXl4TFFVRkxMRmxCUVZrc1IwRkJNVUk3U1VGRFFTeHRRa0ZCUVRzN1JVRkpTanRGUVVOQk8wbEJRMFVzZDBKQlFVRTdPMFZCUjBZN1NVRkRSU3d5UWtGQlFUczdSVUZIUmp0RlFVTkJPMGxCUTBVc2QwSkJRVUU3TzBWQlIwWTdTVUZEUlN3d1FrRkJRVHM3UlVGSFJqdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1NVRkRSU3hWUVVGQk8wbEJRMEVzVTBGQlFUczdSVUZIUmp0RlFVTkJPMGxCUTBVc2RVSkJRVUU3TzBWQlIwWTdSVUZEUVR0SlFVTkZMR0ZCUVVFN096dEJRMnBGU2l4VlFVRlhPMEZCUTFnc2EwSkJRVzFDTEVsQlFVYzdSVUZGY0VJc2FVTkJRVUU3TzBGQlQwWXNWVUZKUlR0QlFVaEdMR3RDUVVkRk8wVkJRVThzWTBGQlFUczdRVUZLVkN4VlFVOUZPMEZCVGtZc2EwSkJUVVU3UlVGQlR5eDNRMEZCUVRzN1FVRlFWQ3hWUVZORk8wRkJVa1lzYTBKQlVVVTdSVUZCVHl4clFrRkJRVHM3UVVGVVZDeFZRVlZGTzBGQlZFWXNhMEpCVTBVN1JVRkJUeXhyUWtGQlFUczdRVUZXVkN4VlFWZEZPMEZCVmtZc2EwSkJWVVU3UlVGQlR5eHBRa0ZCUVRzN1FVRllWQ3hWUVZsRk8wRkJXRVlzYTBKQlYwVTdSVUZCVHl4clFrRkJRVHM3UVVGYVZDeFZRV0ZGTzBGQldrWXNhMEpCV1VVN1JVRkJUeXhwUWtGQlFUdEZRVUZ0UWl4clFrRkJRVHM3UVVGaU5VSXNWVUZsUlR0QlFXUkdMR3RDUVdORk8wVkJRVThzYVVKQlFVRTdPMEZCWmxRc1ZVRm5Ra1U3UVVGbVJpeHJRa0ZsUlR0RlFVRlBMR2xDUVVGQk96dEJRV2hDVkN4VlFXbENSVHRCUVdoQ1JpeHJRa0ZuUWtVN1JVRkJUeXhwUWtGQlFUczdRVUZxUWxRc1ZVRnRRa1U3UVVGc1FrWXNhMEpCYTBKRk8wVkJRVThzYVVKQlFVRTdPMEZCYmtKVUxGVkJiMEpGTzBGQmJrSkdMR3RDUVcxQ1JUdEZRVUZQTEdsQ1FVRkJPenRCUVhCQ1ZDeFZRWE5DUlR0QlFYSkNSaXhyUWtGeFFrVTdSVUZCVHl4cFFrRkJRVHM3UVVGMFFsUXNWVUYxUWtVN1FVRjBRa1lzYTBKQmMwSkZPMFZCUVU4c2EwSkJRVUU3TzBGQmRrSlVMRlZCZVVKRk8wRkJlRUpHTEd0Q1FYZENSVHRGUVVGUExHbENRVUZCT3p0QlFYcENWQ3hWUVRCQ1JUdEJRWHBDUml4clFrRjVRa1U3UlVGQlR5eHBRa0ZCUVRzN1FVRXhRbFFzVlVFeVFrVTdRVUV4UWtZc2EwSkJNRUpGTzBWQlFVOHNhVUpCUVVFN08wRkJNMEpVTEZWQk5FSkZPMEZCTTBKR0xHdENRVEpDUlR0RlFVRlBMR2xDUVVGQk96dEJRVFZDVkN4VlFUWkNSVHRCUVRWQ1JpeHJRa0UwUWtVN1JVRkJUeXhwUWtGQlFUczdRVUUzUWxRc1ZVRTRRa1U3UVVFM1FrWXNhMEpCTmtKRk8wVkJRVThzYVVKQlFVRTdPMEZCT1VKVUxGVkJjVWhKTEVWQlFVTTdRVUZ3U0V3c2EwSkJiMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVhSSVRpeFZRWEZJU1N4RlFVRkRPMEZCY0VoTUxHdENRVzlJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGMFNFNHNWVUZ4U0Vrc1JVRkJRenRCUVhCSVRDeHJRa0Z2U0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmRFaE9MRlZCY1VoSkxFVkJRVU03UVVGd1NFd3NhMEpCYjBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFYUklUaXhWUVhGSVNTeEZRVUZETzBGQmNFaE1MR3RDUVc5SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRjBTRTRzVlVGeFNFa3NSVUZCUXp0QlFYQklUQ3hyUWtGdlNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJkRWhPTEZWQmNVaEpMRVZCUVVNN1FVRndTRXdzYTBKQmIwaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRWFJJVGl4VlFYRklTU3hGUVVGRE8wRkJjRWhNTEd0Q1FXOUlTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUYwU0U0c1ZVRnhTRWtzUlVGQlF6dEJRWEJJVEN4clFrRnZTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCZEVoT0xGVkJjVWhKTEVWQlFVTTdRVUZ3U0V3c2EwSkJiMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVhSSVRpeFZRWEZJU1N4RlFVRkRPMEZCY0VoTUxHdENRVzlJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGMFNFNHNWVUZ4U0Vrc1JVRkJRenRCUVhCSVRDeHJRa0Z2U0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmRFaE9MRlZCY1VoSkxFVkJRVU03UVVGd1NFd3NhMEpCYjBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFYUklUaXhWUVhGSVNTeEZRVUZETzBGQmNFaE1MR3RDUVc5SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRjBTRTRzVlVGeFNFa3NSVUZCUXp0QlFYQklUQ3hyUWtGdlNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJkRWhPTEZWQmNVaEpMRVZCUVVNN1FVRndTRXdzYTBKQmIwaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRWFJJVGl4VlFYRklTU3hGUVVGRE8wRkJjRWhNTEd0Q1FXOUlTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUYwU0U0c1ZVRnhTRWtzUlVGQlF6dEJRWEJJVEN4clFrRnZTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCZEVoT0xGVkJjVWhKTEVWQlFVTTdRVUZ3U0V3c2EwSkJiMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVhSSVRpeFZRWEZJU1N4RlFVRkRPMEZCY0VoTUxHdENRVzlJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGMFNFNHNWVUZ4U0Vrc1JVRkJRenRCUVhCSVRDeHJRa0Z2U0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmRFaE9MRlZCY1VoSkxFVkJRVU03UVVGd1NFd3NhMEpCYjBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFYUklUaXhWUVhGSVNTeEZRVUZETzBGQmNFaE1MR3RDUVc5SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRjBTRTRzVlVGeFNFa3NSVUZCUXp0QlFYQklUQ3hyUWtGdlNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJkRWhPTEZWQmNVaEpMRVZCUVVNN1FVRndTRXdzYTBKQmIwaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRWFJJVGl4VlFYRklTU3hGUVVGRE8wRkJjRWhNTEd0Q1FXOUlTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUYwU0U0c1ZVRnhTRWtzUlVGQlF6dEJRWEJJVEN4clFrRnZTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCZEVoT0xGVkJjVWhKTEVWQlFVTTdRVUZ3U0V3c2EwSkJiMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVhSSVRpeFZRWEZJU1N4RlFVRkRPMEZCY0VoTUxHdENRVzlJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGMFNFNHNWVUZ4U0Vrc1JVRkJRenRCUVhCSVRDeHJRa0Z2U0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmRFaE9MRlZCY1VoSkxFVkJRVU03UVVGd1NFd3NhMEpCYjBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFYUklUaXhWUVhGSVNTeEZRVUZETzBGQmNFaE1MR3RDUVc5SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRjBTRTRzVlVGeFNFa3NSVUZCUXp0QlFYQklUQ3hyUWtGdlNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJkRWhPTEZWQmNVaEpMRVZCUVVNN1FVRndTRXdzYTBKQmIwaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRWFJJVGl4VlFYRklTU3hGUVVGRE8wRkJjRWhNTEd0Q1FXOUlTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUYwU0U0c1ZVRnhTRWtzUlVGQlF6dEJRWEJJVEN4clFrRnZTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCZEVoT0xGVkJjVWhKTEVWQlFVTTdRVUZ3U0V3c2EwSkJiMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVhSSVRpeFZRWEZJU1N4RlFVRkRPMEZCY0VoTUxHdENRVzlJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGMFNFNHNWVUZ4U0Vrc1JVRkJRenRCUVhCSVRDeHJRa0Z2U0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmRFaE9MRlZCY1VoSkxFVkJRVU03UVVGd1NFd3NhMEpCYjBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFYUklUaXhWUVhGSVNTeEZRVUZETzBGQmNFaE1MR3RDUVc5SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRjBTRTRzVlVGeFNFa3NSVUZCUXp0QlFYQklUQ3hyUWtGdlNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJkRWhPTEZWQmNVaEpMRVZCUVVNN1FVRndTRXdzYTBKQmIwaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRWFJJVGl4VlFYRklTU3hGUVVGRE8wRkJjRWhNTEd0Q1FXOUlTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUYwU0U0c1ZVRnhTRWtzUlVGQlF6dEJRWEJJVEN4clFrRnZTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCZEVoT0xGVkJjVWhKTEVWQlFVTTdRVUZ3U0V3c2EwSkJiMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVhSSVRpeFZRWEZJU1N4RlFVRkRPMEZCY0VoTUxHdENRVzlJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGMFNFNHNWVUZ4U0Vrc1JVRkJRenRCUVhCSVRDeHJRa0Z2U0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmRFaE9MRlZCY1VoSkxFVkJRVU03UVVGd1NFd3NhMEpCYjBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFYUklUaXhWUVhGSVNTeEZRVUZETzBGQmNFaE1MR3RDUVc5SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRjBTRTRzVlVGeFNFa3NSVUZCUXp0QlFYQklUQ3hyUWtGdlNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJkRWhPTEZWQmNVaEpMRVZCUVVNN1FVRndTRXdzYTBKQmIwaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRWFJJVGl4VlFYRklTU3hGUVVGRE8wRkJjRWhNTEd0Q1FXOUlTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUYwU0U0c1ZVRnhTRWtzUlVGQlF6dEJRWEJJVEN4clFrRnZTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCZEVoT0xGVkJjVWhKTEVWQlFVTTdRVUZ3U0V3c2EwSkJiMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVhSSVRpeFZRWEZJU1N4RlFVRkRPMEZCY0VoTUxHdENRVzlJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGMFNFNHNWVUZ4U0Vrc1JVRkJRenRCUVhCSVRDeHJRa0Z2U0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmRFaE9MRlZCY1VoSkxFVkJRVU03UVVGd1NFd3NhMEpCYjBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFYUklUaXhWUVhGSVNTeEZRVUZETzBGQmNFaE1MR3RDUVc5SVNTeEZRVUZETzBWQlEwTXNZMEZCUVRzN1FVRjBTRTRzVlVGeFNFa3NSVUZCUXp0QlFYQklUQ3hyUWtGdlNFa3NSVUZCUXp0RlFVTkRMR05CUVVFN08wRkJkRWhPTEZWQmNVaEpMRVZCUVVNN1FVRndTRXdzYTBKQmIwaEpMRVZCUVVNN1JVRkRReXhqUVVGQk96dEJRWFJJVGl4VlFYRklTU3hGUVVGRE8wRkJjRWhNTEd0Q1FXOUlTU3hGUVVGRE8wVkJRME1zWTBGQlFUczdRVUYwU0U0c1ZVRnhTRWtzUlVGQlF6dEJRWEJJVEN4clFrRnZTRWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdPMEZCZEVoT0xGVkJjVWhKTEVWQlFVTTdRVUZ3U0V3c2EwSkJiMGhKTEVWQlFVTTdSVUZEUXl4alFVRkJPenRCUVhSSVRpeFZRWEZJU1N4RlFVRkRPMEZCY0VoTUxHdENRVzlJU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHM3UVVGMFNFNHNWVUZ4U0Vrc1JVRkJRenRCUVhCSVRDeHJRa0Z2U0Vrc1JVRkJRenRGUVVORExHTkJRVUU3TzBGQmRFaE9MRlZCY1VoSkxFVkJRVU03UVVGd1NFd3NhMEpCYjBoSkxFVkJRVU03UlVGRFF5eGpRVUZCT3p0QlFYUklUaXhWUVhsSlNTeEZRVUZETzBGQmVFbE1MR3RDUVhkSlNTeEZRVUZETzBWQlEwTXNZMEZCUVR0RlFVTkJMRmRCUVVFN08wRkJNMGxPTEZWQmVVbEpMRVZCUVVNN1FVRjRTVXdzYTBKQmQwbEpMRVZCUVVNN1JVRkRReXhqUVVGQk8wVkJRMEVzVjBGQlFUczdRVUV6U1U0c1ZVRjVTVWtzUlVGQlF6dEJRWGhKVEN4clFrRjNTVWtzUlVGQlF6dEZRVU5ETEdOQlFVRTdSVUZEUVN4WFFVRkJPenRCUVROSlRpeFZRWGxKU1N4RlFVRkRPMEZCZUVsTUxHdENRWGRKU1N4RlFVRkRPMFZCUTBNc1kwRkJRVHRGUVVOQkxGZEJRVUU3TzBGQk0wbE9MRlZCZVVsSkxFVkJRVU03UVVGNFNVd3NhMEpCZDBsSkxFVkJRVU03UlVGRFF5eGpRVUZCTzBWQlEwRXNWMEZCUVRzN1FVRXpTVTRzVlVGNVNVa3NSVUZCUXp0QlFYaEpUQ3hyUWtGM1NVa3NSVUZCUXp0RlFVTkRMR05CUVVFN1JVRkRRU3hYUVVGQk96dEJRVk5HTEZWQlJrWTdRVUZGUlN4clFrRkdSanRCUVd4S1JpeFZRV3RLUlN4TlFVZEZPMEZCY0VwS0xHdENRV2xLUlN4TlFVZEZPMEZCY2twS0xGVkJhMHBGTEUxQlNVVTdRVUZ5U2tvc2EwSkJhVXBGTEUxQlNVVTdRVUYwU2tvc1ZVRnJTa1VzVFVGTFJTeEhRVUZITzBGQmRFcFFMR3RDUVdsS1JTeE5RVXRGTEVkQlFVYzdSVUZEUkN4VlFVRkJPMFZCUTBFc1UwRkJRVHRGUVVOQkxGbEJRVUU3UlVGRFFTeDFRa0ZCUVR0RlFVTkJMR1ZCUVVFN08wRkJOVXBPTEZWQmEwcEZMRTFCWjBKRk8wRkJha3RLTEd0Q1FXbEtSU3hOUVdkQ1JUdEZRVU5GTEcxQ1FVRkJPenRCUVUxQkxGVkJka0pLTEUxQmIwSkZMRkZCUjBjN1FVRkJSQ3hyUWtGMlFrb3NUVUZ2UWtVc1VVRkhSenRCUVVORUxGVkJlRUpLTEUxQmIwSkZMRkZCU1VjN1FVRkJSQ3hyUWtGNFFrb3NUVUZ2UWtVc1VVRkpSenRGUVVORExIRkNRVUZCT3p0QlFUTkxVaXhWUVd0S1JTeE5RVzlDUlN4UlFWRkZPMEZCTjB0T0xHdENRV2xLUlN4TlFXOUNSU3hSUVZGRk8wVkJRMFVzWTBGQlFUdEZRVU5CTEZkQlFVRTdSVUZEUVN4cFFrRkJRVHM3UVVGcVRGSXNWVUZyU2tVc1RVRnRRMFU3UVVGd1RFb3NhMEpCYVVwRkxFMUJiVU5GTzBWQlEwVXNhVUpCUVVFaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZMMXh1THk4Z1RXbDRhVzV6WEc0dkx5QXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dVhHNHZMeUJvZEhSd09pOHZibWxqYjJ4aGMyZGhiR3hoWjJobGNpNWpiMjB2YldsamNtOHRZMnhsWVhKbWFYZ3RhR0ZqYXk5Y2JpNWpaaUI3WEc1Y2JpQWdKanBpWldadmNtVXNJQ1k2WVdaMFpYSWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklIUmhZbXhsTzF4dUlDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJSDFjYmx4dUlDQW1PbUZtZEdWeUlIdGNiaUFnSUNCamJHVmhjam9nWW05MGFEdGNiaUFnZlZ4dWZWeHVYRzR1YUdWaFpHbHVaeWdwSUh0Y2JpQWdabTl1ZEMxemFYcGxPaUF6TmpBbE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ1ltOXNaRHRjYmlBZ2JHVjBkR1Z5TFhOd1lXTnBibWM2SUVCb1pXRmthVzVuTFd4bGRIUmxjaTF6Y0dGamFXNW5PMXh1ZlZ4dVhHNHVjM1ZpTFdobFlXUnBibWNvS1NCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTnpJbE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ2JtOXliV0ZzTzF4dUlDQnZjR0ZqYVhSNU9pQXVOVHRjYm4xY2JseHVMbkJoWkdScGJtY3RiMlptYzJWMEtFQndZV1JrYVc1bkxXeGxablFzSUVCd1lXUmthVzVuTFhKcFoyaDBPaUJBY0dGa1pHbHVaeTFzWldaMEtTQjdYRzRnSUhCaFpHUnBibWN0YkdWbWREb2dRSEJoWkdScGJtY3RiR1ZtZER0Y2JpQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ1FIQmhaR1JwYm1jdGNtbG5hSFE3WEc1OVhHNWNiaTV0WVhKbmFXNHRiMlptYzJWMEtFQnRZWEpuYVc0dGJHVm1kQ3dnUUcxaGNtZHBiaTF5YVdkb2REb2dRRzFoY21kcGJpMXNaV1owS1NCN1hHNGdJRzFoY21kcGJpMXNaV1owT2lCQWJXRnlaMmx1TFd4bFpuUTdYRzRnSUcxaGNtZHBiaTF5YVdkb2REb2dRRzFoY21kcGJpMXlhV2RvZER0Y2JuMWNibHh1TG5Od2JHbDBaWElvS1NCN1hHNGdJRUJ6YVhwbE9pQXpjSGc3WEc0Z0lFQmpiMnh2Y2pvZ1FIUmxlSFF0WTI5c2IzSTdYRzVjYmlBZ0pqbzZZbVZtYjNKbElIdGNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ0lDQmpiMjUwWlc1ME9pQW5KenRjYmlBZ0lDQjNhV1IwYURvZ1FITnBlbVU3WEc0Z0lDQWdhR1ZwWjJoME9pQkFjMmw2WlR0Y2JpQWdJQ0J0WVhKbmFXNDZJREpsYlNCaGRYUnZPMXh1SUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURVd0pUdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQkFZMjlzYjNJN1hHNGdJQ0FnWW05NExYTm9ZV1J2ZHpvZ0tFQnphWHBsSUNvZ09Da2dNQ0F3SURBZ1FHTnZiRzl5TENBb1FITnBlbVVnS2lBdE9Da2dNQ0F3SURBZ1FHTnZiRzl5TzF4dUlDQjlYRzU5WEc0aUxDSXZMMXh1THk4Z1VtVnpaWFJjYmk4dklDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc1Y2Jpb3NYRzRxT21KbFptOXlaU3hjYmlvNllXWjBaWElnZTF4dUlDQndZV1JrYVc1bk9pQXdPMXh1SUNCdFlYSm5hVzQ2SURBN1hHNGdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNnN1hHNTlYRzVjYm1oMGJXd2dlMXh1SUNCbWIyNTBMWE5wZW1VNklERXdNQ1U3WEc0Z0lIUmxlSFF0YzJsNlpTMWhaR3AxYzNRNklHNXZibVU3WEc0Z0lIUmxlSFF0Y21WdVpHVnlhVzVuT2lCdmNIUnBiV2w2Wld4bFoybGlhV3hwZEhrN1hHNGdJR2x0WVdkbExYSmxibVJsY21sdVp6b2diM0IwYVcxcGVtVnhkV0ZzYVhSNU8xeHVJQ0F0ZDJWaWEybDBMV1p2Ym5RdGMyMXZiM1JvYVc1bk9pQmhiblJwWVd4cFlYTmxaRHRjYmlBZ0xXMXZlaTF2YzNndFptOXVkQzF6Ylc5dmRHaHBibWM2SUdkeVlYbHpZMkZzWlR0Y2JpQWdMeThnVkU5RVR6b2dXVzkxSUdoaGRtVWdkRzhnYzNCbGFXTnBabmtnWW1GamEyZHliM1Z1WkNCamIyeHZjaUJtYjNJZ1lHaDBiV3hnSUdsdUlHOXlaR1Z5SUhSdlhHNGdJQzh2SUNBZ0lDQWdJRzFoYTJVZ1lDMTNaV0pyYVhRdFptbHNkR1Z5WUNCM2IzSnJYRzRnSUM4dklFeHBibXM2SUdoMGRIQnpPaTh2WW5WbmN5NWphSEp2YldsMWJTNXZjbWN2Y0M5amFISnZiV2wxYlM5cGMzTjFaWE12WkdWMFlXbHNQMmxrUFRVNU1UQXhOVnh1SUNBdkx5QkVZWFJsT2lCTllYSWdNU3dnTWpBeE5pd2dOVG8wTVNCUVRWeHVJQ0JpWVdOclozSnZkVzVrT2lCQVltRmphMmR5YjNWdVpDMWpiMnh2Y2p0Y2JuMWNibHh1WW05a2VTQjdYRzRnSUhCaFpHUnBibWM2SURBZ1FITndZV05sTFd4bk8xeHVJQ0J0WVhKbmFXNDZJREFnWVhWMGJ5QXdPMXh1SUNCbWIyNTBMV1poYldsc2VUb2dRR1p2Ym5SemRHRmpheTFrWldaaGRXeDBPMXh1SUNCbWIyNTBMWE5wZW1VNklFQm1iMjUwTFhOcGVtVTdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQkFiR2x1WlMxb1pXbG5hSFE3WEc0Z0lHaGhibWRwYm1jdGNIVnVZM1IxWVhScGIyNDZJR1pwY25OMElHRnNiRzkzTFdWdVpEdGNiaUFnWTI5c2IzSTZJRUIwWlhoMExXTnZiRzl5TzF4dUlDQmlZV05yWjNKdmRXNWtPaUJBWW1GamEyZHliM1Z1WkMxamIyeHZjanRjYmlBZ2RISmhibk5wZEdsdmJqb2dZV3hzSUM0eWN5QmxZWE5sTzF4dVhHNGdJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUJBWW5KbFlXdHdiMmx1ZEMxdFpDa2dlMXh1SUNBZ0lDNXdZV1JrYVc1bkxXOW1abk5sZENoQWMzQmhZMlV0YldRcE8xeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ0tFQm1iMjUwTFhOcGVtVWdLaUF4TGpRcE8xeHVJQ0I5WEc1Y2JpQWdRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRUJpY21WaGEzQnZhVzUwTFhOdEtTQjdYRzRnSUNBZ0xuQmhaR1JwYm1jdGIyWm1jMlYwS0VCemNHRmpaUzF6YlNrN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBb1FHWnZiblF0YzJsNlpTQXFJREl1TkNrN1hHNGdJSDFjYmx4dUlDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dRR0p5WldGcmNHOXBiblF0ZUhNcElIdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklDaEFabTl1ZEMxemFYcGxJQ29nTXk0eUtUdGNiaUFnZlZ4dWZWeHVYRzR2THlCU1pYTmxkQ0JtYjI1MGN5Qm1iM0lnY21Wc1pYWmhiblFnWld4bGJXVnVkSE5jYm1sdWNIVjBMRnh1WW5WMGRHOXVMRnh1YzJWc1pXTjBMRnh1ZEdWNGRHRnlaV0VnZTF4dUlDQmpiMnh2Y2pvZ2FXNW9aWEpwZER0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUdsdWFHVnlhWFE3WEc0Z0lHWnZiblF0YzJsNlpUb2dhVzVvWlhKcGREdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklHbHVhR1Z5YVhRN1hHNTlYRzVjYmk4dklGSmxjMlYwSUhWdWRYTjFZV3dnUm1seVpXWnZlQzF2YmkxQmJtUnliMmxrSUdSbFptRjFiSFFnYzNSNWJHVXVYRzR2THlCVFpXVWdhSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMMjVsWTI5c1lYTXZibTl5YldGc2FYcGxMbU56Y3k5cGMzTjFaWE12TWpFMFhHNWlkWFIwYjI0c1hHNXBibkIxZEN4Y2JuTmxiR1ZqZEZ0dGRXeDBhWEJzWlYwc1hHNTBaWGgwWVhKbFlTQjdYRzRnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUc1dmJtVTdYRzU5WEc1Y2JpOHZJRkpsYzJWMElHTnZiVzF2YmlCbGJHVnRaVzUwYzF4dVlTd2dZblYwZEc5dUlIdGNiaUFnWTI5c2IzSTZJRUIwWlhoMExXTnZiRzl5TzF4dUlDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR052Ykc5eUlDNDFjeUJsWVhObExDQmliM0prWlhJdFkyOXNiM0lnTGpWeklHVmhjMlVzSUdKaFkydG5jbTkxYm1RZ0xqVnpJR1ZoYzJVc0lHOXdZV05wZEhrZ01TNDFjeUJsWVhObE8xeHVYRzRnSUNZNmFHOTJaWElzWEc0Z0lDWTZabTlqZFhNZ2UxeHVJQ0FnSUhSeVlXNXphWFJwYjI0NklHTnZiRzl5SUM0eGN5QmxZWE5sTENCaWIzSmtaWEl0WTI5c2IzSWdMakZ6SUdWaGMyVXNJR0poWTJ0bmNtOTFibVFnTGpGeklHVmhjMlVzSUc5d1lXTnBkSGtnTGpGeklHVmhjMlU3WEc0Z0lDQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQjFibVJsY214cGJtVTdYRzRnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1TFhOcmFYQTZJR2x1YXp0Y2JpQWdmVnh1WEc0Z0lDWmJaR2x6WVdKc1pXUmRJSHRjYmlBZ0lDQnZjR0ZqYVhSNU9pQXVORHRjYmlBZ0lDQmpkWEp6YjNJNklHNXZkQzFoYkd4dmQyVmtPMXh1SUNCOVhHNTlYRzVjYm1KMWRIUnZiaUI3WEc0Z0lHRndjR1ZoY21GdVkyVTZJRzV2Ym1VN1hHNGdJR04xY25OdmNqb2djRzlwYm5SbGNqdGNiaUFnWW1GamEyZHliM1Z1WkRvZ2JtOXVaVHRjYmlBZ1ltOXlaR1Z5T2lCdWIyNWxPMXh1SUNCdmRYUnNhVzVsT2lCdWIyNWxPMXh1ZlZ4dVhHNXBiV2NzSUdoeUlIdGNiaUFnWW05eVpHVnlPaUF3TzF4dWZWeHVYRzVrWld3Z2UxeHVJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJR3hwYm1VdGRHaHliM1ZuYUR0Y2JuMWNibHh1T2pwd2JHRmpaV2h2YkdSbGNpQjdYRzRnSUdOdmJHOXlPaUJBZEdWNGRDMWpiMnh2Y2p0Y2JpQWdiM0JoWTJsMGVUb2dMakk3WEc1Y2JpQWdPbVp2WTNWekppQjdYRzRnSUNBZ1kyOXNiM0k2SUVCc2FXNXJMV052Ykc5eU8xeHVJQ0I5WEc1OVhHNGlMQ0l2TDF4dUx5OGdWWE5sY2lCemRIbHNaWE5jYmk4dklDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0dkx5QkJiR3dnYjNSb1pYSWdkbUZwWVdKc1pYTWdhVzRnWUhaaGNtbGhZbXhsY3k1c1pYTnpZQ0JqWVc0Z1ltVWdiM1psY25keWFYUjBaVzRnWW1Wc2IzZGNiaTh2SUU1UFZFVTZJSFJvWlNCbWIyeHNiM2RwYm1jZ2RYTmxjaUJ6ZEhsc1pYTWdZWEpsSUdSbGMybG5ibVZrSUdadmNpQmtaV1poZFd4MElIUm9aVzFsSUVOMWNuUmhibUZjYmx4dUx5OGdRM1Z6ZEc5dElITjBlV3hsY3lCbWIzSWdiR1ZoY201cGJtZHphV053TG1OdmJWeHVRR1p2Ym5SemRHRmpheTF6WVc1ekxYTmxjbWxtT2lCY0lraGxiSFpsZEdsallTQk9aWFZsWENJc0lGd2lTR2x5WVdkcGJtOGdVMkZ1Y3lCSFFsd2lMQ0JCY21saGJDd2djMkZ1Y3kxelpYSnBaanRjYmtCbWIyNTBjM1JoWTJzdGMyVnlhV1k2SUVkbGIzSm5hV0VzSUZ3aVNHbHlZV2RwYm04Z1RXbHVZMmh2SUZCeWIwNWNJaXdnYzJWeWFXWTdYRzRpTENJdkwxeHVMeThnUTI5dGJXOXVYRzR2THlBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1WEc0dkx5QlVlWEJ2WjNKaGNHaDVJSE5sZEhWd1hHNHZMeUJVVDBSUE9pQnVaV1ZrSUdKbGRIUmxjaUJ6YjJ4MWRHbHZibHh1THk4Z1FYQndiSGtnWUdadmJuUXRabVZoZEhWeVpXQWdabTl5SUVGd2NHeGxJR1JsZG1salpYTXNJSE5wYm1ObElIUm9aWE5sSUdabFlYUjFjbVZ6SUdGeVpTQnZibXg1WEc0dkx5QmhkbUZwYkdGaWJHVWdabTl5SUZOaGJpQkdjbUZ1WTJselkyOHVJR2x0Y0d4bGJXVnVkR1ZrSUdsdUlHQmhjSEF1YW5OZ1hHNHVhbk10YzNsemRHVnRJSHRjYmx4dUlDQW1MUzFoY0hCc1pTQjdYRzRnSUNBZ1ptOXVkQzFtWldGMGRYSmxMWE5sZEhScGJtZHpPaUJjSW1OaGMyVmNJaXdnWENKemN6QXhYQ0lzSUZ3aWMzTXdNbHdpTzF4dUlDQjlYRzU5WEc1Y2JpOHZJRTFoYVc0Z2JtRjJhV2RoZEdsdmJseHVRRzVoZGkxd1lXUmthVzVuT2lBeExqUjJiV0Y0TzF4dVFHNWhkaTFwZEdWdExYTndZV05sT2lBeGRtMWhlRHRjYmk1dVlYWnBaMkYwYVc5dUlIdGNiaUFnY0dGa1pHbHVaeTEwYjNBNklFQnVZWFl0Y0dGa1pHbHVaenRjYmlBZ2NHRmtaR2x1WnkxaWIzUjBiMjA2SUVCdVlYWXRjR0ZrWkdsdVp6dGNiaUFnYldGeVoybHVMWEpwWjJoME9pQXRRRzVoZGkxcGRHVnRMWE53WVdObE8xeHVJQ0J0WVhKbmFXNHRiR1ZtZERvZ0xVQnVZWFl0YVhSbGJTMXpjR0ZqWlR0Y2JpQWdabTl1ZEMxemFYcGxPaUEyTUNVN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtPMXh1SUNCc1pYUjBaWEl0YzNCaFkybHVaem9nTGpRMVpXMDdYRzRnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEc1Y2JpQWdiR2tnZTF4dUlDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01qdGNiaUFnSUNCc2FYTjBMWE4wZVd4bE9pQnViMjVsTzF4dVhHNGdJQ0FnWVNCN1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lBdU5XVnRJRUJ1WVhZdGFYUmxiUzF6Y0dGalpUdGNibHh1SUNBZ0lDQWdKanBvYjNabGNpeGNiaUFnSUNBZ0lDWTZabTlqZFhNZ2UxeHVJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ1FHeHBibXN0WTI5c2IzSTdYRzRnSUNBZ0lDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmx4dUx5OGdRM1Z5Y21WdWRHeDVJR0ZqZEdsMllYUmxaQ0J3WVdkbElHOXlJR05oZEdWbmIzSjVJR05zWVhOelhHNHVZM1Z5Y21WdWRDQjdYRzVjYmlBZ1lTQjdYRzRnSUNBZ1kyOXNiM0k2SUVCc2FXNXJMV052Ykc5eU8xeHVJQ0I5WEc1OVhHNWNiaTh2SUV4aGRHVnpkQ0IzYjNKcklHeHBibXRjYm1KdlpIazZhRzkyWlhJZ0xteGhkR1Z6ZENCN1hHNGdJR052Ykc5eU9pQkFiR2x1YXkxamIyeHZjaUFoYVcxd2IzSjBZVzUwTzF4dWZWeHVYRzR2THlCTllXbHVJR052Ym5SbGJuUmNiaTVqYjI1MFpXNTBJSHRjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTVRaMmJXbHVPMXh1WEc0Z0lDOHZJRVp2Y2lCemIyMWxJSE53WldOcFptbGxaQ0J3YjNOMGN5QnBiaUIzYjNKcklHTmhkR1ZuYjNKNVhHNGdJQzVqWmp0Y2JseHVJQ0F2THlCU1pXMXZkbVVnWlhoMGNtRWdjM0JoWTJVZ1ptOXlJSFJvWlNCc1lYTjBJSEJoY21GbmNtRndhQ0JwYmlCMGFHVWdZMjl1ZEdGcGJtVnlYRzRnSUdGeWRHbGpiR1VnZTF4dVhHNGdJQ0FnTHk4Z1lYSjBhV05zWlNBK0lIQmNiaUFnSUNBK0lDbzZiR0Z6ZEMxamFHbHNaQ0I3WEc0Z0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXdJQ0ZwYlhCdmNuUmhiblE3WEc1Y2JpQWdJQ0FnSUM4dklHRnlkR2xqYkdVZ1BpQjFiQ0ErSUd4cExDQmhjblJwWTJ4bElENGdMbVp2YjNSdWIzUmxjeUErSUc5c1hHNGdJQ0FnSUNBK0lDbzZiR0Z6ZEMxamFHbHNaQ0I3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREFnSVdsdGNHOXlkR0Z1ZER0Y2JseHVJQ0FnSUNBZ0lDQXZMeUJoY25ScFkyeGxJRDRnZFd3Z1BpQnNhU0ErSUhBc0lHRnlkR2xqYkdVZ1BpQXVabTl2ZEc1dmRHVnpJRDRnYjJ3Z1BpQnNhVnh1SUNBZ0lDQWdJQ0ErSUNvNmJHRnpkQzFqYUdsc1pDQjdYRzRnSUNBZ0lDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNQ0FoYVcxd2IzSjBZVzUwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdMeThnWVhKMGFXTnNaU0ErSUM1bWIyOTBibTkwWlhNZ1BpQnZiQ0ErSUd4cElENGdjRnh1SUNBZ0lDQWdJQ0FnSUQ0Z0tqcHNZWE4wTFdOb2FXeGtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURBZ0lXbHRjRzl5ZEdGdWREdGNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNBdkx5QlFiM04wSUM4Z2NHRm5aU0JqYjI1MFpXNTBJR1pwY25OMElHVnNaVzFsYm5RZ1ptbDRYRzRnSUM1d2IzTjBMV052Ym5SbGJuUXNYRzRnSUM1d1lXZGxMV052Ym5SbGJuUWdlMXh1WEc0Z0lDQWdQaUFxT21acGNuTjBMV05vYVd4a0lIdGNiaUFnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJREE3WEc1Y2JpQWdJQ0FnSUQ0Z0tqcG1hWEp6ZEMxamFHbHNaQ0I3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklEQTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdZU0I3WEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUTdYRzVjYmlBZ0lDQXZMeUJVVDBSUE9pQkdhWGhsY3lCM2NtOXVaeUIxYm1SbGNteHBibVVnWTI5c2IzSWdabTl5SUdsdWJHbHVaU0JnWTI5a1pXQWdkMmwwYUdsdUlHQmhZQ0JzYVc1cmN5NWNiaUFnSUNBdkx5QkliM2RsZG1WeUlHNXZJR0p5YjNkelpYSWdjM1Z3Y0c5eWRITWdkR2hwY3lCbVpXRjBkWEpsSUdGMElIUm9aU0IwYVcxbElHOW1JSGR5YVhScGJtY3VYRzRnSUNBZ0x5OGdUVzl5WlNCcGJtWnZPaUJvZEhSd09pOHZZMkZ1YVhWelpTNWpiMjB2STJabFlYUTlZM056TFdoaGMxeHVJQ0FnSUM4dklFUmhkR1U2SUVSbFl5QXhNQ3dnTWpBeE5pd2dOVG8xT1NCUVRWeHVJQ0FnSUNZNmFHRnpLRDVqYjJSbEtTQjdYRzRnSUNBZ0lDQjBaWGgwTFdSbFkyOXlZWFJwYjI0dFkyOXNiM0k2SUVCamIyUmxMV052Ykc5eU8xeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lIQWdlMXh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURFdU5uSmxiVHRjYmlBZ0lDQnNhVzVsTFdobGFXZG9kRG9nS0VCc2FXNWxMV2hsYVdkb2RDQXFJREV1TWlrN1hHNGdJSDFjYmx4dUlDQm9aV0ZrWlhJZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ2JXbHVMV2hsYVdkb2REb2dZMkZzWXlneE1EQjJhQ0F0SUNnb1FHNWhkaTF3WVdSa2FXNW5JQ29nTkNrcElDMGdOV1Y0S1R0Y2JpQWdJQ0F2THlCQlpHUnBkR2x2Ym1Gc0lIQmhaR1JwYm1jZ1ptOXlJR052Ym5SbGJuUWdhVzV6YVdSbElHQm9aV0ZrWlhKZ0lHRnlaU0JvYVdkb1pYSWdkR2hoYmlCZ2FHVmhaR1Z5WUZ4dUlDQWdJQzh2SUdOdmJuUmhhVzVsY2x4dUlDQWdJSEJoWkdScGJtY3RkRzl3T2lBeE1IWnRhVzQ3WEc0Z0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklERXdkbTFwYmp0Y2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhOblp0YVc0N1hHNGdJQ0FnWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJqdGNiaUFnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdObGJuUmxjanRjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUJtWVdSbEtFQjBaWGgwTFdOdmJHOXlMQ0F5SlNrN1hHNGdJQ0FnTG5CaFpHUnBibWN0YjJabWMyVjBLRUJ6Y0dGalpTMXNaeWs3WEc0Z0lDQWdMbTFoY21kcGJpMXZabVp6WlhRb0xVQnpjR0ZqWlMxc1p5azdYRzVjYmlBZ0lDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dRR0p5WldGcmNHOXBiblF0YldRcElIdGNiaUFnSUNBZ0lHMXBiaTFvWldsbmFIUTZJR05oYkdNb05UQjJhQ0F0SUVCdVlYWXRjR0ZrWkdsdVp5QXFJRElnTFNBelpYZ3BPMXh1SUNBZ0lDQWdjR0ZrWkdsdVp5MTBiM0E2SURFMmRtMXBianRjYmlBZ0lDQWdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQXhOblp0YVc0N1hHNGdJQ0FnSUNBdWNHRmtaR2x1WnkxdlptWnpaWFFvUUhOd1lXTmxMVzFrS1R0Y2JpQWdJQ0FnSUM1dFlYSm5hVzR0YjJabWMyVjBLQzFBYzNCaFkyVXRiV1FwTzF4dUlDQWdJSDFjYmx4dUlDQWdJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUJBWW5KbFlXdHdiMmx1ZEMxemJTa2dlMXh1SUNBZ0lDQWdMbkJoWkdScGJtY3RiMlptYzJWMEtFQnpjR0ZqWlMxemJTazdYRzRnSUNBZ0lDQXViV0Z5WjJsdUxXOW1abk5sZENndFFITndZV05sTFhOdEtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCb01TQjdYRzRnSUNBZ0lDQXVhR1ZoWkdsdVp5Z3BPMXh1SUNBZ0lDQWdMeThnZG1semRXRnNJR0ZzYVdkdUlHeGxablJjYmlBZ0lDQWdJRzFoY21kcGJpMXNaV1owT2lBdE1uQjRPMXh1SUNBZ0lDQWdhSGx3YUdWdWN6b2dibTl1WlR0Y2JpQWdJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXhMakU3WEc1Y2JpQWdJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lCQVluSmxZV3R3YjJsdWRDMXpiU2tnZTF4dUlDQWdJQ0FnSUNBdkx5QlBkbVZ5Y21sa1pTQjJhV1YzY0c5eWRDQjFibWwwY3lCa1pXWnBibVZrSUdsdUlIQnZjM1F1YUhSdGJGeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREk0TUNVN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lITjJaeUI3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUhOMlp5eGNiaUFnSUNBZ0lHbHRaeUI3WEc0Z0lDQWdJQ0FnSUM4dklFNXZjbTFoYkdsNlpTQnBiV0ZuWlNCemFYcGxYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUNBZ0lDQnRZWGd0ZDJsa2RHZzZJREV3TUNVN1hHNWNiaUFnSUNBZ0lDQWdMeThnVDNabGNuSnBaR1VnYldGeVoybHVJR1p5YjIwZ1lYSjBhV05zWlNCcGJXY3NJR0YyYjJsa0lHaGxZV1JsY2lCemRISmxkR05vWldRZ1lua2daMnh2WW1Gc1hHNGdJQ0FnSUNBZ0lDOHZJR2x0WnlCemRIbHNaWE5jYmlBZ0lDQWdJQ0FnYldGeVoybHVMV3hsWm5RNklEQTdYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMXlhV2RvZERvZ01EdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ0xqTmxiVHRjYmx4dUlDQWdJQ0FnSUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ1FHSnlaV0ZyY0c5cGJuUXRjMjBwSUh0Y2JpQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ01UQXdKU0FoYVcxd2IzSjBZVzUwTzF4dUlDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ01UQXdKU0FoYVcxd2IzSjBZVzUwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z1VtVnpaWFFnYzNWaWFHVmhaR2x1WnlCcGJpQndZV2RsSUhScGRHeGxJQ2gxYzJWa0lHSjVJRUZOVTBZZ1lYUnRLVnh1SUNBZ0lHZ3lJSHRjYmlBZ0lDQWdJRzFoY21kcGJqb2dNUzR5ZG0xcGJpQXdJREE3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeThnU0dsa1pTQmhZM1IxWVd3Z2RHVjRkQ0JwWmlCd2IzTjBJSFJwZEd4bElHbHpJR2x0WVdkbElHOXlJRk5XUnl3Z2RHaGxJR0ZqZEhWaGJDQjBaWGgwSUdobGJIQnpYRzRnSUNBZ0x5OGdVMkZtWVhKcElHZGxkQ0IwYUdVZ2NtVmhiQ0J3YjNOMElIUnBkR3hsSUdsdUlGSmxZV1JsY2lCdGIyUmxMbHh1SUNBZ0lDNXBiV0ZuWlMxMGFYUnNaU0I3WEc0Z0lDQWdJQ0IwWlhoMExXbHVaR1Z1ZERvZ0xUazVPVGs1T1hCNE8xeHVJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREE3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjMjFoYkd3Z2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0J0WVhKbmFXNHRkRzl3T2lBeWRtMXBianRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0JvTWl4Y2JpQWdhRE1zWEc0Z0lHZzBMRnh1SUNCb05TeGNiaUFnYURZZ2UxeHVJQ0FnSUcxaGNtZHBiam9nTVRCMmJXbHVJREFnTVhKbGJUdGNiaUFnSUNBdWMzVmlMV2hsWVdScGJtY29LVHRjYmlBZ2ZWeHVYRzRnSUhWc0xGeHVJQ0J2YkNCN1hHNGdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNUzQ0Y21WdE8xeHVJQ0FnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc0Z0lDQWdZMjkxYm5SbGNpMXlaWE5sZERvZ2JHbHpkRHRjYmx4dUlDQWdJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUJBWW5KbFlXdHdiMmx1ZEMxemJTa2dlMXh1SUNBZ0lDQWdiV0Z5WjJsdUxXeGxablE2SURGbGJUdGNiaUFnSUNCOVhHNWNiaUFnSUNCc2FTQjdYRzRnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nS0VCc2FXNWxMV2hsYVdkb2RDQXFJREV1TWlrN1hHNWNiaUFnSUNBZ0lDWTZZbVZtYjNKbElIdGNiaUFnSUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBMFpXMDdYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMTBiM0E2SURGd2VEdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxXeGxablE2SUMwMFpXMDdYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nT0RBbE8xeHVJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nS0VCc2FXNWxMV2hsYVdkb2RDQXFJREV1TWlBdklDNDRLVHRjYmlBZ0lDQWdJQ0FnZEdWNGRDMWhiR2xuYmpvZ2NtbG5hSFE3WEc0Z0lDQWdJQ0FnSUc5d1lXTnBkSGs2SUM0Mk8xeHVJQ0FnSUNBZ0lDQndiMmx1ZEdWeUxXVjJaVzUwY3pvZ2JtOXVaVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnUGlCMWJDeGNiaUFnSUNBZ0lENGdiMndnZTF4dUlDQWdJQ0FnSUNCdFlYSm5hVzR0YkdWbWREb2dNV1Z0TzF4dUlDQWdJQ0FnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUF3TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUhWc0lHeHBPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ1hDTGlnS0pjSWp0Y2JpQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQXVObVZ0TzF4dUlDQjlYRzVjYmlBZ2Iyd2diR2s2WW1WbWIzSmxJSHRjYmlBZ0lDQmpiM1Z1ZEdWeUxXbHVZM0psYldWdWREb2diR2x6ZER0Y2JpQWdJQ0JqYjI1MFpXNTBPaUJqYjNWdWRHVnlLR3hwYzNRcElGd2lMbHdpTzF4dUlDQWdJSEJoWkdScGJtY3RjbWxuYUhRNklDNHpaVzA3WEc0Z0lIMWNibHh1SUNCa2JDQjdYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJQ2hBYkdsdVpTMW9aV2xuYUhRZ0tpQXhMaklwTzF4dVhHNGdJQ0FnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUVCaWNtVmhhM0J2YVc1MExYTnRLU0I3WEc0Z0lDQWdJQ0J0WVhKbmFXNHRiR1ZtZERvZ01XVnRPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHUjBJSHRjYmx4dUlDQWdJQ0FnSmpwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeFpXMDdYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMXNaV1owT2lBdE1XVnRPMXh1SUNBZ0lDQWdJQ0JqYjI1MFpXNTBPaUJjSWkxY0lqdGNiaUFnSUNBZ0lDQWdiM0JoWTJsMGVUb2dMalk3WEc0Z0lDQWdJQ0FnSUhCdmFXNTBaWEl0WlhabGJuUnpPaUJ1YjI1bE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUdSa0lIdGNiaUFnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURFdU9ISmxiVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0JwYldjc1hHNGdJSFpwWkdWdkxGeHVJQ0JwWm5KaGJXVXNYRzRnSUM1aWNtOTNjMlZ5SUh0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNCM2FXUjBhRG9nWTJGc1l5Z3hNREFsSUNzZ0tFQnpjR0ZqWlMxdFpDQXFJRElwS1R0Y2JpQWdJQ0J0YVc0dGFHVnBaMmgwT2lCallXeGpLREV3TUhab0lDMGdLQ2hBYm1GMkxYQmhaR1JwYm1jZ0tpQTBLU2tnTFNBMVpYZ3BPMXh1SUNBZ0lGeHVJQ0FnSUcxaGNtZHBiam9nTUNBdFFITndZV05sTFcxa0lERXVPSEpsYlR0Y2JseHVJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lCQVluSmxZV3R3YjJsdWRDMXRaQ2tnZTF4dUlDQWdJQ0FnZDJsa2RHZzZJR05oYkdNb01UQXdKU0FySUNoQWMzQmhZMlV0YldRZ0tpQXlLU2s3WEc0Z0lDQWdJQ0J0YVc0dGFHVnBaMmgwT2lCallXeGpLRFV3ZG1nZ0xTQkFibUYyTFhCaFpHUnBibWNnS2lBeUlDMGdNMlY0S1R0Y2JpQWdJQ0FnSUZ4dUlDQWdJQ0FnTG0xaGNtZHBiaTF2Wm1aelpYUW9MVUJ6Y0dGalpTMXRaQ2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRUJpY21WaGEzQnZhVzUwTFhOdEtTQjdYRzRnSUNBZ0lDQjNhV1IwYURvZ1kyRnNZeWd4TURBbElDc2dLRUJ6Y0dGalpTMXpiU0FxSURJcEtUdGNiaUFnSUNBZ0lGeHVJQ0FnSUNBZ0xtMWhjbWRwYmkxdlptWnpaWFFvTFVCemNHRmpaUzF6YlNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z1lYWnZhV1FnYVcxaFoyVnpJSGRwZEdnZ1lDNXVieTFsYm14aGNtZGxZQ0J6ZEhKbGRHTm9aV1FnWW5rZ1oyeHZZbUZzSUdsdFp5QnpkSGxzWlhOY2JpQWdJQ0FtTG5OcGVtVXRabWwwTEZ4dUlDQWdJQ1l1Ym04dFpXNXNZWEpuWlNCN1hHNGdJQ0FnSUNCdFlYSm5hVzR0YkdWbWREb2dNRHRjYmlBZ0lDQWdJRzFoY21kcGJpMXlhV2RvZERvZ01EdGNiaUFnSUNBZ0lHMWhlQzEzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0FnSUhkcFpIUm9PaUJoZFhSdk8xeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklFWjFiR3dnZDJsa2RHZ2dhVzFoWjJWY2JpQWdJQ0FtTG5OcGVtVXRiR0Z5WjJVZ2UxeHVJQ0FnSUNBZ2QybGtkR2c2SUdOaGJHTW9NVEF3SlNBcklDaEFjM0JoWTJVdGJHY2dLaUF5S1NrN1hHNGdJQ0FnSUNBdWJXRnlaMmx1TFc5bVpuTmxkQ2d0UUhOd1lXTmxMV3huS1R0Y2JseHVJQ0FnSUNBZ1FHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklFQmljbVZoYTNCdmFXNTBMVzFrS1NCN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lCallXeGpLREV3TUNVZ0t5QW9RSE53WVdObExXMWtJQ29nTWlrcE8xeHVJQ0FnSUNBZ0lDQXViV0Z5WjJsdUxXOW1abk5sZENndFFITndZV05sTFcxa0tUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRUJpY21WaGEzQnZhVzUwTFhOdEtTQjdYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQmpZV3hqS0RFd01DVWdLeUFvUUhOd1lXTmxMWE50SUNvZ01pa3BPMXh1SUNBZ0lDQWdJQ0F1YldGeVoybHVMVzltWm5ObGRDZ3RRSE53WVdObExYTnRLVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQW1Mbk5wZW1VdGMyMWhiR3dnZTF4dUlDQWdJQ0FnZDJsa2RHZzZJR05oYkdNb01UQXdKU0FySUNoQWMzQmhZMlV0ZUhNZ0tpQXlLU2s3WEc0Z0lDQWdJQ0F1YldGeVoybHVMVzltWm5ObGRDZ3RRSE53WVdObExYaHpLVHRjYmx4dUlDQWdJQ0FnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SUVCaWNtVmhhM0J2YVc1MExXMWtLU0I3WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUJqWVd4aktERXdNQ1VnS3lBb1FITndZV05sTFcxa0lDb2dNaWtwTzF4dUlDQWdJQ0FnSUNBdWJXRnlaMmx1TFc5bVpuTmxkQ2d0UUhOd1lXTmxMVzFrS1R0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ1FHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklFQmljbVZoYTNCdmFXNTBMWE50S1NCN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lCallXeGpLREV3TUNVZ0t5QW9RSE53WVdObExYTnRJQ29nTWlrcE8xeHVJQ0FnSUNBZ0lDQXViV0Z5WjJsdUxXOW1abk5sZENndFFITndZV05sTFhOdEtUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNBbUxuTnBlbVV0YkdWbWRDQjdYRzRnSUNBZ0lDQm1iRzloZERvZ2JHVm1kRHRjYmlBZ0lDQWdJRzFoZUMxM2FXUjBhRG9nTXpaMmR6dGNiaUFnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJQ2hBYzNCaFkyVXRlSE1nTHlBeUtUdGNiaUFnSUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nUUhOd1lXTmxMWGh6TzF4dUlDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dLRUJ6Y0dGalpTMTRjeUF2SURJcE8xeHVYRzRnSUNBZ0lDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dRR0p5WldGcmNHOXBiblF0YldRcElIdGNiaUFnSUNBZ0lDQWdabXh2WVhRNklHNXZibVU3WEc0Z0lDQWdJQ0FnSUcxaGVDMTNhV1IwYURvZ2JtOXVaVHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVMWFJ2Y0RvZ1lYVjBienRjYmlBZ0lDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQmhkWFJ2TzF4dUlDQWdJQ0FnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUJoZFhSdk8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUNZdWMybDZaUzF5YVdkb2RDQjdYRzRnSUNBZ0lDQm1iRzloZERvZ2NtbG5hSFE3WEc0Z0lDQWdJQ0J0WVhndGQybGtkR2c2SURNMmRuYzdYRzRnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUFvUUhOd1lXTmxMWGh6SUM4Z01pazdYRzRnSUNBZ0lDQnRZWEpuYVc0dGJHVm1kRG9nUUhOd1lXTmxMWGh6TzF4dUlDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dLRUJ6Y0dGalpTMTRjeUF2SURJcE8xeHVYRzRnSUNBZ0lDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dRR0p5WldGcmNHOXBiblF0YldRcElIdGNiaUFnSUNBZ0lDQWdabXh2WVhRNklHNXZibVU3WEc0Z0lDQWdJQ0FnSUcxaGVDMTNhV1IwYURvZ2JtOXVaVHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVMWFJ2Y0RvZ1lYVjBienRjYmlBZ0lDQWdJQ0FnYldGeVoybHVMV3hsWm5RNklHRjFkRzg3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJR0YxZEc4N1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ1lteHZZMnR4ZFc5MFpTQjdYRzRnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREl1T0hKbGJUdGNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb2dMVUJ6Y0dGalpTMTRjenRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJRGt3SlR0Y2JseHVJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lCQVluSmxZV3R3YjJsdWRDMXpiU2tnZTF4dUlDQWdJQ0FnYldGeVoybHVMV3hsWm5RNklEQTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1BpQndJSHRjYmlBZ0lDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ1FITndZV05sTFhoek8xeHVJQ0FnSUNBZ1ltOXlaR1Z5TFd4bFpuUTZJRUJpYjNKa1pYSXRaR1ZtWVhWc2RDQnpiMnhwWkR0Y2JpQWdJQ0FnSUM4dklGUlBSRTg2SUU1bFpXUWdZbVYwZEdWeUlITnZiSFYwYVc5dVhHNGdJQ0FnSUNBdkx5QlhaU0IzYVd4c0lISmxjMlYwSUhSb1pTQmpiMjF0YjI0Z2JXRnlaMmx1TFdKdmRHOTBiU0IwYnlCblpYUWdaMkZ3YkdWemN5QmliM0prWlhKeklHWnZjbHh1SUNBZ0lDQWdMeThnWW14dlkydHhkVzkwWlhNdUlGUm9hWE1nWTI5MWJHUWdhR1ZzY0NCbWFYaGNiaUFnSUNBZ0lDOHZJR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzloYlhObUwyRnRjMll0WTNWeWRHRnVZUzlwYzNOMVpYTXZORnh1SUNBZ0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklERXVObkpsYlR0Y2JpQWdJQ0FnSUM4dklFNXZkeUJ5WlhObGRDQmtaV1poZFd4MElHMWhjbWRwYmlCaWRYUjBiMjRnWm5KdmJTQm5iRzlpWVd3Z1pHVm1hVzVsWEc0Z0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXdPMXh1SUNBZ0lDQWdiM0JoWTJsMGVUb2dMalk3WEc1Y2JpQWdJQ0FnSUM4dklGSmxiVzkyWlNCbGVIUnlZU0J3WVdSa2FXNW5JR1p2Y2lCMGFHVWdiR0Z6ZENCbGJHVnRaVzUwTENCeVpTMWhjSEJzZVNCdFlYSm5hVzVjYmlBZ0lDQWdJQ1k2YkdGemRDMXZaaTEwZVhCbElIdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklEQTdYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMWliM1IwYjIwNklERXVObkpsYlR0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ1FHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklFQmljbVZoYTNCdmFXNTBMWE50S1NCN1hHNGdJQ0FnSUNBZ0lDNXdZV1JrYVc1bkxXOW1abk5sZENoallXeGpLRUJ6Y0dGalpTMXpiU0F0SUVCaWIzSmtaWEl0WkdWbVlYVnNkQ2tzSUVCemNHRmpaUzF6YlNrN1hHNGdJQ0FnSUNBZ0lDNXRZWEpuYVc0dGIyWm1jMlYwS0MxQWMzQmhZMlV0YzIwcE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUdadmIzUmxjaUI3WEc0Z0lDQWdJQ0F1WTJZN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTJsMFpTQjdYRzRnSUNBZ0lDQm1iRzloZERvZ2NtbG5hSFE3WEc0Z0lDQWdJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEc1Y2JpQWdJQ0FnSUNZNlltVm1iM0psSUh0Y2JpQWdJQ0FnSUNBZ0x5OGdhSFIwY0RvdkwzZDNkeTVtYVd4bFptOXliV0YwTG1sdVptOHZhVzVtYnk5MWJtbGpiMlJsTDJOb1lYSXZNalV3TUM5cGJtUmxlQzVvZEcxY2JpQWdJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ1hDSmNYREkxTURCY1hESTFNREJjWERBd1lUQmNJbHh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJR2h5SUh0Y2JpQWdJQ0F1YzNCc2FYUmxjaWdwTzF4dUlDQjlYRzVjYmlBZ2MzVndJSHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJRGMxSlR0Y2JpQWdmVnh1WEc0Z0lIQnlaU3hjYmlBZ1kyOWtaU0I3WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUVCbWIyNTBjM1JoWTJzdGJXOXViM053WVdObE8xeHVJQ0FnSUdOdmJHOXlPaUJBWTI5a1pTMWpiMnh2Y2p0Y2JpQWdmVnh1WEc0Z0lIQnlaU0I3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nWm1Ga1pTZ2pNRGhtTENBMEpTazdYRzRnSUgxY2JseHVJQ0JqYjJSbElIdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklEa3lKVHRjYmlBZ0lDQnZkbVZ5Wm14dmR5MTNjbUZ3T2lCaWNtVmhheTEzYjNKa08xeHVJQ0I5WEc1Y2JpQWdMeThnVkU5RVR6b2dUbVZsWkNCeVpXWnBibVZjYmlBZ0x5OGdSR0YwWlRvZ1NtRnVJREkwTENBeU1ERTRMQ0ExT2pNM0lGQk5YRzRnSUM4dlhHNGdJQzh2SUVwbGEzbHNiQ0FvYkdseGRXbGtLU0I3SlNCb2FXZG9iR2xuYUhRZ0pYMGdiV1YwYUc5a0lHRnVaQ0JIUmswZ2JXVjBhRzlrSUdkbGJtVnlZWFJsY3lCa2FXWm1aWEpsYm5SY2JpQWdMeThnYldGeWEzVndJR1p2Y2lCamIyUmxJR0pzYjJOcmN5d2dkR2hwY3lCeVpYTjFiSFFnYVc0Z1pHbG1abVZ5Wlc1MElFTlRVeUJ6ZEhsc2FXNW5JR1p2Y2lCa2FXWm1aWEpsYm5SY2JpQWdMeThnYUdsbmFHeHBaMmgwSUcxbGRHaHZaSE1nZVc5MUlIVnpaUzVjYmlBZ0x5OWNiaUFnTHk4Z0l5TWdSMFpOSUcxbGRHaHZaRnh1SUNBdkwxeHVJQ0F2THlCZ1lHQmNiaUFnTHk4Z1pHbDJMbXhoYm1kMVlXZGxMV3B6TG1ocFoyaHNhV2RvZEdWeUxYSnZkV2RsWEc0Z0lDOHZJQ0FnWkdsMkxtaHBaMmhzYVdkb2RGeHVJQ0F2THlBZ0lDQWdjSEpsTG1ocFoyaHNhV2RvZEZ4dUlDQXZMeUFnSUNBZ0lDQmpiMlJsWEc0Z0lDOHZJR0JnWUZ4dUlDQXZMMXh1SUNBdkx5QWpJeUJIUmswZ2JXVjBhRzlrSUhkcGRHZ2dZR3hwYm1WZmJuVnRZbVZ5YzJBZ1pXNWhZbXhsWkNCMWJtUmxjaUJnYzNsdWRHRjRYMmhwWjJoc2FXZG9kR1Z5WDI5d2RITmdYRzRnSUM4dlhHNGdJQzh2SUdCZ1lGeHVJQ0F2THlCa2FYWXViR0Z1WjNWaFoyVXRhbk11YUdsbmFHeHBaMmgwWlhJdGNtOTFaMlZjYmlBZ0x5OGdJQ0JrYVhZdWFHbG5hR3hwWjJoMFhHNGdJQzh2SUNBZ0lDQjBZV0pzWlZ4dUlDQXZMeUFnSUNBZ0lDQjBZbTlrZVZ4dUlDQXZMeUFnSUNBZ0lDQWdJSFJ5WEc0Z0lDOHZJQ0FnSUNBZ0lDQWdJQ0IwWkM1bmRYUjBaWEl1WjJ4Y2JpQWdMeThnSUNBZ0lDQWdJQ0FnSUNBZ2NISmxYRzRnSUM4dklDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5a1pWeHVJQ0F2THlBZ0lDQWdJQ0FnSUNBZ2RHUXVZMjlrWlZ4dUlDQXZMeUFnSUNBZ0lDQWdJQ0FnSUNCd2NtVmNiaUFnTHk4Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJSbFhHNGdJQzh2SUdCZ1lGeHVJQ0F2TDF4dUlDQXZMeUFqSXlCS1pXdDViR3dnZXlVZ2FHbG5hR3hwWjJoMElDVjlJRzFsZEdodlpEcGNiaUFnTHk5Y2JpQWdMeThnWUdCZ1hHNGdJQzh2SUdacFozVnlaUzVvYVdkb2JHbG5hSFJjYmlBZ0x5OGdJQ0J3Y21WY2JpQWdMeThnSUNBZ0lHTnZaR1V1YkdGdVozVmhaMlV0YUhSdGJGeHVJQ0F2THlBZ0lDQWdJQ0IwWVdKc1pWeHVJQ0F2THlBZ0lDQWdJQ0FnSUhSaWIyUjVYRzRnSUM4dklDQWdJQ0FnSUNBZ0lDQjBjbHh1SUNBdkx5QWdJQ0FnSUNBZ0lDQWdJQ0IwWkM1bmRYUjBaWEl1WjJ4Y2JpQWdMeThnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndjbVZjYmlBZ0x5OGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZaR1ZjYmlBZ0x5OGdJQ0FnSUNBZ0lDQWdJQ0FnZEdRdVkyOWtaVnh1SUNBdkx5QWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCeVpWeHVJQ0F2THlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5a1pWeHVJQ0F2THlCZ1lHQmNiaUFnY0hKbExGeHVJQ0F1YUdsbmFHeHBaMmgwSUQ0Z2NISmxMRnh1SUNBdWFHbG5hR3hwWjJoMFpYSXRjbTkxWjJVZ2NISmxMbWhwWjJoc2FXZG9kQ0I3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dRSE53WVdObExYaHpPMXh1SUNBZ0lDNXRZWEpuYVc0dGIyWm1jMlYwS0MxQWMzQmhZMlV0ZUhNcE8xeHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREV1T0hKbGJUdGNiaUFnSUNCdmRtVnlabXh2ZHkxNE9pQmhkWFJ2TzF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nT0RBbE8xeHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQW9RR3hwYm1VdGFHVnBaMmgwSUNvZ01TNHlLVHRjYmlBZ0lDQXZMeUJDYjNWdVkybHVaeUJ6WTNKdmJHd2dabWw0SUdadmNpQnBUMU5jYmlBZ0lDQXRkMlZpYTJsMExXOTJaWEptYkc5M0xYTmpjbTlzYkdsdVp6b2dkRzkxWTJnN1hHNWNiaUFnSUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ1FHSnlaV0ZyY0c5cGJuUXRiV1FwSUh0Y2JpQWdJQ0FnSUM1d1lXUmthVzVuTFc5bVpuTmxkQ2hBYzNCaFkyVXRiV1FwTzF4dUlDQWdJQ0FnTG0xaGNtZHBiaTF2Wm1aelpYUW9MVUJ6Y0dGalpTMXRaQ2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRUJpY21WaGEzQnZhVzUwTFhOdEtTQjdYRzRnSUNBZ0lDQXVjR0ZrWkdsdVp5MXZabVp6WlhRb1FITndZV05sTFhOdEtUdGNiaUFnSUNBZ0lDNXRZWEpuYVc0dGIyWm1jMlYwS0MxQWMzQmhZMlV0YzIwcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklGSmxjMlYwSUc5MlpYSm1iRzkzSUdadmNpQmpiMlJsSUdsdUlHTnZaR1VnWW14dlkydHpYRzRnSUNBZ1kyOWtaU0I3WEc0Z0lDQWdJQ0J2ZG1WeVpteHZkeTEzY21Gd09pQnViM0p0WVd3N1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0x5OGdUbVYzYzJ4bGRIUmxjaUJ6ZFdKelkzSnBjSFJwYjI0Z1ptOXliU0JwYmlCd1lXZGxJRndpYzNSdmNtVmNJbHh1SUNCbWIzSnRJSHRjYmx4dUlDQWdJR2x1Y0hWMElIdGNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lBeGRtMXBiaUF3TzF4dUlDQWdJQ0FnYldGeVoybHVPaUF3SURBZ01TNDRjbVZ0TzF4dUlDQWdJQ0FnWW05eVpHVnlPaUJ1YjI1bE8xeHVJQ0FnSUNBZ1ltOXlaR1Z5TFdKdmRIUnZiVG9nTVhCNElITnZiR2xrSUdaaFpHVW9RSFJsZUhRdFkyOXNiM0lzSURJd0pTazdYRzRnSUNBZ0lDQXZMeUJTWlcxdmRtVWdZbTl5WkdWeUxYSmhaR2wxY3lCbWIzSWdhVTlUSUdSbGRtbGpaWE5jYmlBZ0lDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklEQTdYRzRnSUNBZ0lDQnZkWFJzYVc1bE9pQnViMjVsTzF4dUlDQWdJQ0FnZEhKaGJuTnBkR2x2YmpvZ2NHRmtaR2x1WnlBdU1uTWdaV0Z6WlR0Y2JseHVJQ0FnSUNBZ0pqcG1iMk4xY3lCN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklERjJiV2x1TzF4dUlDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQm1ZV1JsS0VCMFpYaDBMV052Ykc5eUxDQXlKU2s3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTFqYjJ4dmNqb2dRSFJsZUhRdFkyOXNiM0k3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnTHk4Z1VtVnpkQ0JtYjNKdElIWmhiR2xrWVhScGIyNGdjM1I1YkdWekxDQmliM0p5YjNkbFpDQm1jbTl0SUVKdmIzUnpkSEpoY0Z4dUlDQnBibkIxZEN4Y2JpQWdkR1Y0ZEdGeVpXRXNYRzRnSUhObGJHVmpkQ0I3WEc1Y2JpQWdJQ0FtT21adlkzVnpPbkpsY1hWcGNtVmtPbWx1ZG1Gc2FXUWdlMXh1WEc0Z0lDQWdJQ0FtT21adlkzVnpJSHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ1ptRmtaU2hBYkdsdWF5MWpiMnh2Y2l3Z05TVXBPMXh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRZMjlzYjNJNklFQnNhVzVyTFdOdmJHOXlPMXh1SUNBZ0lDQWdJQ0F2THlCUGRtVnljbWxrWlNCR2FYSmxabTk0SUdSbFptRjFiSFFnYzNSNWJHVnpYRzRnSUNBZ0lDQWdJR0p2ZUMxemFHRmtiM2M2SUc1dmJtVTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdkR0ZpYkdVZ2UxeHVJQ0FnSUdKdmNtUmxjaTFqYjJ4c1lYQnpaVG9nWTI5c2JHRndjMlU3WEc0Z0lDQWdZbTl5WkdWeUxYTndZV05wYm1jNklEQTdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQTVNQ1U3WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdMbTFoY21kcGJpMXZabVp6WlhRb0xVQnpjR0ZqWlMxNGN5azdYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTVM0NGNtVnRPMXh1WEc0Z0lDQWdMeThnVkU5RVR6b2djbVZ6Y0c5dWMybDJaU0IwWVdKc1pTQnpkWEJ3YjNKMFhHNGdJQ0FnTHk4Z1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh1SUNBZ0lDOHZJRzkyWlhKbWJHOTNMWGc2SUdGMWRHODdYRzRnSUNBZ0x5OGdkMmhwZEdVdGMzQmhZMlU2SUc1dmQzSmhjRHRjYmx4dUlDQWdJQzh2SUZSUFJFODZJSFJoWW14bElITm9ZV1J2ZHlCemRYQndiM0owWEc0Z0lDQWdMeThnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nY21Ga2FXRnNMV2R5WVdScFpXNTBLR1ZzYkdsd2MyVWdZWFFnYkdWbWRDd2djbWRpWVNnd0xDQXdMQ0F3TENBdU1ESXBJREFsTENCeVoySmhLREFzSURBc0lEQXNJREFwSURjMUpTa3NYRzRnSUNBZ0x5OGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVdGc0xXZHlZV1JwWlc1MEtHVnNiR2x3YzJVZ1lYUWdjbWxuYUhRc0lISm5ZbUVvTUN3Z01Dd2dNQ3dnTGpBeUtTQXdKU3dnY21kaVlTZ3dMQ0F3TENBd0xDQXdLU0EzTlNVcE8xeHVJQ0FnSUM4dklHSmhZMnRuY205MWJtUXRjMmw2WlRvZ016QndlQ0F4TURBbExDQXpNSEI0SURFd01DVTdYRzRnSUNBZ0x5OGdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nTUNCalpXNTBaWElzSURFd01DVWdZMlZ1ZEdWeU8xeHVJQ0FnSUM4dklHSmhZMnRuY205MWJtUXRZWFIwWVdOb2JXVnVkRG9nYzJOeWIyeHNMQ0J6WTNKdmJHdzdYRzRnSUNBZ0x5OGdZbUZqYTJkeWIzVnVaQzF5WlhCbFlYUTZJRzV2TFhKbGNHVmhkRHRjYmx4dUlDQWdJQzh2SUZSUFJFODZJSEpsYzNCdmJuTnBkbVVnZEdGaWJHVWdjM1Z3Y0c5eWRGeHVJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lCQVluSmxZV3R3YjJsdWRDMXRaQ2tnZTF4dUlDQWdJQ0FnZDJsa2RHZzZJR05oYkdNb01UQXdKU0FySUNoQWMzQmhZMlV0YldRZ0tpQXlLU2s3WEc0Z0lDQWdJQ0F1YldGeVoybHVMVzltWm5ObGRDZ3RRSE53WVdObExXMWtLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dRR0p5WldGcmNHOXBiblF0YzIwcElIdGNiaUFnSUNBZ0lIZHBaSFJvT2lCallXeGpLREV3TUNVZ0t5QW9RSE53WVdObExYTnRJQ29nTWlrcE8xeHVJQ0FnSUNBZ0xtMWhjbWRwYmkxdlptWnpaWFFvTFVCemNHRmpaUzF6YlNrN1hHNWNiaUFnSUNBZ0lDOHZJRlJQUkU4NklIUmhZbXhsSUhOb1lXUnZkeUJ6ZFhCd2IzSjBYRzRnSUNBZ0lDQXZMeUJFWVhKclpYSWdjMmhoWkc5M0lHWnZjaUJ0YjJKcGJHVWdaR1YyYVdObGMxeHVJQ0FnSUNBZ0x5OGdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2djbUZrYVdGc0xXZHlZV1JwWlc1MEtHVnNiR2x3YzJVZ1lYUWdiR1ZtZEN3Z2NtZGlZU2d3TENBd0xDQXdMQ0F1TVNrZ01DVXNJSEpuWW1Fb01Dd2dNQ3dnTUN3Z01Da2dOelVsS1N4Y2JpQWdJQ0FnSUM4dklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmhaR2xoYkMxbmNtRmthV1Z1ZENobGJHeHBjSE5sSUdGMElISnBaMmgwTENCeVoySmhLREFzSURBc0lEQXNJQzR4S1NBd0pTd2djbWRpWVNnd0xDQXdMQ0F3TENBd0tTQTNOU1VwTzF4dUlDQWdJSDFjYmx4dUlDQWdJSFJvTEZ4dUlDQWdJSFJrSUh0Y2JpQWdJQ0FnSUhCaFpHUnBibWM2SUM0MlpXMGdRSE53WVdObExYaHpPMXh1WEc0Z0lDQWdJQ0FtT21acGNuTjBMV05vYVd4a0lIdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lCQWMzQmhZMlV0ZUhNN1hHNGdJQ0FnSUNBZ0lDOHZJRlJQUkU4NklIUmhZbXhsSUhOb1lXUnZkeUJ6ZFhCd2IzSjBYRzRnSUNBZ0lDQWdJQzh2SUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUd4cGJtVmhjaTFuY21Ga2FXVnVkQ2gwYnlCeWFXZG9kQ3dnSTJabVppQTFNQ1VzSUhKblltRW9NalUxTENBeU5UVXNJREkxTlN3Z01Da2dNVEF3SlNrN1hHNGdJQ0FnSUNBZ0lDOHZJR0poWTJ0bmNtOTFibVF0Y21Wd1pXRjBPaUJ1YnkxeVpYQmxZWFE3WEc0Z0lDQWdJQ0FnSUM4dklHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJREFnTUR0Y2JpQWdJQ0FnSUNBZ0x5OGdZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQTFNSEI0SURFd01DVTdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ1k2YkdGemRDMWphR2xzWkNCN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jdGNtbG5hSFE2SUVCemNHRmpaUzE0Y3p0Y2JpQWdJQ0FnSUNBZ0x5OGdWRTlFVHpvZ2RHRmliR1VnYzJoaFpHOTNJSE4xY0hCdmNuUmNiaUFnSUNBZ0lDQWdMeThnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nYkdsdVpXRnlMV2R5WVdScFpXNTBLSFJ2SUd4bFpuUXNJQ05tWm1ZZ05UQWxMQ0J5WjJKaEtESTFOU3dnTWpVMUxDQXlOVFVzSURBcElERXdNQ1VwTzF4dUlDQWdJQ0FnSUNBdkx5QmlZV05yWjNKdmRXNWtMWEpsY0dWaGREb2dibTh0Y21Wd1pXRjBPMXh1SUNBZ0lDQWdJQ0F2THlCaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dU9pQXhNREFsSURBN1hHNGdJQ0FnSUNBZ0lDOHZJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dOVEJ3ZUNBeE1EQWxPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nUUdKeVpXRnJjRzlwYm5RdGJXUXBJSHRjYmx4dUlDQWdJQ0FnSUNBbU9tWnBjbk4wTFdOb2FXeGtJSHRjYmlBZ0lDQWdJQ0FnSUNCd1lXUmthVzVuTFd4bFpuUTZJRUJ6Y0dGalpTMXRaRHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDWTZiR0Z6ZEMxamFHbHNaQ0I3WEc0Z0lDQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nUUhOd1lXTmxMVzFrTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQkFZbkpsWVd0d2IybHVkQzF6YlNrZ2UxeHVYRzRnSUNBZ0lDQWdJQ1k2Wm1seWMzUXRZMmhwYkdRZ2UxeHVJQ0FnSUNBZ0lDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ1FITndZV05sTFhOdE8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSmpwc1lYTjBMV05vYVd4a0lIdGNiaUFnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQkFjM0JoWTJVdGMyMDdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQjBhQ0I3WEc0Z0lDQWdJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQkFZbTl5WkdWeUxXUmxabUYxYkhRZ2MyOXNhV1FnWm1Ga1pTaEFkR1Y0ZEMxamIyeHZjaXdnTmlVcE8xeHVJQ0FnSUNBZ0x5OGdUM1psY25KcFpHVWdaR1ZtWVhWc2RDQjFjMlZ5SUdGblpXNTBJSE4wZVd4bGMyaGxaWFJjYmlBZ0lDQWdJSFJsZUhRdFlXeHBaMjQ2SUd4bFpuUTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2RHUWdlMXh1SUNBZ0lDQWdZbTl5WkdWeUxYUnZjRG9nUUdKdmNtUmxjaTF6YlNCemIyeHBaQ0JtWVdSbEtFQjBaWGgwTFdOdmJHOXlMQ0EwSlNrN1hHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc1Y2JpOHZJRkJ2YzNSeklIZHBkR2dnUVhOcFlXNGdZMmhoY21GamRHVnljMXh1T214aGJtY29lbWdwTEZ4dU9teGhibWNvYW1FcElIdGNiaUFnZEdWNGRDMWhiR2xuYmpvZ2FuVnpkR2xtZVR0Y2JseHVJQ0JvWldGa1pYSWdlMXh1WEc0Z0lDQWdKaXhjYmlBZ0lDQW1JQ29nZTF4dUlDQWdJQ0FnZEdWNGRDMWhiR2xuYmpvZ2MzUmhjblE3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnY25WaWVTQjdYRzVjYmlBZ0lDQnlkQ0I3WEc0Z0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCemRHRnlkRHRjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1THk4Z1ZIZGxaWFFnWW5WMGRHOXVJRzFoY21kcGJpQm1hWGhjYmk1d2IzTjBMVzF2WkdsbWFXVmtMV1JoZEdVZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SURjMUpUdGNiaUFnYjNCaFkybDBlVG9nTGpVN1hHNTlYRzVjYmk4dklFeGhjbWRsZEhsd1pTQnpkSGxzWlhNZ0tISmxjR3hoWTJWeklHSjFkSFJ2YmlCemRIbHNaWE1wWEc0dWJHRnlaMlYwZVhCbElIdGNiaUFnTG1obFlXUnBibWNvS1R0Y2JpQWdabTl1ZEMxemFYcGxPaUF5TURBbE8xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhMamh5WlcwZ0lXbHRjRzl5ZEdGdWREdGNibjFjYmx4dUx5OGdRbkp2YzJWeUlHWnlZVzFsSUdadmNpQnBiV0ZuWlhNZ2FXNGdZMkYwWldkdmNua2dYQ0ozYjNKclhDSmNiaTVpY205M2MyVnlJSHRjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ01qUndlRHRjYmlBZ1ltRmphMmR5YjNWdVpEb2djbWRpWVNneU5UVXNJREkxTlN3Z01qVTFMQ0F1TVNrN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklEVndlQ0ExY0hnZ01DQXdPMXh1SUNCaWIzZ3RjMmhoWkc5M09pQXdJREFnTUNBeGNIZ2djbWRpWVNnd0xDQXdMQ0F3TENBdU1EVXBPMXh1WEc0Z0lDOHZJRkpsYzJWMElHSnliM2R6WlhJZ1ltOXlaR1Z5TFhKaFpHbDFjeUJtYjNJZ2MyMWhiR3dnYzJOeVpXVnVjMXh1SUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ1FHSnlaV0ZyY0c5cGJuUXRiV1FwTENBb2JXRjRMWGRwWkhSb09pQkFZbkpsWVd0d2IybHVkQzF6YlNrZ2UxeHVJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJREE3WEc0Z0lIMWNibHh1SUNBbU9tSmxabTl5WlNCN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJSFJ2Y0RvZ09IQjRPMXh1SUNBZ0lHeGxablE2SURFd2NIZzdYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdkMmxrZEdnNklEaHdlRHRjYmlBZ0lDQm9aV2xuYUhRNklEaHdlRHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUJzYVdkb2RHVnVLQ05tTWpSbE5Ua3NJRE13SlNrN1hHNGdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dOVEFsTzF4dUlDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJQ0FnWW05NExYTm9ZV1J2ZHpwY2JpQWdJQ0FnSUNBZ01UWndlQ0F3SURBZ01DQWdJR1poWkdVb2JHbG5hSFJsYmlnalptRmpOVE0yTENBek1DVXBMQ0E1TmlVcFhHNGdJQ0FnSUNBc0lETXljSGdnTUNBd0lEQWdJQ0JtWVdSbEtHeHBaMmgwWlc0b0l6STJaVGt6WkN3Z016QWxLU3dnT1RZbEtWeHVJQ0FnSUNBZ0xDQWdJQ0F3SURBZ01DQXhjSGdnWm1Ga1pTaGtZWEpyWlc0b0kyWXlOR1UxT1N3Z016QWxLU3dnTXpBbEtWeHVJQ0FnSUNBZ0xDQXhObkI0SURBZ01DQXhjSGdnWm1Ga1pTaGtZWEpyWlc0b0kyWmhZelV6Tml3Z016QWxLU3dnTXpBbEtWeHVJQ0FnSUNBZ0xDQXpNbkI0SURBZ01DQXhjSGdnWm1Ga1pTaGtZWEpyWlc0b0l6STJaVGt6WkN3Z016QWxLU3dnTXpBbEtWeHVJQ0FnSUR0Y2JpQWdmVnh1WEc0Z0lHbHRaeUI3WEc0Z0lDQWdMeThnWVhadmFXUWdhVzFoWjJWeklHbHVjMmxrWlNBdVluSnZkM05sY2lCemRISmxkR05vWldRZ1lua2daMnh2WW1Gc0lHbHRaeUJ6ZEhsc1pYTmNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb2dNRHRjYmlBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SURBN1hHNGdJQ0FnZDJsa2RHZzZJR0YxZEc4N1hHNGdJQ0FnYldGNExYZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lHSnZlQzF6YUdGa2IzYzZJREFnTFRGd2VDQXdJREFnY21kaVlTZ3dMQ0F3TENBd0xDQXVNRFVwTzF4dUlDQjlYRzU5WEc1Y2JpOHZJRVY0ZEhKaElHOW1abk5sZENCbWIzSWdUMU1nV0NCelkzSmxaVzV6YUc5MGMxeHVMbk5qY21WbGJuTm9iM1F0YldGaklIdGNiaUFnUUc5emVDMXphR0ZrYjNjdGMybDZaVG9nTlRad2VEdGNiaUFnTG0xaGNtZHBiaTF2Wm1aelpYUW9MVUJ2YzNndGMyaGhaRzkzTFhOcGVtVXBPMXh1WEc0Z0lFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQkFZbkpsWVd0d2IybHVkQzF0WkNrc0lDaHRZWGd0ZDJsa2RHZzZJRUJpY21WaGEzQnZhVzUwTFhOdEtTQjdYRzRnSUNBZ0xtMWhjbWRwYmkxdlptWnpaWFFvTUNrN1hHNGdJSDFjYm4xY2JseHVMeThnVTNCbFkybGhiQ0J3WVhKaFozSmhjR2dnZDJsMGFDQmliM0prWlhJZ2JHbHVaVnh1TG01dmRHVXNYRzR1YzNSdmNtVXNYRzR1Wkc5M2JteHZZV1FnZTF4dUlDQndZV1JrYVc1bkxXeGxablE2SUVCemNHRmpaUzE0Y3p0Y2JpQWdiV0Z5WjJsdUxXeGxablE2SUMxQWMzQmhZMlV0ZUhNN1hHNGdJR0p2Y21SbGNpMXNaV1owT2lCQVltOXlaR1Z5TFdSbFptRjFiSFFnYzI5c2FXUWdRR3hwYm1zdFkyOXNiM0k3WEc1Y2JpQWdRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRUJpY21WaGEzQnZhVzUwTFhOdEtTQjdYRzRnSUNBZ0xuQmhaR1JwYm1jdGIyWm1jMlYwS0dOaGJHTW9RSE53WVdObExYTnRJQzBnUUdKdmNtUmxjaTFrWldaaGRXeDBLU3dnUUhOd1lXTmxMWE50S1R0Y2JpQWdJQ0F1YldGeVoybHVMVzltWm5ObGRDZ3RRSE53WVdObExYTnRLVHRjYmlBZ2ZWeHVmVnh1WEc0dkx5QlNaV1psY21WdVkyVWdibTkwWlhNZ1lXNWtJR3hwYm10eklHbHVJSEJ2YzNSY2JpNW1iMjkwYm05MFpYTWdlMXh1SUNBdWMzQnNhWFJsY2lncE8xeHVJQ0JtYjI1MExYTnBlbVU2SURnd0pUdGNibjFjYmx4dU9uUmhjbWRsZENCN1hHNWNiaUFnTHk4Z1VtVmtZMkZ5Y0dWMExYTjBlV3hsWEc0Z0lGdHlaWFk5Wm05dmRHNXZkR1ZkTEZ4dUlDQmJjbVZzUFdadmIzUnViM1JsWFN4Y2JseHVJQ0F2THlCcmNtRnRaRzkzYmkxemRIbHNaVnh1SUNBdWNtVjJaWEp6WldadmIzUnViM1JsTEZ4dUlDQXVabTl2ZEc1dmRHVWdlMXh1SUNBZ0lHTnZiRzl5T2lCQWJHbHVheTFqYjJ4dmNqdGNiaUFnZlZ4dWZWeHVYRzR2THlCUWIzTjBJR3hwYzNRZ2FXNGdYQ0ozYjNKclhDSWdZVzVrSUZ3aWJtOTBaVndpWEc0dWJHbHpkQ0I3WEc0Z0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQnRZWEpuYVc0NklEQWdNQ0F1TkhKbGJUdGNibHh1SUNCb01TQjdYRzRnSUNBZ0xtaGxZV1JwYm1jb0tUdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklESXdNQ1U3WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFdU1UdGNiaUFnSUNBdkx5QlBkbVZ5Y21sa1pTQm9aV0ZrYVc1bklHUmxabWx1WlhNZ2FXNGdMbU52Ym5SbGJuUmNiaUFnSUNCdmNHRmphWFI1T2lBeE8xeHVJQ0FnSUcxaGNtZHBiam9nTUR0Y2JseHVJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lCQVluSmxZV3R3YjJsdWRDMXpiU2tnZTF4dUlDQWdJQ0FnTHk4Z1NHbGtaU0JsZUhSbGNtNWhiQ0JzYVc1cklHWnZjaUJ3YjNOMElHeHBjM1JjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRnd0pUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQXVaWGgwWlhKdVlXd2dlMXh1WEc0Z0lDQWdRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRUJpY21WaGEzQnZhVzUwTFhOdEtTQjdYRzRnSUNBZ0lDQXZMeUJJYVdSbElHVjRkR1Z5Ym1Gc0lHeHBibXNnWm05eUlIQnZjM1FnYkdsemRGeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1THk4Z1FTQmtiM1FnYzNsdFltOXNJR1p2Y2lCbGVIUmxjbTVoYkNCc2FXNXJjMXh1TG1WNGRHVnlibUZzSUh0Y2JseHVJQ0F1Wkc5MElIdGNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUNBZ2QybGtkR2c2SUM0M2NtVnRPMXh1SUNBZ0lHaGxhV2RvZERvZ0xqZHlaVzA3WEc0Z0lDQWdiV0Z5WjJsdU9pQXdJQzR4WlcwN1hHNGdJQ0FnZG1WeWRHbGpZV3d0WVd4cFoyNDZJRzFwWkdSc1pUdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQkFkR1Y0ZEMxamIyeHZjanRjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBMU1DVTdYRzRnSUNBZ2RISmhibk5wZEdsdmJqb2dkSEpoYm5ObWIzSnRJQzQwY3lCbFlYTmxPMXh1WEc0Z0lDQWdMeThnUlhoMGNtRWdiV0Z5WjJsdUlHWnZjaUJsZUhSbGNtNWhiQ0J6ZVcxaWIyd2dhVzRnYzJsdVozVnNZWEpjYmlBZ0lDQW1MUzF3YjNOMElIdGNiaUFnSUNBZ0lHMWhjbWRwYmkxc1pXWjBPaUF4Y21WdE8xeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lDWTZhRzkyWlhJc1hHNGdJQ1k2Wm05amRYTWdlMXh1WEc0Z0lDQWdMbVJ2ZENCN1hHNGdJQ0FnSUNCMGNtRnVjMlp2Y20wNklITmpZV3hsS0RFdU5DazdYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNWNiaTVtYjI5MFpYSWdlMXh1SUNCd1lXUmthVzVuT2lBd0lEQWdNVFoyYldsdU8xeHVJQ0JtYjI1MExYTnBlbVU2SURjMUpUdGNiaUFnZEdWNGRDMTBjbUZ1YzJadmNtMDZJR3h2ZDJWeVkyRnpaVHRjYmx4dUlDQjFiQ0I3WEc1Y2JpQWdJQ0JzYVNCN1hHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCcGJteHBibVU3WEc1Y2JpQWdJQ0FnSUNZNllXWjBaWElnZTF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2lBd0lFQnVZWFl0YVhSbGJTMXpjR0ZqWlR0Y2JpQWdJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ1hDSWdMeUJjSWp0Y2JpQWdJQ0FnSUNBZ2IzQmhZMmwwZVRvZ0xqTTdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ1k2YkdGemRDMWphR2xzWkNCN1hHNWNiaUFnSUNBZ0lDQWdKanBoWm5SbGNpQjdYRzRnSUNBZ0lDQWdJQ0FnWTI5dWRHVnVkRG9nYm05dVpUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVJaXdpTHk5Y2JpOHZJRkJzZFdkcGJuTmNiaTh2SUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzVjYmk4dklFZHBkRWgxWWlCSGFYTjBYRzR1WjJsemRDQjdYRzRnSUdadmJuUXRjMmw2WlRvZ09EQWxJQ0ZwYlhCdmNuUmhiblE3WEc1Y2JpQWdZMjlrWlN3Z2NISmxJSHRjYmlBZ0lDQndZV1JrYVc1bk9pQXdPMXh1SUNBZ0lHTnZiRzl5T2lCcGJtaGxjbWwwTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQjlYRzVjYmlBZ0xtZHBjM1F0WkdGMFlTQjdYRzRnSUNBZ1ptOXVkQzFtWVcxcGJIazZJRUJtYjI1MGMzUmhZMnN0Ylc5dWIzTndZV05sSUNGcGJYQnZjblJoYm5RN1hHNWNiaUFnSUNBdVptbHNaUzFrWVhSaElIdGNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dNVEF3SlNBaGFXMXdiM0owWVc1ME8xeHVYRzRnSUNBZ0lDQStJSFJoWW14bElIdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01DQWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJQzh2SUUxdmJtOXpjR0ZqWlNCbWIyNTBjeUJzYjI5cklHSnBaMmRsY2lCMGFHRnVJRzV2Y20xaGJDQm1iMjUwY3l3Z2MyOGdiV0ZyWlNCcGRDQnpiV0ZzYkdWeUxseHVJQ0F1YUdsbmFHeHBaMmgwSUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURrd0pTQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNWNiaUFnTG0xaGNtdGtiM2R1TFdKdlpIa2dlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNVEF3SlNBaGFXMXdiM0owWVc1ME8xeHVJQ0FnSUhCaFpHUnBibWM2SURGbGJTQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNTlYRzRpTENJdkwxeHVMeThnVUhKcGJuUmNiaTh2SUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzVjYmk4dklGTjBlV3hsSUdacGVHVnpJR1p2Y2lCd2NtbDBhVzVuWEc1Y2JrQnRaV1JwWVNCd2NtbHVkQ0I3WEc1Y2JpQWdLaXhjYmlBZ0tqcGlaV1p2Y21Vc1hHNGdJQ282WVdaMFpYSWdlMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJSFJ5WVc1emNHRnlaVzUwSUNGcGJYQnZjblJoYm5RN1hHNGdJQ0FnWTI5c2IzSTZJQ013TURBZ0lXbHRjRzl5ZEdGdWREc2dMeThnUW14aFkyc2djSEpwYm5SeklHWmhjM1JsY2pvZ2FEVmljQzVqYjIwdmMxeHVJQ0FnSUdKdmVDMXphR0ZrYjNjNklHNXZibVVnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdJQ0IwWlhoMExYTm9ZV1J2ZHpvZ2JtOXVaU0FoYVcxd2IzSjBZVzUwTzF4dUlDQjlYRzVjYmlBZ1ltOWtlU0I3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNVEJ0YlNBaGFXMXdiM0owWVc1ME8xeHVJQ0FnSUcxaGNtZHBiam9nTUNBaGFXMXdiM0owWVc1ME8xeHVJQ0I5WEc1Y2JpQWdZU3hjYmlBZ1lUcDJhWE5wZEdWa0lIdGNiaUFnSUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzRnSUgxY2JseHVJQ0F1WTI5dWRHVnVkQ0JvWldGa1pYSWdlMXh1SUNBZ0lHMXBiaTFvWldsbmFIUTZJREE3WEc0Z0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklEQTdYRzRnSUgxY2JseHVJQ0F1WTI5dWRHVnVkQ0F1Y0c5emRDMWpiMjUwWlc1MExGeHVJQ0F1WTI5dWRHVnVkQ0F1Y0dGblpTMWpiMjUwWlc1MElIdGNiaUFnSUNCdFlYZ3RkMmxrZEdnNklERXdNQ1VnSVdsdGNHOXlkR0Z1ZER0Y2JseHVJQ0FnSUdGYmFISmxabDA2WVdaMFpYSWdlMXh1SUNBZ0lDQWdZMjl1ZEdWdWREb2dYQ0lnS0Z3aUlHRjBkSElvYUhKbFppa2dYQ0lwWENJN1hHNGdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dibTl5YldGc08xeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklFUnZiaWQwSUhOb2IzY2diR2x1YTNNZ2RHaGhkQ0JoY21VZ1puSmhaMjFsYm5RZ2FXUmxiblJwWm1sbGNuTXNYRzRnSUNBZ0x5OGdiM0lnZFhObElIUm9aU0JnYW1GMllYTmpjbWx3ZERwZ0lIQnpaWFZrYnlCd2NtOTBiMk52YkZ4dUlDQWdJR0ZiYUhKbFpsNDlYQ0lqWENKZE9tRm1kR1Z5TEZ4dUlDQWdJR0ZiYUhKbFpsNDlYQ0pxWVhaaGMyTnlhWEIwT2x3aVhUcGhablJsY2lCN1hHNGdJQ0FnSUNCamIyNTBaVzUwT2lCY0lsd2lPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHRmlZbkpiZEdsMGJHVmRPbUZtZEdWeUlIdGNiaUFnSUNBZ0lHTnZiblJsYm5RNklGd2lJQ2hjSWlCaGRIUnlLSFJwZEd4bEtTQmNJaWxjSWp0Y2JpQWdJQ0FnSUdadmJuUXRkMlZwWjJoME9pQnViM0p0WVd3N1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ2NISmxMRnh1SUNCaWJHOWphM0YxYjNSbElIdGNiaUFnSUNCd1lXZGxMV0p5WldGckxXbHVjMmxrWlRvZ1lYWnZhV1E3WEc0Z0lIMWNibHh1SUNCMGFHVmhaQ0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dkR0ZpYkdVdGFHVmhaR1Z5TFdkeWIzVndPMXh1SUNCOVhHNWNiaUFnZEhJc1hHNGdJR2x0WnlCN1hHNGdJQ0FnY0dGblpTMWljbVZoYXkxcGJuTnBaR1U2SUdGMmIybGtPMXh1SUNCOVhHNWNiaUFnYVcxbklIdGNiaUFnSUNCdFlYZ3RkMmxrZEdnNklERXdNQ1VnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdmVnh1WEc0Z0lIQXNYRzRnSUdneUxGeHVJQ0JvTXl4Y2JpQWdhRFFzWEc0Z0lHZzFMRnh1SUNCb05pQjdYRzRnSUNBZ2IzSndhR0Z1Y3pvZ016dGNiaUFnSUNCM2FXUnZkM002SURNN1hHNGdJSDFjYmx4dUlDQm9NaXhjYmlBZ2FETWdlMXh1SUNBZ0lIQmhaMlV0WW5KbFlXc3RZV1owWlhJNklHRjJiMmxrTzF4dUlDQjlYRzVjYmlBZ0xtNWhkbWxuWVhScGIyNHNYRzRnSUM1bWIyOTBaWElnZTF4dUlDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNGdJSDFjYm4xY2JpSXNJaTh2WEc0dkx5QlNZVzVrYjIxcGVtVmtJSHdnd3FrZ1ZIVnVaMmh6YVdGdklFeHBkU0I4SUUxSlZGeHVMeTljYmx4dUx5OGdWbUZ5YVdGaWJHVnpJR1p2Y2lCemRHRnVaR0ZzYjI1bElIWmxjbk5wYjI1Y2JpOHZJRUJzYVc1ckxXTnZiRzl5T2lBallUSXhNbVF4TzF4dUx5OGdRR052WkdVdFkyOXNiM0k2SUNNd01HTmpPREE3WEc1Y2JpOHZJRU5oYkdOMWJHRjBaU0JqYjJSbElHSmhZMnRuY205MWJtUWdZMjlzYjNJZ1ltRnpaV1FnYjI0Z2RHaGxJR3hwWjJoMGJtVnpjeUJ2WmlCc2FXNXJJR052Ykc5eVhHNHVZMkZzWXkxaVp5QW9RSFlwSUhkb1pXNGdLR3hwWjJoMGJtVnpjeWhBZGlrZ1BqMGdPREFsS1NCN1hHNGdJRUJqWVd4akxXSm5PaUJ0YVhnb0kyWm1aaXdnUUhZc0lEa3dKU2s3WEc1OVhHNWNiaTVqWVd4akxXSm5JQ2hBZGlrZ2QyaGxiaUFvYkdsbmFIUnVaWE56S0VCMktTQThJRGd3SlNrZ2UxeHVJQ0JBWTJGc1l5MWlaem9nYldsNEtDTXdNREFzSUVCMkxDQTNNQ1VwTzF4dWZWeHVYRzR2THlCU1pYTmxkQ0JpWVdOclozSnZkVzVrWEc0dkwxeHVMeThnWUM1b2FXZG9iR2xuYUhRZ1BpQndjbVZnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F0SUVwbGEzbHNiQ0JzYVhGMWFXUWdZMjlrWlNCaWJHOWphM05jYmk4dklHQXVhR2xuYUd4cFoyaDBaWEl0Y205MVoyVWdjSEpsTG1ocFoyaHNhV2RvZEdBZ0xTQlNiM1ZuWlNCSFJrMGdZMjlrWlNCaWJHOWphM05jYmk4dlhHNHZMeUJTWldZNklHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOXFaV3Q1Ykd3dmFtVnJlV3hzTDNCMWJHd3ZOREExTTF4dVFHaHBaMmhzYVdkb2RHVnlMWFJwYm5RNklFQnNhVzVyTFdOdmJHOXlPMXh1TG1ocFoyaHNhV2RvZENBK0lIQnlaU3hjYmk1b2FXZG9iR2xuYUhSbGNpMXliM1ZuWlNCd2NtVXVhR2xuYUd4cFoyaDBJSHRjYmlBZ0xtTmhiR010WW1jb1FHaHBaMmhzYVdkb2RHVnlMWFJwYm5RcE8xeHVJQ0JpWVdOclozSnZkVzVrT2lCbVlXUmxLRUJqWVd4akxXSm5MQ0F5SlNrN1hHNTlYRzVjYmk4dklFZGxibVZ5WVd3Z2FHbG5hR3hwWjJoMGMxeHVMeTljYmk4dklHQXVhR2xuYUd4cFoyaDBJR052WkdWZ0lDQWdJQ0FnSUNBZ0xTQlNiM1ZuWlNCSFJrMGdZVzVrSUVwbGEzbHNiQ0JzYVhGMWFXUWdZMjlrWlNCaWJHOWphM05jYmk4dklHQXVhR2xuYUd4cFoyaDBaWEl0Y205MVoyVWdZMjlrWldBZ0xTQlNiM1ZuWlNCcGJteHBibVVnWTI5a1pWeHVMbWhwWjJoc2FXZG9kQ3hjYmk1b2FXZG9iR2xuYUhSbGNpMXliM1ZuWlNCN1hHNWNiaUFnTHk4Z1VtVnpaWFFnWkdWbVlYVnNkQ0JnWTI5a1pXQmNiaUFnWTI5a1pTQjdJR052Ykc5eU9pQmtaWE5oZEhWeVlYUmxLRUJzYVc1ckxXTnZiRzl5TENBNU5TVXBPeUI5SUM4dklFNXZjbTFoYkNCamIyUmxYRzVjYmlBZ0x5OGdVM0JsWTJsaGJDQmlZV05yWjNKdmRXNWtJR1p2Y2lCemVXNTBZWGdnWlhKeWIzSnpYRzRnSUM1bGNuSWdleUJpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJtWVdSbEtITmhkSFZ5WVhSbEtFQm9hV2RvYkdsbmFIUmxjaTEwYVc1MExDQXhNQ1VwTENBeE1DVXBJSDBnTHk4Z1JYSnliM0pjYmx4dUlDQXVZeUFnSUhzZ1ptOXVkQzF6ZEhsc1pUb2dhWFJoYkdsaklIMGdMeThnUTI5dGJXVnVkRnh1SUNBdVkyMGdJSHNnWm05dWRDMXpkSGxzWlRvZ2FYUmhiR2xqSUgwZ0x5OGdRMjl0YldWdWRDNU5kV3gwYVd4cGJtVmNiaUFnTG1Od0lDQjdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtJSDBnSUM4dklFTnZiVzFsYm5RdVVISmxjSEp2WTF4dUlDQXVZekVnSUhzZ1ptOXVkQzF6ZEhsc1pUb2dhWFJoYkdsaklIMGdMeThnUTI5dGJXVnVkQzVUYVc1bmJHVmNiaUFnTG1OeklDQjdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtPeUJtYjI1MExYTjBlV3hsT2lCcGRHRnNhV01nZlNBdkx5QkRiMjF0Wlc1MExsTndaV05wWVd4Y2JseHVJQ0F1Ym1NZ0lIc2dabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUWdmU0F2THlCT1lXMWxMa05zWVhOelhHNGdJQzV1WlNBZ2V5Qm1iMjUwTFhkbGFXZG9kRG9nWW05c1pDQjlJQzh2SUU1aGJXVXVSWGhqWlhCMGFXOXVYRzRnSUM1dVppQWdleUJtYjI1MExYZGxhV2RvZERvZ1ltOXNaQ0I5SUM4dklFNWhiV1V1Um5WdVkzUnBiMjVjYmx4dUlDQXVieUFnSUhzZ1ptOXVkQzEzWldsbmFIUTZJR0p2YkdRZ2ZTQXZMeUJQY0dWeVlYUnZjbHh1SUNBdWIzY2dJSHNnWm05dWRDMTNaV2xuYUhRNklHSnZiR1FnZlNBdkx5QlBjR1Z5WVhSdmNpNVhiM0prWEc1Y2JpQWdMbWR6SUNCN0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a0lIMGdJQzh2SUVkbGJtVnlhV011VTNSeWIyNW5YRzRnSUM1blpTQWdleUJtYjI1MExYTjBlV3hsT2lCcGRHRnNhV01nZlNBdkx5QkhaVzVsY21sakxrVnRjR2hjYmx4dUlDQXVheUFnSUhzZ1ptOXVkQzEzWldsbmFIUTZJR0p2YkdRZ2ZTQXZMeUJMWlhsM2IzSmtYRzRnSUM1cmRDQWdleUJtYjI1MExYZGxhV2RvZERvZ1ltOXNaQ0I5SUM4dklFdGxlWGR2Y21RdVZIbHdaVnh1SUNBdWEyTWdJSHNnWm05dWRDMTNaV2xuYUhRNklHSnZiR1FnZlNBdkx5QkxaWGwzYjNKa0xrTnZibk4wWVc1MFhHNGdJQzVyWkNBZ2V5Qm1iMjUwTFhkbGFXZG9kRG9nWW05c1pDQjlJQzh2SUV0bGVYZHZjbVF1UkdWamJHRnlZWFJwYjI1Y2JpQWdMbXR3SUNCN0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a0lIMGdMeThnUzJWNWQyOXlaQzVRYzJWMVpHOWNiaUFnTG10eUlDQjdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtJSDBnTHk4Z1MyVjVkMjl5WkM1U1pYTmxjblpsWkZ4dVhHNGdJRUIwYjJ0bGJpMXRZV2x1T2x4dUlDQWdJR1Z5Y2lBdkx5QkZjbkp2Y2x4dUlDQWdJSGdnSUNBdkx5QlBkR2hsY2x4dVhHNGdJQ0FnYmlBZ0x5OGdUbUZ0WlZ4dUlDQWdJRzVoSUM4dklFNWhiV1V1UVhSMGNtbGlkWFJsWEc0Z0lDQWdibUlnTHk4Z1RtRnRaUzVDZFdsc2RHbHVYRzRnSUNBZ1luQWdMeThnVG1GdFpTNUNkV2xzZEdsdUxsQnpaWFZrYjF4dUlDQWdJRzVqSUM4dklFNWhiV1V1UTJ4aGMzTmNiaUFnSUNCdWJ5QXZMeUJPWVcxbExrTnZibk4wWVc1MFhHNGdJQ0FnYm1RZ0x5OGdUbUZ0WlM1RVpXTnZjbUYwYjNKY2JpQWdJQ0J1YVNBdkx5Qk9ZVzFsTGtWdWRHbDBlVnh1SUNBZ0lHNWxJQzh2SUU1aGJXVXVSWGhqWlhCMGFXOXVYRzRnSUNBZ2JtWWdMeThnVG1GdFpTNUdkVzVqZEdsdmJseHVJQ0FnSUc1c0lDOHZJRTVoYldVdVRHRmlaV3hjYmlBZ0lDQnViaUF2THlCT1lXMWxMazVoYldWemNHRmpaVnh1SUNBZ0lHNTRJQzh2SUU1aGJXVXVUM1JvWlhKY2JpQWdJQ0J1ZENBdkx5Qk9ZVzFsTGxSaFoxeHVJQ0FnSUc1MklDOHZJRTVoYldVdVZtRnlhV0ZpYkdWY2JpQWdJQ0IyWXlBdkx5Qk9ZVzFsTGxaaGNtbGhZbXhsTGtOc1lYTnpYRzRnSUNBZ2RtY2dMeThnVG1GdFpTNVdZWEpwWVdKc1pTNUhiRzlpWVd4Y2JpQWdJQ0IyYVNBdkx5Qk9ZVzFsTGxaaGNtbGhZbXhsTGtsdWMzUmhibU5sWEc1Y2JpQWdJQ0JuSUNBdkx5QkhaVzVsY21salhHNGdJQ0FnWjJRZ0x5OGdSMlZ1WlhKcFl5NUVaV3hsZEdWa1hHNGdJQ0FnWjJVZ0x5OGdSMlZ1WlhKcFl5NUZiWEJvWEc0Z0lDQWdaM0lnTHk4Z1IyVnVaWEpwWXk1RmNuSnZjbHh1SUNBZ0lHZG9JQzh2SUVkbGJtVnlhV011U0dWaFpHbHVaMXh1SUNBZ0lHZHBJQzh2SUVkbGJtVnlhV011U1c1elpYSjBaV1JjYmlBZ0lDQm5ieUF2THlCSFpXNWxjbWxqTGs5MWRIQjFkRnh1SUNBZ0lHZHdJQzh2SUVkbGJtVnlhV011VUhKdmJYQjBYRzRnSUNBZ1ozTWdMeThnUjJWdVpYSnBZeTVUZEhKdmJtZGNiaUFnSUNCbmRTQXZMeUJIWlc1bGNtbGpMbE4xWW1obFlXUnBibWRjYmlBZ0lDQm5kQ0F2THlCSFpXNWxjbWxqTGxSeVlXTmxZbUZqYTF4dUlDQWdJR2RzSUM4dklFZGxibVZ5YVdNdVRHbHVaVzV2WEc1Y2JpQWdJQ0JySUNBdkx5QkxaWGwzYjNKa1hHNGdJQ0FnYTJNZ0x5OGdTMlY1ZDI5eVpDNURiMjV6ZEdGdWRGeHVJQ0FnSUd0a0lDOHZJRXRsZVhkdmNtUXVSR1ZqYkdGeVlYUnBiMjVjYmlBZ0lDQnJiaUF2THlCTFpYbDNiM0prTGs1aGJXVnpjR0ZqWlZ4dUlDQWdJR3R3SUM4dklFdGxlWGR2Y21RdVVITmxkV1J2WEc0Z0lDQWdhM0lnTHk4Z1MyVjVkMjl5WkM1U1pYTmxjblpsWkZ4dUlDQWdJR3QwSUM4dklFdGxlWGR2Y21RdVZIbHdaVnh1SUNBZ0lHdDJJQzh2SUV0bGVYZHZjbVF1Vm1GeWFXRmliR1ZjYmx4dUlDQWdJSGNnSUM4dklGUmxlSFF1VjJocGRHVnpjR0ZqWlZ4dVhHNGdJQ0FnYkNBZ0x5OGdUR2wwWlhKaGJGeHVYRzRnSUNBZ2JHUWdMeThnVEdsMFpYSmhiQzVFWVhSbFhHNWNiaUFnSUNCeklDQXZMeUJNYVhSbGNtRnNMbE4wY21sdVoxeHVJQ0FnSUhOaUlDOHZJRXhwZEdWeVlXd3VVM1J5YVc1bkxrSmhZMnQwYVdOclhHNGdJQ0FnYzJNZ0x5OGdUR2wwWlhKaGJDNVRkSEpwYm1jdVEyaGhjbHh1SUNBZ0lITmtJQzh2SUV4cGRHVnlZV3d1VTNSeWFXNW5Ma1J2WTF4dUlDQWdJSE15SUM4dklFeHBkR1Z5WVd3dVUzUnlhVzVuTGtSdmRXSnNaVnh1SUNBZ0lITmxJQzh2SUV4cGRHVnlZV3d1VTNSeWFXNW5Ma1Z6WTJGd1pWeHVJQ0FnSUhOb0lDOHZJRXhwZEdWeVlXd3VVM1J5YVc1bkxraGxjbVZrYjJOY2JpQWdJQ0J6YVNBdkx5Qk1hWFJsY21Gc0xsTjBjbWx1Wnk1SmJuUmxjbkJ2YkZ4dUlDQWdJSE40SUM4dklFeHBkR1Z5WVd3dVUzUnlhVzVuTGs5MGFHVnlYRzRnSUNBZ2MzSWdMeThnVEdsMFpYSmhiQzVUZEhKcGJtY3VVbVZuWlhoY2JpQWdJQ0J6TVNBdkx5Qk1hWFJsY21Gc0xsTjBjbWx1Wnk1VGFXNW5iR1ZjYmlBZ0lDQnpjeUF2THlCTWFYUmxjbUZzTGxOMGNtbHVaeTVUZVcxaWIyeGNibHh1SUNBZ0lHMGdJQzh2SUV4cGRHVnlZV3d1VG5WdFltVnlYRzRnSUNBZ2JXWWdMeThnVEdsMFpYSmhiQzVPZFcxaVpYSXVSbXh2WVhSY2JpQWdJQ0J0YUNBdkx5Qk1hWFJsY21Gc0xrNTFiV0psY2k1SVpYaGNiaUFnSUNCdGFTQXZMeUJNYVhSbGNtRnNMazUxYldKbGNpNUpiblJsWjJWeVhHNGdJQ0FnYVd3Z0x5OGdUR2wwWlhKaGJDNU9kVzFpWlhJdVNXNTBaV2RsY2k1TWIyNW5YRzRnSUNBZ2JXOGdMeThnVEdsMFpYSmhiQzVPZFcxaVpYSXVUMk4wWEc0Z0lDQWdiV0lnTHk4Z1RHbDBaWEpoYkM1T2RXMWlaWEl1UW1sdVhHNGdJQ0FnYlhnZ0x5OGdUR2wwWlhKaGJDNU9kVzFpWlhJdVQzUm9aWEpjYmx4dUlDQWdJRzhnSUM4dklFOXdaWEpoZEc5eVhHNGdJQ0FnYjNjZ0x5OGdUM0JsY21GMGIzSXVWMjl5WkZ4dVhHNGdJQ0FnY0NBZ0x5OGdVSFZ1WTNSMVlYUnBiMjVjYmlBZ0lDQndhU0F2THlCUWRXNWpkSFZoZEdsdmJpNUpibVJwWTJGMGIzSmNiaUFnTzF4dVhHNGdJQzh2SUVkbGJtVnlZWFJsSUcxaGFXNGdhR2xuYUd4cFoyaDBjMXh1SUNBdkx5QlNaV1k2SUdoMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5c1pYTnpMMnhsYzNNdWFuTXZhWE56ZFdWekx6SXdOekZjYmlBZ0xteHZiM0F0YldGcGJpQW9RR2twSUhkb1pXNGdLRUJwSUR3Z0tHeGxibWQwYUNoQWRHOXJaVzR0YldGcGJpa2dLeUF4S1NrZ2UxeHVJQ0FnSUVCMGIydGxiam9nWlhoMGNtRmpkQ2hBZEc5clpXNHRiV0ZwYml3Z1FHa3BPMXh1WEc0Z0lDQWdMa0I3ZEc5clpXNTlJSHRjYmlBZ0lDQWdJR052Ykc5eU9pQnRhWGdvYzNCcGJpaEFZMjlrWlMxamIyeHZjaXdnS0VCcElDb2dNell3SUM4Z2JHVnVaM1JvS0VCMGIydGxiaTF0WVdsdUtTa3BMQ0JBYkdsdWF5MWpiMnh2Y2l3Z09EQWxLVHRjYmlBZ0lDQjlYRzRnSUNBZ0xteHZiM0F0YldGcGJpZ29RR2tnS3lBeEtTazdYRzRnSUgxY2JpQWdMbXh2YjNBdGJXRnBiaWd4S1R0Y2JseHVJQ0JBZEc5clpXNHRZMjl0YldWdWRITTZYRzRnSUNBZ1l5QXZMeUJEYjIxdFpXNTBYRzRnSUNBZ1kyUWdMeThnUTI5dGJXVnVkQzVOZFd4MGFXeHBibVZjYmlBZ0lDQmpiU0F2THlCRGIyMXRaVzUwTGsxMWJIUnBiR2x1WlZ4dUlDQWdJR053SUM4dklFTnZiVzFsYm5RdVVISmxjSEp2WTF4dUlDQWdJR014SUM4dklFTnZiVzFsYm5RdVUybHVaMnhsWEc0Z0lDQWdZM01nTHk4Z1EyOXRiV1Z1ZEM1VGNHVmphV0ZzWEc0Z0lEdGNibHh1SUNBdkx5QkhaVzVsY21GMFpTQm9hV2RvYkdsbmFIUWdabTl5SUdOdmJXMWxiblJ6WEc0Z0lDNXNiMjl3TFdOdmJXMWxiblJ6SUNoQWFTa2dkMmhsYmlBb1FHa2dQQ0FvYkdWdVozUm9LRUIwYjJ0bGJpMWpiMjF0Wlc1MGN5a2dLeUF4S1NrZ2UxeHVJQ0FnSUVCMGIydGxiam9nWlhoMGNtRmpkQ2hBZEc5clpXNHRZMjl0YldWdWRITXNJRUJwS1R0Y2JseHVJQ0FnSUM1QWUzUnZhMlZ1ZlNCN1hHNGdJQ0FnSUNCamIyeHZjam9nYldsNEtHUmxjMkYwZFhKaGRHVW9jM0JwYmloQVkyOWtaUzFqYjJ4dmNpd2dLRUJwSUNvZ016WXdJQzhnYkdWdVozUm9LRUIwYjJ0bGJpMWpiMjF0Wlc1MGN5a3BLU3dnTnpBbEtTd2dRR3hwYm1zdFkyOXNiM0lzSURrd0pTazdYRzRnSUNBZ0lDQnZjR0ZqYVhSNU9pQXVOanRjYmlBZ0lDQjlYRzRnSUNBZ0xteHZiM0F0WTI5dGJXVnVkSE1vS0VCcElDc2dNU2twTzF4dUlDQjlYRzRnSUM1c2IyOXdMV052YlcxbGJuUnpLREVwTzF4dVhHNGdJQzh2SUZKbGMyVjBJR052WkdVZ1lteHZZMnR6SUdGd2NHVmhjbUZ1WTJVZ2QybDBhQ0JzYVc1bElHNTFiV0psY25OY2JpQWdkR0ZpYkdVZ2UxeHVYRzRnSUNBZ0ppeGNiaUFnSUNCMGFDeGNiaUFnSUNCMFpDeGNiaUFnSUNCMFpDQndjbVVnZTF4dUlDQWdJQ0FnY0dGa1pHbHVaem9nTUR0Y2JpQWdJQ0FnSUcxaGNtZHBiam9nTUR0Y2JpQWdJQ0FnSUdKdmNtUmxjam9nYm05dVpUdGNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE1EQWxPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDOHZJRkp2ZFdkbElHZGxibVZ5WVhSbFpDQmpiMlJsWW14dlkydHpJSGRwZEdnZ1lHeHBibVZ1YjJBZ2QybHNiQ0J1WlhOMElHQndjbVZnSUdsdWMybGtaU0JoYmx4dUlDQWdJQzh2SUc5MWRIUmxjaUJnY0hKbFlDd2dkR2hwY3lCamIzVnNaQ0JvWld4d0lIQnlaWFpsYm5RZ1hDSmtiM1ZpYkdWY0lpQnpZM0p2Ykd4bGNpQnBjM04xWlNCdmJpQnpiMjFsWEc0Z0lDQWdMeThnY0d4aGRHWnZjbTF6WEc0Z0lDQWdjSEpsSUh0Y2JpQWdJQ0FnSUc5MlpYSm1iRzkzTFhnNklIWnBjMmxpYkdVN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTG1kMWRIUmxjaUI3WEc1Y2JpQWdJQ0FnSUM4dklGSmxjMlYwSUhSb1pXMWxMWE53WldOcFptbGpJSFJoWW14bElITjBlV3hsYzF4dUlDQWdJQ0FnSmpwbWFYSnpkQzFqYUdsc1pDeGNiaUFnSUNBZ0lDWTZiR0Z6ZEMxamFHbHNaQ0I3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURBZ0lXbHRjRzl5ZEdGdWREdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdMbXhwYm1WdWJ5QjdYRzRnSUNBZ0lDQWdJR052Ykc5eU9pQmtaWE5oZEhWeVlYUmxLRUJzYVc1ckxXTnZiRzl5TENBNU5TVXBPMXh1SUNBZ0lDQWdJQ0J2Y0dGamFYUjVPaUF1TlR0Y2JpQWdJQ0FnSUNBZ2RYTmxjaTF6Wld4bFkzUTZJRzV2Ym1VN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTG1OdlpHVWdlMXh1SUNBZ0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lBeFpXMDdYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNGlYWDA9ICovIiwiLy9cbi8vIFJlc2V0XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4qLFxuKjpiZWZvcmUsXG4qOmFmdGVyIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiAxMDAlO1xuICB0ZXh0LXNpemUtYWRqdXN0OiBub25lO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVsZWdpYmlsaXR5O1xuICBpbWFnZS1yZW5kZXJpbmc6IG9wdGltaXplcXVhbGl0eTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIC8vIFRPRE86IFlvdSBoYXZlIHRvIHNwZWljaWZ5IGJhY2tncm91bmQgY29sb3IgZm9yIGBodG1sYCBpbiBvcmRlciB0b1xuICAvLyAgICAgICBtYWtlIGAtd2Via2l0LWZpbHRlcmAgd29ya1xuICAvLyBMaW5rOiBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD01OTEwMTVcbiAgLy8gRGF0ZTogTWFyIDEsIDIwMTYsIDU6NDEgUE1cbiAgYmFja2dyb3VuZDogQGJhY2tncm91bmQtY29sb3I7XG59XG5cbmJvZHkge1xuICBwYWRkaW5nOiAwIEBzcGFjZS1sZztcbiAgbWFyZ2luOiAwIGF1dG8gMDtcbiAgZm9udC1mYW1pbHk6IEBmb250c3RhY2stZGVmYXVsdDtcbiAgZm9udC1zaXplOiBAZm9udC1zaXplO1xuICBsaW5lLWhlaWdodDogQGxpbmUtaGVpZ2h0O1xuICBoYW5naW5nLXB1bmN0dWF0aW9uOiBmaXJzdCBhbGxvdy1lbmQ7XG4gIGNvbG9yOiBAdGV4dC1jb2xvcjtcbiAgYmFja2dyb3VuZDogQGJhY2tncm91bmQtY29sb3I7XG4gIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZTtcblxuICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtbWQpIHtcbiAgICAucGFkZGluZy1vZmZzZXQoQHNwYWNlLW1kKTtcbiAgICBmb250LXNpemU6IChAZm9udC1zaXplICogMS40KTtcbiAgfVxuXG4gIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgIC5wYWRkaW5nLW9mZnNldChAc3BhY2Utc20pO1xuICAgIGZvbnQtc2l6ZTogKEBmb250LXNpemUgKiAyLjQpO1xuICB9XG5cbiAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LXhzKSB7XG4gICAgZm9udC1zaXplOiAoQGZvbnQtc2l6ZSAqIDMuMik7XG4gIH1cbn1cblxuLy8gUmVzZXQgZm9udHMgZm9yIHJlbGV2YW50IGVsZW1lbnRzXG5pbnB1dCxcbmJ1dHRvbixcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xufVxuXG4vLyBSZXNldCB1bnVzdWFsIEZpcmVmb3gtb24tQW5kcm9pZCBkZWZhdWx0IHN0eWxlLlxuLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MvaXNzdWVzLzIxNFxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3RbbXVsdGlwbGVdLFxudGV4dGFyZWEge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xufVxuXG4vLyBSZXNldCBjb21tb24gZWxlbWVudHNcbmEsIGJ1dHRvbiB7XG4gIGNvbG9yOiBAdGV4dC1jb2xvcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0cmFuc2l0aW9uOiBjb2xvciAuNXMgZWFzZSwgYm9yZGVyLWNvbG9yIC41cyBlYXNlLCBiYWNrZ3JvdW5kIC41cyBlYXNlLCBvcGFjaXR5IDEuNXMgZWFzZTtcblxuICAmOmhvdmVyLFxuICAmOmZvY3VzIHtcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAuMXMgZWFzZSwgYm9yZGVyLWNvbG9yIC4xcyBlYXNlLCBiYWNrZ3JvdW5kIC4xcyBlYXNlLCBvcGFjaXR5IC4xcyBlYXNlO1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIHRleHQtZGVjb3JhdGlvbi1za2lwOiBpbms7XG4gIH1cblxuICAmW2Rpc2FibGVkXSB7XG4gICAgb3BhY2l0eTogLjQ7XG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgfVxufVxuXG5idXR0b24ge1xuICBhcHBlYXJhbmNlOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuaW1nLCBociB7XG4gIGJvcmRlcjogMDtcbn1cblxuZGVsIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XG59XG5cbjo6cGxhY2Vob2xkZXIge1xuICBjb2xvcjogQHRleHQtY29sb3I7XG4gIG9wYWNpdHk6IC4yO1xuXG4gIDpmb2N1cyYge1xuICAgIGNvbG9yOiBAbGluay1jb2xvcjtcbiAgfVxufVxuIiwiLy9cbi8vIENvbW1vblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gVHlwb2dyYXBoeSBzZXR1cFxuLy8gVE9ETzogbmVlZCBiZXR0ZXIgc29sdXRpb25cbi8vIEFwcGx5IGBmb250LWZlYXR1cmVgIGZvciBBcHBsZSBkZXZpY2VzLCBzaW5jZSB0aGVzZSBmZWF0dXJlcyBhcmUgb25seVxuLy8gYXZhaWxhYmxlIGZvciBTYW4gRnJhbmNpc2NvLiBpbXBsZW1lbnRlZCBpbiBgYXBwLmpzYFxuLmpzLXN5c3RlbSB7XG5cbiAgJi0tYXBwbGUge1xuICAgIGZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJjYXNlXCIsIFwic3MwMVwiLCBcInNzMDJcIjtcbiAgfVxufVxuXG4vLyBNYWluIG5hdmlnYXRpb25cbkBuYXYtcGFkZGluZzogMS40dm1heDtcbkBuYXYtaXRlbS1zcGFjZTogMXZtYXg7XG4ubmF2aWdhdGlvbiB7XG4gIHBhZGRpbmctdG9wOiBAbmF2LXBhZGRpbmc7XG4gIHBhZGRpbmctYm90dG9tOiBAbmF2LXBhZGRpbmc7XG4gIG1hcmdpbi1yaWdodDogLUBuYXYtaXRlbS1zcGFjZTtcbiAgbWFyZ2luLWxlZnQ6IC1AbmF2LWl0ZW0tc3BhY2U7XG4gIGZvbnQtc2l6ZTogNjAlO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbGV0dGVyLXNwYWNpbmc6IC40NWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXG4gIGxpIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbGluZS1oZWlnaHQ6IDI7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcblxuICAgIGEge1xuICAgICAgcGFkZGluZzogLjVlbSBAbmF2LWl0ZW0tc3BhY2U7XG5cbiAgICAgICY6aG92ZXIsXG4gICAgICAmOmZvY3VzIHtcbiAgICAgICAgY29sb3I6IEBsaW5rLWNvbG9yO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8vIEN1cnJlbnRseSBhY3RpdmF0ZWQgcGFnZSBvciBjYXRlZ29yeSBjbGFzc1xuLmN1cnJlbnQge1xuXG4gIGEge1xuICAgIGNvbG9yOiBAbGluay1jb2xvcjtcbiAgfVxufVxuXG4vLyBMYXRlc3Qgd29yayBsaW5rXG5ib2R5OmhvdmVyIC5sYXRlc3Qge1xuICBjb2xvcjogQGxpbmstY29sb3IgIWltcG9ydGFudDtcbn1cblxuLy8gTWFpbiBjb250ZW50XG4uY29udGVudCB7XG4gIG1hcmdpbi1ib3R0b206IDE2dm1pbjtcblxuICAvLyBGb3Igc29tZSBzcGVjaWZpZWQgcG9zdHMgaW4gd29yayBjYXRlZ29yeVxuICAuY2Y7XG5cbiAgLy8gUmVtb3ZlIGV4dHJhIHNwYWNlIGZvciB0aGUgbGFzdCBwYXJhZ3JhcGggaW4gdGhlIGNvbnRhaW5lclxuICBhcnRpY2xlIHtcblxuICAgIC8vIGFydGljbGUgPiBwXG4gICAgPiAqOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuXG4gICAgICAvLyBhcnRpY2xlID4gdWwgPiBsaSwgYXJ0aWNsZSA+IC5mb290bm90ZXMgPiBvbFxuICAgICAgPiAqOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG5cbiAgICAgICAgLy8gYXJ0aWNsZSA+IHVsID4gbGkgPiBwLCBhcnRpY2xlID4gLmZvb3Rub3RlcyA+IG9sID4gbGlcbiAgICAgICAgPiAqOmxhc3QtY2hpbGQge1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDtcblxuICAgICAgICAgIC8vIGFydGljbGUgPiAuZm9vdG5vdGVzID4gb2wgPiBsaSA+IHBcbiAgICAgICAgICA+ICo6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gUG9zdCAvIHBhZ2UgY29udGVudCBmaXJzdCBlbGVtZW50IGZpeFxuICAucG9zdC1jb250ZW50LFxuICAucGFnZS1jb250ZW50IHtcblxuICAgID4gKjpmaXJzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tdG9wOiAwO1xuXG4gICAgICA+ICo6Zmlyc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGEge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuXG4gICAgLy8gVE9ETzogRml4ZXMgd3JvbmcgdW5kZXJsaW5lIGNvbG9yIGZvciBpbmxpbmUgYGNvZGVgIHdpdGhpbiBgYWAgbGlua3MuXG4gICAgLy8gSG93ZXZlciBubyBicm93c2VyIHN1cHBvcnRzIHRoaXMgZmVhdHVyZSBhdCB0aGUgdGltZSBvZiB3cml0aW5nLlxuICAgIC8vIE1vcmUgaW5mbzogaHR0cDovL2Nhbml1c2UuY29tLyNmZWF0PWNzcy1oYXNcbiAgICAvLyBEYXRlOiBEZWMgMTAsIDIwMTYsIDU6NTkgUE1cbiAgICAmOmhhcyg+Y29kZSkge1xuICAgICAgdGV4dC1kZWNvcmF0aW9uLWNvbG9yOiBAY29kZS1jb2xvcjtcbiAgICB9XG4gIH1cblxuICBwIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjZyZW07XG4gICAgbGluZS1oZWlnaHQ6IChAbGluZS1oZWlnaHQgKiAxLjIpO1xuICB9XG5cbiAgaGVhZGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG1pbi1oZWlnaHQ6IGNhbGMoMTAwdmggLSAoKEBuYXYtcGFkZGluZyAqIDQpKSAtIDVleCk7XG4gICAgLy8gQWRkaXRpb25hbCBwYWRkaW5nIGZvciBjb250ZW50IGluc2lkZSBgaGVhZGVyYCBhcmUgaGlnaGVyIHRoYW4gYGhlYWRlcmBcbiAgICAvLyBjb250YWluZXJcbiAgICBwYWRkaW5nLXRvcDogMTB2bWluO1xuICAgIHBhZGRpbmctYm90dG9tOiAxMHZtaW47XG4gICAgbWFyZ2luLWJvdHRvbTogMTZ2bWluO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZDogZmFkZShAdGV4dC1jb2xvciwgMiUpO1xuICAgIC5wYWRkaW5nLW9mZnNldChAc3BhY2UtbGcpO1xuICAgIC5tYXJnaW4tb2Zmc2V0KC1Ac3BhY2UtbGcpO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LW1kKSB7XG4gICAgICBtaW4taGVpZ2h0OiBjYWxjKDUwdmggLSBAbmF2LXBhZGRpbmcgKiAyIC0gM2V4KTtcbiAgICAgIHBhZGRpbmctdG9wOiAxNnZtaW47XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMTZ2bWluO1xuICAgICAgLnBhZGRpbmctb2Zmc2V0KEBzcGFjZS1tZCk7XG4gICAgICAubWFyZ2luLW9mZnNldCgtQHNwYWNlLW1kKTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcbiAgICAgIC5wYWRkaW5nLW9mZnNldChAc3BhY2Utc20pO1xuICAgICAgLm1hcmdpbi1vZmZzZXQoLUBzcGFjZS1zbSk7XG4gICAgfVxuXG4gICAgaDEge1xuICAgICAgLmhlYWRpbmcoKTtcbiAgICAgIC8vIHZpc3VhbCBhbGlnbiBsZWZ0XG4gICAgICBtYXJnaW4tbGVmdDogLTJweDtcbiAgICAgIGh5cGhlbnM6IG5vbmU7XG4gICAgICBsaW5lLWhlaWdodDogMS4xO1xuXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcbiAgICAgICAgLy8gT3ZlcnJpZGUgdmlld3BvcnQgdW5pdHMgZGVmaW5lZCBpbiBwb3N0Lmh0bWxcbiAgICAgICAgZm9udC1zaXplOiAyODAlO1xuICAgICAgfVxuXG4gICAgICBzdmcge1xuICAgICAgfVxuXG4gICAgICBzdmcsXG4gICAgICBpbWcge1xuICAgICAgICAvLyBOb3JtYWxpemUgaW1hZ2Ugc2l6ZVxuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuXG4gICAgICAgIC8vIE92ZXJyaWRlIG1hcmdpbiBmcm9tIGFydGljbGUgaW1nLCBhdm9pZCBoZWFkZXIgc3RyZXRjaGVkIGJ5IGdsb2JhbFxuICAgICAgICAvLyBpbWcgc3R5bGVzXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IC4zZW07XG5cbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LXNtKSB7XG4gICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgICAgICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFJlc2V0IHN1YmhlYWRpbmcgaW4gcGFnZSB0aXRsZSAodXNlZCBieSBBTVNGIGF0bSlcbiAgICBoMiB7XG4gICAgICBtYXJnaW46IDEuMnZtaW4gMCAwO1xuICAgIH1cblxuICAgIC8vIEhpZGUgYWN0dWFsIHRleHQgaWYgcG9zdCB0aXRsZSBpcyBpbWFnZSBvciBTVkcsIHRoZSBhY3R1YWwgdGV4dCBoZWxwc1xuICAgIC8vIFNhZmFyaSBnZXQgdGhlIHJlYWwgcG9zdCB0aXRsZSBpbiBSZWFkZXIgbW9kZS5cbiAgICAuaW1hZ2UtdGl0bGUge1xuICAgICAgdGV4dC1pbmRlbnQ6IC05OTk5OTlweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAwO1xuICAgIH1cblxuICAgIHNtYWxsIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgbWFyZ2luLXRvcDogMnZtaW47XG4gICAgfVxuICB9XG5cbiAgaDIsXG4gIGgzLFxuICBoNCxcbiAgaDUsXG4gIGg2IHtcbiAgICBtYXJnaW46IDEwdm1pbiAwIDFyZW07XG4gICAgLnN1Yi1oZWFkaW5nKCk7XG4gIH1cblxuICB1bCxcbiAgb2wge1xuICAgIG1hcmdpbi1ib3R0b206IDEuOHJlbTtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIGNvdW50ZXItcmVzZXQ6IGxpc3Q7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxZW07XG4gICAgfVxuXG4gICAgbGkge1xuICAgICAgbGluZS1oZWlnaHQ6IChAbGluZS1oZWlnaHQgKiAxLjIpO1xuXG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB3aWR0aDogNGVtO1xuICAgICAgICBtYXJnaW4tdG9wOiAxcHg7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAtNGVtO1xuICAgICAgICBmb250LXNpemU6IDgwJTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IChAbGluZS1oZWlnaHQgKiAxLjIgLyAuOCk7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgICBvcGFjaXR5OiAuNjtcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICB9XG5cbiAgICAgID4gdWwsXG4gICAgICA+IG9sIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDFlbTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB1bCBsaTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwi4oCiXCI7XG4gICAgcGFkZGluZy1yaWdodDogLjZlbTtcbiAgfVxuXG4gIG9sIGxpOmJlZm9yZSB7XG4gICAgY291bnRlci1pbmNyZW1lbnQ6IGxpc3Q7XG4gICAgY29udGVudDogY291bnRlcihsaXN0KSBcIi5cIjtcbiAgICBwYWRkaW5nLXJpZ2h0OiAuM2VtO1xuICB9XG5cbiAgZGwge1xuICAgIGxpbmUtaGVpZ2h0OiAoQGxpbmUtaGVpZ2h0ICogMS4yKTtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDFlbTtcbiAgICB9XG5cbiAgICBkdCB7XG5cbiAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB3aWR0aDogMWVtO1xuICAgICAgICBtYXJnaW4tbGVmdDogLTFlbTtcbiAgICAgICAgY29udGVudDogXCItXCI7XG4gICAgICAgIG9wYWNpdHk6IC42O1xuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBkZCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxLjhyZW07XG4gICAgfVxuICB9XG5cbiAgaW1nLFxuICB2aWRlbyxcbiAgaWZyYW1lLFxuICAuYnJvd3NlciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSArIChAc3BhY2UtbWQgKiAyKSk7XG4gICAgbWluLWhlaWdodDogY2FsYygxMDB2aCAtICgoQG5hdi1wYWRkaW5nICogNCkpIC0gNWV4KTtcbiAgICBcbiAgICBtYXJnaW46IDAgLUBzcGFjZS1tZCAxLjhyZW07XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtbWQpIHtcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgKyAoQHNwYWNlLW1kICogMikpO1xuICAgICAgbWluLWhlaWdodDogY2FsYyg1MHZoIC0gQG5hdi1wYWRkaW5nICogMiAtIDNleCk7XG4gICAgICBcbiAgICAgIC5tYXJnaW4tb2Zmc2V0KC1Ac3BhY2UtbWQpO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgICAgd2lkdGg6IGNhbGMoMTAwJSArIChAc3BhY2Utc20gKiAyKSk7XG4gICAgICBcbiAgICAgIC5tYXJnaW4tb2Zmc2V0KC1Ac3BhY2Utc20pO1xuICAgIH1cblxuICAgIC8vIGF2b2lkIGltYWdlcyB3aXRoIGAubm8tZW5sYXJnZWAgc3RyZXRjaGVkIGJ5IGdsb2JhbCBpbWcgc3R5bGVzXG4gICAgJi5zaXplLWZpdCxcbiAgICAmLm5vLWVubGFyZ2Uge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICB9XG5cbiAgICAvLyBGdWxsIHdpZHRoIGltYWdlXG4gICAgJi5zaXplLWxhcmdlIHtcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgKyAoQHNwYWNlLWxnICogMikpO1xuICAgICAgLm1hcmdpbi1vZmZzZXQoLUBzcGFjZS1sZyk7XG5cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1tZCkge1xuICAgICAgICB3aWR0aDogY2FsYygxMDAlICsgKEBzcGFjZS1tZCAqIDIpKTtcbiAgICAgICAgLm1hcmdpbi1vZmZzZXQoLUBzcGFjZS1tZCk7XG4gICAgICB9XG5cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgICAgICB3aWR0aDogY2FsYygxMDAlICsgKEBzcGFjZS1zbSAqIDIpKTtcbiAgICAgICAgLm1hcmdpbi1vZmZzZXQoLUBzcGFjZS1zbSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi5zaXplLXNtYWxsIHtcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgKyAoQHNwYWNlLXhzICogMikpO1xuICAgICAgLm1hcmdpbi1vZmZzZXQoLUBzcGFjZS14cyk7XG5cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1tZCkge1xuICAgICAgICB3aWR0aDogY2FsYygxMDAlICsgKEBzcGFjZS1tZCAqIDIpKTtcbiAgICAgICAgLm1hcmdpbi1vZmZzZXQoLUBzcGFjZS1tZCk7XG4gICAgICB9XG5cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgICAgICB3aWR0aDogY2FsYygxMDAlICsgKEBzcGFjZS1zbSAqIDIpKTtcbiAgICAgICAgLm1hcmdpbi1vZmZzZXQoLUBzcGFjZS1zbSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi5zaXplLWxlZnQge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXgtd2lkdGg6IDM2dnc7XG4gICAgICBtYXJnaW4tdG9wOiAoQHNwYWNlLXhzIC8gMik7XG4gICAgICBtYXJnaW4tcmlnaHQ6IEBzcGFjZS14cztcbiAgICAgIG1hcmdpbi1ib3R0b206IChAc3BhY2UteHMgLyAyKTtcblxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LW1kKSB7XG4gICAgICAgIGZsb2F0OiBub25lO1xuICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgICAgIG1hcmdpbi10b3A6IGF1dG87XG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogYXV0bztcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLnNpemUtcmlnaHQge1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgbWF4LXdpZHRoOiAzNnZ3O1xuICAgICAgbWFyZ2luLXRvcDogKEBzcGFjZS14cyAvIDIpO1xuICAgICAgbWFyZ2luLWxlZnQ6IEBzcGFjZS14cztcbiAgICAgIG1hcmdpbi1ib3R0b206IChAc3BhY2UteHMgLyAyKTtcblxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LW1kKSB7XG4gICAgICAgIGZsb2F0OiBub25lO1xuICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgICAgIG1hcmdpbi10b3A6IGF1dG87XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiBhdXRvO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGJsb2NrcXVvdGUge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW4tYm90dG9tOiAyLjhyZW07XG4gICAgbWFyZ2luLWxlZnQ6IC1Ac3BhY2UteHM7XG4gICAgZm9udC1zaXplOiA5MCU7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIH1cblxuICAgID4gcCB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IEBzcGFjZS14cztcbiAgICAgIGJvcmRlci1sZWZ0OiBAYm9yZGVyLWRlZmF1bHQgc29saWQ7XG4gICAgICAvLyBUT0RPOiBOZWVkIGJldHRlciBzb2x1dGlvblxuICAgICAgLy8gV2Ugd2lsbCByZXNldCB0aGUgY29tbW9uIG1hcmdpbi1ib3RvdG0gdG8gZ2V0IGdhcGxlc3MgYm9yZGVycyBmb3JcbiAgICAgIC8vIGJsb2NrcXVvdGVzLiBUaGlzIGNvdWxkIGhlbHAgZml4XG4gICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vYW1zZi9hbXNmLWN1cnRhbmEvaXNzdWVzLzRcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxLjZyZW07XG4gICAgICAvLyBOb3cgcmVzZXQgZGVmYXVsdCBtYXJnaW4gYnV0dG9uIGZyb20gZ2xvYmFsIGRlZmluZVxuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgIG9wYWNpdHk6IC42O1xuXG4gICAgICAvLyBSZW1vdmUgZXh0cmEgcGFkZGluZyBmb3IgdGhlIGxhc3QgZWxlbWVudCwgcmUtYXBwbHkgbWFyZ2luXG4gICAgICAmOmxhc3Qtb2YtdHlwZSB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxLjZyZW07XG4gICAgICB9XG5cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgICAgICAucGFkZGluZy1vZmZzZXQoY2FsYyhAc3BhY2Utc20gLSBAYm9yZGVyLWRlZmF1bHQpLCBAc3BhY2Utc20pO1xuICAgICAgICAubWFyZ2luLW9mZnNldCgtQHNwYWNlLXNtKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb290ZXIge1xuICAgICAgLmNmO1xuICAgIH1cblxuICAgIGNpdGUge1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuXG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIC8vIGh0dHA6Ly93d3cuZmlsZWZvcm1hdC5pbmZvL2luZm8vdW5pY29kZS9jaGFyLzI1MDAvaW5kZXguaHRtXG4gICAgICAgIGNvbnRlbnQ6IFwiXFwyNTAwXFwyNTAwXFwwMGEwXCJcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBociB7XG4gICAgLnNwbGl0ZXIoKTtcbiAgfVxuXG4gIHN1cCB7XG4gICAgZm9udC1zaXplOiA3NSU7XG4gIH1cblxuICBwcmUsXG4gIGNvZGUge1xuICAgIGZvbnQtZmFtaWx5OiBAZm9udHN0YWNrLW1vbm9zcGFjZTtcbiAgICBjb2xvcjogQGNvZGUtY29sb3I7XG4gIH1cblxuICBwcmUge1xuICAgIGJhY2tncm91bmQ6IGZhZGUoIzA4ZiwgNCUpO1xuICB9XG5cbiAgY29kZSB7XG4gICAgZm9udC1zaXplOiA5MiU7XG4gICAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcbiAgfVxuXG4gIC8vIFRPRE86IE5lZWQgcmVmaW5lXG4gIC8vIERhdGU6IEphbiAyNCwgMjAxOCwgNTozNyBQTVxuICAvL1xuICAvLyBKZWt5bGwgKGxpcXVpZCkgeyUgaGlnaGxpZ2h0ICV9IG1ldGhvZCBhbmQgR0ZNIG1ldGhvZCBnZW5lcmF0ZXMgZGlmZmVyZW50XG4gIC8vIG1hcmt1cCBmb3IgY29kZSBibG9ja3MsIHRoaXMgcmVzdWx0IGluIGRpZmZlcmVudCBDU1Mgc3R5bGluZyBmb3IgZGlmZmVyZW50XG4gIC8vIGhpZ2hsaWdodCBtZXRob2RzIHlvdSB1c2UuXG4gIC8vXG4gIC8vICMjIEdGTSBtZXRob2RcbiAgLy9cbiAgLy8gYGBgXG4gIC8vIGRpdi5sYW5ndWFnZS1qcy5oaWdobGlnaHRlci1yb3VnZVxuICAvLyAgIGRpdi5oaWdobGlnaHRcbiAgLy8gICAgIHByZS5oaWdobGlnaHRcbiAgLy8gICAgICAgY29kZVxuICAvLyBgYGBcbiAgLy9cbiAgLy8gIyMgR0ZNIG1ldGhvZCB3aXRoIGBsaW5lX251bWJlcnNgIGVuYWJsZWQgdW5kZXIgYHN5bnRheF9oaWdobGlnaHRlcl9vcHRzYFxuICAvL1xuICAvLyBgYGBcbiAgLy8gZGl2Lmxhbmd1YWdlLWpzLmhpZ2hsaWdodGVyLXJvdWdlXG4gIC8vICAgZGl2LmhpZ2hsaWdodFxuICAvLyAgICAgdGFibGVcbiAgLy8gICAgICAgdGJvZHlcbiAgLy8gICAgICAgICB0clxuICAvLyAgICAgICAgICAgdGQuZ3V0dGVyLmdsXG4gIC8vICAgICAgICAgICAgIHByZVxuICAvLyAgICAgICAgICAgICAgIGNvZGVcbiAgLy8gICAgICAgICAgIHRkLmNvZGVcbiAgLy8gICAgICAgICAgICAgcHJlXG4gIC8vICAgICAgICAgICAgICAgY29kZVxuICAvLyBgYGBcbiAgLy9cbiAgLy8gIyMgSmVreWxsIHslIGhpZ2hsaWdodCAlfSBtZXRob2Q6XG4gIC8vXG4gIC8vIGBgYFxuICAvLyBmaWd1cmUuaGlnaGxpZ2h0XG4gIC8vICAgcHJlXG4gIC8vICAgICBjb2RlLmxhbmd1YWdlLWh0bWxcbiAgLy8gICAgICAgdGFibGVcbiAgLy8gICAgICAgICB0Ym9keVxuICAvLyAgICAgICAgICAgdHJcbiAgLy8gICAgICAgICAgICAgdGQuZ3V0dGVyLmdsXG4gIC8vICAgICAgICAgICAgICAgcHJlXG4gIC8vICAgICAgICAgICAgICAgICBjb2RlXG4gIC8vICAgICAgICAgICAgIHRkLmNvZGVcbiAgLy8gICAgICAgICAgICAgICBwcmVcbiAgLy8gICAgICAgICAgICAgICAgIGNvZGVcbiAgLy8gYGBgXG4gIHByZSxcbiAgLmhpZ2hsaWdodCA+IHByZSxcbiAgLmhpZ2hsaWdodGVyLXJvdWdlIHByZS5oaWdobGlnaHQge1xuICAgIHBhZGRpbmc6IEBzcGFjZS14cztcbiAgICAubWFyZ2luLW9mZnNldCgtQHNwYWNlLXhzKTtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjhyZW07XG4gICAgb3ZlcmZsb3cteDogYXV0bztcbiAgICBmb250LXNpemU6IDgwJTtcbiAgICBsaW5lLWhlaWdodDogKEBsaW5lLWhlaWdodCAqIDEuMik7XG4gICAgLy8gQm91bmNpbmcgc2Nyb2xsIGZpeCBmb3IgaU9TXG4gICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LW1kKSB7XG4gICAgICAucGFkZGluZy1vZmZzZXQoQHNwYWNlLW1kKTtcbiAgICAgIC5tYXJnaW4tb2Zmc2V0KC1Ac3BhY2UtbWQpO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgICAgLnBhZGRpbmctb2Zmc2V0KEBzcGFjZS1zbSk7XG4gICAgICAubWFyZ2luLW9mZnNldCgtQHNwYWNlLXNtKTtcbiAgICB9XG5cbiAgICAvLyBSZXNldCBvdmVyZmxvdyBmb3IgY29kZSBpbiBjb2RlIGJsb2Nrc1xuICAgIGNvZGUge1xuICAgICAgb3ZlcmZsb3ctd3JhcDogbm9ybWFsO1xuICAgIH1cbiAgfVxuXG4gIC8vIE5ld3NsZXR0ZXIgc3Vic2NyaXB0aW9uIGZvcm0gaW4gcGFnZSBcInN0b3JlXCJcbiAgZm9ybSB7XG5cbiAgICBpbnB1dCB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgcGFkZGluZzogMXZtaW4gMDtcbiAgICAgIG1hcmdpbjogMCAwIDEuOHJlbTtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBmYWRlKEB0ZXh0LWNvbG9yLCAyMCUpO1xuICAgICAgLy8gUmVtb3ZlIGJvcmRlci1yYWRpdXMgZm9yIGlPUyBkZXZpY2VzXG4gICAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgIHRyYW5zaXRpb246IHBhZGRpbmcgLjJzIGVhc2U7XG5cbiAgICAgICY6Zm9jdXMge1xuICAgICAgICBwYWRkaW5nOiAxdm1pbjtcbiAgICAgICAgYmFja2dyb3VuZDogZmFkZShAdGV4dC1jb2xvciwgMiUpO1xuICAgICAgICBib3JkZXItY29sb3I6IEB0ZXh0LWNvbG9yO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIFJlc3QgZm9ybSB2YWxpZGF0aW9uIHN0eWxlcywgYm9ycm93ZWQgZnJvbSBCb290c3RyYXBcbiAgaW5wdXQsXG4gIHRleHRhcmVhLFxuICBzZWxlY3Qge1xuXG4gICAgJjpmb2N1czpyZXF1aXJlZDppbnZhbGlkIHtcblxuICAgICAgJjpmb2N1cyB7XG4gICAgICAgIGJhY2tncm91bmQ6IGZhZGUoQGxpbmstY29sb3IsIDUlKTtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiBAbGluay1jb2xvcjtcbiAgICAgICAgLy8gT3ZlcnJpZGUgRmlyZWZveCBkZWZhdWx0IHN0eWxlc1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHRhYmxlIHtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIGJvcmRlci1zcGFjaW5nOiAwO1xuICAgIGZvbnQtc2l6ZTogOTAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIC5tYXJnaW4tb2Zmc2V0KC1Ac3BhY2UteHMpO1xuICAgIG1hcmdpbi1ib3R0b206IDEuOHJlbTtcblxuICAgIC8vIFRPRE86IHJlc3BvbnNpdmUgdGFibGUgc3VwcG9ydFxuICAgIC8vIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAvLyBvdmVyZmxvdy14OiBhdXRvO1xuICAgIC8vIHdoaXRlLXNwYWNlOiBub3dyYXA7XG5cbiAgICAvLyBUT0RPOiB0YWJsZSBzaGFkb3cgc3VwcG9ydFxuICAgIC8vIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudChlbGxpcHNlIGF0IGxlZnQsIHJnYmEoMCwgMCwgMCwgLjAyKSAwJSwgcmdiYSgwLCAwLCAwLCAwKSA3NSUpLFxuICAgIC8vICAgICAgICAgICAgICAgICAgIHJhZGlhbC1ncmFkaWVudChlbGxpcHNlIGF0IHJpZ2h0LCByZ2JhKDAsIDAsIDAsIC4wMikgMCUsIHJnYmEoMCwgMCwgMCwgMCkgNzUlKTtcbiAgICAvLyBiYWNrZ3JvdW5kLXNpemU6IDMwcHggMTAwJSwgMzBweCAxMDAlO1xuICAgIC8vIGJhY2tncm91bmQtcG9zaXRpb246IDAgY2VudGVyLCAxMDAlIGNlbnRlcjtcbiAgICAvLyBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IHNjcm9sbCwgc2Nyb2xsO1xuICAgIC8vIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG5cbiAgICAvLyBUT0RPOiByZXNwb25zaXZlIHRhYmxlIHN1cHBvcnRcbiAgICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtbWQpIHtcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgKyAoQHNwYWNlLW1kICogMikpO1xuICAgICAgLm1hcmdpbi1vZmZzZXQoLUBzcGFjZS1tZCk7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LXNtKSB7XG4gICAgICB3aWR0aDogY2FsYygxMDAlICsgKEBzcGFjZS1zbSAqIDIpKTtcbiAgICAgIC5tYXJnaW4tb2Zmc2V0KC1Ac3BhY2Utc20pO1xuXG4gICAgICAvLyBUT0RPOiB0YWJsZSBzaGFkb3cgc3VwcG9ydFxuICAgICAgLy8gRGFya2VyIHNoYWRvdyBmb3IgbW9iaWxlIGRldmljZXNcbiAgICAgIC8vIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudChlbGxpcHNlIGF0IGxlZnQsIHJnYmEoMCwgMCwgMCwgLjEpIDAlLCByZ2JhKDAsIDAsIDAsIDApIDc1JSksXG4gICAgICAvLyAgICAgICAgICAgICAgICAgICByYWRpYWwtZ3JhZGllbnQoZWxsaXBzZSBhdCByaWdodCwgcmdiYSgwLCAwLCAwLCAuMSkgMCUsIHJnYmEoMCwgMCwgMCwgMCkgNzUlKTtcbiAgICB9XG5cbiAgICB0aCxcbiAgICB0ZCB7XG4gICAgICBwYWRkaW5nOiAuNmVtIEBzcGFjZS14cztcblxuICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogQHNwYWNlLXhzO1xuICAgICAgICAvLyBUT0RPOiB0YWJsZSBzaGFkb3cgc3VwcG9ydFxuICAgICAgICAvLyBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICNmZmYgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApIDEwMCUpO1xuICAgICAgICAvLyBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgICAgICAvLyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDA7XG4gICAgICAgIC8vIGJhY2tncm91bmQtc2l6ZTogNTBweCAxMDAlO1xuICAgICAgfVxuXG4gICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiBAc3BhY2UteHM7XG4gICAgICAgIC8vIFRPRE86IHRhYmxlIHNoYWRvdyBzdXBwb3J0XG4gICAgICAgIC8vIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBsZWZ0LCAjZmZmIDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSAxMDAlKTtcbiAgICAgICAgLy8gYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgLy8gYmFja2dyb3VuZC1wb3NpdGlvbjogMTAwJSAwO1xuICAgICAgICAvLyBiYWNrZ3JvdW5kLXNpemU6IDUwcHggMTAwJTtcbiAgICAgIH1cblxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LW1kKSB7XG5cbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiBAc3BhY2UtbWQ7XG4gICAgICAgIH1cblxuICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IEBzcGFjZS1tZDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcblxuICAgICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IEBzcGFjZS1zbTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgcGFkZGluZy1yaWdodDogQHNwYWNlLXNtO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGgge1xuICAgICAgYm9yZGVyLWJvdHRvbTogQGJvcmRlci1kZWZhdWx0IHNvbGlkIGZhZGUoQHRleHQtY29sb3IsIDYlKTtcbiAgICAgIC8vIE92ZXJyaWRlIGRlZmF1bHQgdXNlciBhZ2VudCBzdHlsZXNoZWV0XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIH1cblxuICAgIHRkIHtcbiAgICAgIGJvcmRlci10b3A6IEBib3JkZXItc20gc29saWQgZmFkZShAdGV4dC1jb2xvciwgNCUpO1xuICAgIH1cbiAgfVxufVxuXG4vLyBQb3N0cyB3aXRoIEFzaWFuIGNoYXJhY3RlcnNcbjpsYW5nKHpoKSxcbjpsYW5nKGphKSB7XG4gIHRleHQtYWxpZ246IGp1c3RpZnk7XG5cbiAgaGVhZGVyIHtcblxuICAgICYsXG4gICAgJiAqIHtcbiAgICAgIHRleHQtYWxpZ246IHN0YXJ0O1xuICAgIH1cbiAgfVxuXG4gIHJ1Ynkge1xuXG4gICAgcnQge1xuICAgICAgdGV4dC1hbGlnbjogc3RhcnQ7XG4gICAgfVxuICB9XG59XG5cbi8vIFR3ZWV0IGJ1dHRvbiBtYXJnaW4gZml4XG4ucG9zdC1tb2RpZmllZC1kYXRlIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIG9wYWNpdHk6IC41O1xufVxuXG4vLyBMYXJnZXR5cGUgc3R5bGVzIChyZXBsYWNlcyBidXR0b24gc3R5bGVzKVxuLmxhcmdldHlwZSB7XG4gIC5oZWFkaW5nKCk7XG4gIGZvbnQtc2l6ZTogMjAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMS44cmVtICFpbXBvcnRhbnQ7XG59XG5cbi8vIEJyb3NlciBmcmFtZSBmb3IgaW1hZ2VzIGluIGNhdGVnb3J5IFwid29ya1wiXG4uYnJvd3NlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy10b3A6IDI0cHg7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjEpO1xuICBib3JkZXItcmFkaXVzOiA1cHggNXB4IDAgMDtcbiAgYm94LXNoYWRvdzogMCAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgLjA1KTtcblxuICAvLyBSZXNldCBicm93c2VyIGJvcmRlci1yYWRpdXMgZm9yIHNtYWxsIHNjcmVlbnNcbiAgQG1lZGlhIChtYXgtd2lkdGg6IEBicmVha3BvaW50LW1kKSwgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICB9XG5cbiAgJjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDhweDtcbiAgICBsZWZ0OiAxMHB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiA4cHg7XG4gICAgaGVpZ2h0OiA4cHg7XG4gICAgYmFja2dyb3VuZDogbGlnaHRlbigjZjI0ZTU5LCAzMCUpO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGJveC1zaGFkb3c6XG4gICAgICAgIDE2cHggMCAwIDAgICBmYWRlKGxpZ2h0ZW4oI2ZhYzUzNiwgMzAlKSwgOTYlKVxuICAgICAgLCAzMnB4IDAgMCAwICAgZmFkZShsaWdodGVuKCMyNmU5M2QsIDMwJSksIDk2JSlcbiAgICAgICwgICAgMCAwIDAgMXB4IGZhZGUoZGFya2VuKCNmMjRlNTksIDMwJSksIDMwJSlcbiAgICAgICwgMTZweCAwIDAgMXB4IGZhZGUoZGFya2VuKCNmYWM1MzYsIDMwJSksIDMwJSlcbiAgICAgICwgMzJweCAwIDAgMXB4IGZhZGUoZGFya2VuKCMyNmU5M2QsIDMwJSksIDMwJSlcbiAgICA7XG4gIH1cblxuICBpbWcge1xuICAgIC8vIGF2b2lkIGltYWdlcyBpbnNpZGUgLmJyb3dzZXIgc3RyZXRjaGVkIGJ5IGdsb2JhbCBpbWcgc3R5bGVzXG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBib3gtc2hhZG93OiAwIC0xcHggMCAwIHJnYmEoMCwgMCwgMCwgLjA1KTtcbiAgfVxufVxuXG4vLyBFeHRyYSBvZmZzZXQgZm9yIE9TIFggc2NyZWVuc2hvdHNcbi5zY3JlZW5zaG90LW1hYyB7XG4gIEBvc3gtc2hhZG93LXNpemU6IDU2cHg7XG4gIC5tYXJnaW4tb2Zmc2V0KC1Ab3N4LXNoYWRvdy1zaXplKTtcblxuICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtbWQpLCAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgIC5tYXJnaW4tb2Zmc2V0KDApO1xuICB9XG59XG5cbi8vIFNwZWNpYWwgcGFyYWdyYXBoIHdpdGggYm9yZGVyIGxpbmVcbi5ub3RlLFxuLnN0b3JlLFxuLmRvd25sb2FkIHtcbiAgcGFkZGluZy1sZWZ0OiBAc3BhY2UteHM7XG4gIG1hcmdpbi1sZWZ0OiAtQHNwYWNlLXhzO1xuICBib3JkZXItbGVmdDogQGJvcmRlci1kZWZhdWx0IHNvbGlkIEBsaW5rLWNvbG9yO1xuXG4gIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgIC5wYWRkaW5nLW9mZnNldChjYWxjKEBzcGFjZS1zbSAtIEBib3JkZXItZGVmYXVsdCksIEBzcGFjZS1zbSk7XG4gICAgLm1hcmdpbi1vZmZzZXQoLUBzcGFjZS1zbSk7XG4gIH1cbn1cblxuLy8gUmVmZXJlbmNlIG5vdGVzIGFuZCBsaW5rcyBpbiBwb3N0XG4uZm9vdG5vdGVzIHtcbiAgLnNwbGl0ZXIoKTtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbjp0YXJnZXQge1xuXG4gIC8vIFJlZGNhcnBldC1zdHlsZVxuICBbcmV2PWZvb3Rub3RlXSxcbiAgW3JlbD1mb290bm90ZV0sXG5cbiAgLy8ga3JhbWRvd24tc3R5bGVcbiAgLnJldmVyc2Vmb290bm90ZSxcbiAgLmZvb3Rub3RlIHtcbiAgICBjb2xvcjogQGxpbmstY29sb3I7XG4gIH1cbn1cblxuLy8gUG9zdCBsaXN0IGluIFwid29ya1wiIGFuZCBcIm5vdGVcIlxuLmxpc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIDAgLjRyZW07XG5cbiAgaDEge1xuICAgIC5oZWFkaW5nKCk7XG4gICAgZm9udC1zaXplOiAyMDAlO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjE7XG4gICAgLy8gT3ZlcnJpZGUgaGVhZGluZyBkZWZpbmVzIGluIC5jb250ZW50XG4gICAgb3BhY2l0eTogMTtcbiAgICBtYXJnaW46IDA7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogQGJyZWFrcG9pbnQtc20pIHtcbiAgICAgIC8vIEhpZGUgZXh0ZXJuYWwgbGluayBmb3IgcG9zdCBsaXN0XG4gICAgICBmb250LXNpemU6IDE4MCU7XG4gICAgfVxuICB9XG5cbiAgLmV4dGVybmFsIHtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiBAYnJlYWtwb2ludC1zbSkge1xuICAgICAgLy8gSGlkZSBleHRlcm5hbCBsaW5rIGZvciBwb3N0IGxpc3RcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG59XG5cbi8vIEEgZG90IHN5bWJvbCBmb3IgZXh0ZXJuYWwgbGlua3Ncbi5leHRlcm5hbCB7XG5cbiAgLmRvdCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAuN3JlbTtcbiAgICBoZWlnaHQ6IC43cmVtO1xuICAgIG1hcmdpbjogMCAuMWVtO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgYmFja2dyb3VuZDogQHRleHQtY29sb3I7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuNHMgZWFzZTtcblxuICAgIC8vIEV4dHJhIG1hcmdpbiBmb3IgZXh0ZXJuYWwgc3ltYm9sIGluIHNpbmd1bGFyXG4gICAgJi0tcG9zdCB7XG4gICAgICBtYXJnaW4tbGVmdDogMXJlbTtcbiAgICB9XG4gIH1cblxuICAmOmhvdmVyLFxuICAmOmZvY3VzIHtcblxuICAgIC5kb3Qge1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjQpO1xuICAgIH1cbiAgfVxufVxuXG4uZm9vdGVyIHtcbiAgcGFkZGluZzogMCAwIDE2dm1pbjtcbiAgZm9udC1zaXplOiA3NSU7XG4gIHRleHQtdHJhbnNmb3JtOiBsb3dlcmNhc2U7XG5cbiAgdWwge1xuXG4gICAgbGkge1xuICAgICAgZGlzcGxheTogaW5saW5lO1xuXG4gICAgICAmOmFmdGVyIHtcbiAgICAgICAgcGFkZGluZzogMCBAbmF2LWl0ZW0tc3BhY2U7XG4gICAgICAgIGNvbnRlbnQ6IFwiIC8gXCI7XG4gICAgICAgIG9wYWNpdHk6IC4zO1xuICAgICAgfVxuXG4gICAgICAmOmxhc3QtY2hpbGQge1xuXG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgIGNvbnRlbnQ6IG5vbmU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi8vXG4vLyBQbHVnaW5zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBHaXRIdWIgR2lzdFxuLmdpc3Qge1xuICBmb250LXNpemU6IDgwJSAhaW1wb3J0YW50O1xuXG4gIGNvZGUsIHByZSB7XG4gICAgcGFkZGluZzogMDtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgfVxuXG4gIC5naXN0LWRhdGEge1xuICAgIGZvbnQtZmFtaWx5OiBAZm9udHN0YWNrLW1vbm9zcGFjZSAhaW1wb3J0YW50O1xuXG4gICAgLmZpbGUtZGF0YSB7XG4gICAgICBmb250LXNpemU6IDEwMCUgIWltcG9ydGFudDtcblxuICAgICAgPiB0YWJsZSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBNb25vc3BhY2UgZm9udHMgbG9vayBiaWdnZXIgdGhhbiBub3JtYWwgZm9udHMsIHNvIG1ha2UgaXQgc21hbGxlci5cbiAgLmhpZ2hsaWdodCB7XG4gICAgZm9udC1zaXplOiA5MCUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC5tYXJrZG93bi1ib2R5IHtcbiAgICBmb250LXNpemU6IDEwMCUgIWltcG9ydGFudDtcbiAgICBwYWRkaW5nOiAxZW0gIWltcG9ydGFudDtcbiAgfVxufVxuIiwiLy9cbi8vIFByaW50XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBTdHlsZSBmaXhlcyBmb3IgcHJpdGluZ1xuXG5AbWVkaWEgcHJpbnQge1xuXG4gICosXG4gICo6YmVmb3JlLFxuICAqOmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7IC8vIEJsYWNrIHByaW50cyBmYXN0ZXI6IGg1YnAuY29tL3NcbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuXG4gIGJvZHkge1xuICAgIHBhZGRpbmc6IDEwbW0gIWltcG9ydGFudDtcbiAgICBtYXJnaW46IDAgIWltcG9ydGFudDtcbiAgfVxuXG4gIGEsXG4gIGE6dmlzaXRlZCB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG5cbiAgLmNvbnRlbnQgaGVhZGVyIHtcbiAgICBtaW4taGVpZ2h0OiAwO1xuICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICB9XG5cbiAgLmNvbnRlbnQgLnBvc3QtY29udGVudCxcbiAgLmNvbnRlbnQgLnBhZ2UtY29udGVudCB7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG5cbiAgICBhW2hyZWZdOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiO1xuICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICB9XG5cbiAgICAvLyBEb24ndCBzaG93IGxpbmtzIHRoYXQgYXJlIGZyYWdtZW50IGlkZW50aWZpZXJzLFxuICAgIC8vIG9yIHVzZSB0aGUgYGphdmFzY3JpcHQ6YCBwc2V1ZG8gcHJvdG9jb2xcbiAgICBhW2hyZWZePVwiI1wiXTphZnRlcixcbiAgICBhW2hyZWZePVwiamF2YXNjcmlwdDpcIl06YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICB9XG5cbiAgICBhYmJyW3RpdGxlXTphZnRlciB7XG4gICAgICBjb250ZW50OiBcIiAoXCIgYXR0cih0aXRsZSkgXCIpXCI7XG4gICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIH1cbiAgfVxuXG4gIHByZSxcbiAgYmxvY2txdW90ZSB7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG5cbiAgdGhlYWQge1xuICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDtcbiAgfVxuXG4gIHRyLFxuICBpbWcge1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgfVxuXG4gIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cblxuICBwLFxuICBoMixcbiAgaDMsXG4gIGg0LFxuICBoNSxcbiAgaDYge1xuICAgIG9ycGhhbnM6IDM7XG4gICAgd2lkb3dzOiAzO1xuICB9XG5cbiAgaDIsXG4gIGgzIHtcbiAgICBwYWdlLWJyZWFrLWFmdGVyOiBhdm9pZDtcbiAgfVxuXG4gIC5uYXZpZ2F0aW9uLFxuICAuZm9vdGVyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4iLCIvL1xuLy8gUmFuZG9taXplZCB8IMKpIFR1bmdoc2lhbyBMaXUgfCBNSVRcbi8vXG5cbi8vIFZhcmlhYmxlcyBmb3Igc3RhbmRhbG9uZSB2ZXJzaW9uXG4vLyBAbGluay1jb2xvcjogI2EyMTJkMTtcbi8vIEBjb2RlLWNvbG9yOiAjMDBjYzgwO1xuXG4vLyBDYWxjdWxhdGUgY29kZSBiYWNrZ3JvdW5kIGNvbG9yIGJhc2VkIG9uIHRoZSBsaWdodG5lc3Mgb2YgbGluayBjb2xvclxuLmNhbGMtYmcgKEB2KSB3aGVuIChsaWdodG5lc3MoQHYpID49IDgwJSkge1xuICBAY2FsYy1iZzogbWl4KCNmZmYsIEB2LCA5MCUpO1xufVxuXG4uY2FsYy1iZyAoQHYpIHdoZW4gKGxpZ2h0bmVzcyhAdikgPCA4MCUpIHtcbiAgQGNhbGMtYmc6IG1peCgjMDAwLCBAdiwgNzAlKTtcbn1cblxuLy8gUmVzZXQgYmFja2dyb3VuZFxuLy9cbi8vIGAuaGlnaGxpZ2h0ID4gcHJlYCAgICAgICAgICAgICAgICAgLSBKZWt5bGwgbGlxdWlkIGNvZGUgYmxvY2tzXG4vLyBgLmhpZ2hsaWdodGVyLXJvdWdlIHByZS5oaWdobGlnaHRgIC0gUm91Z2UgR0ZNIGNvZGUgYmxvY2tzXG4vL1xuLy8gUmVmOiBodHRwczovL2dpdGh1Yi5jb20vamVreWxsL2pla3lsbC9wdWxsLzQwNTNcbkBoaWdobGlnaHRlci10aW50OiBAbGluay1jb2xvcjtcbi5oaWdobGlnaHQgPiBwcmUsXG4uaGlnaGxpZ2h0ZXItcm91Z2UgcHJlLmhpZ2hsaWdodCB7XG4gIC5jYWxjLWJnKEBoaWdobGlnaHRlci10aW50KTtcbiAgYmFja2dyb3VuZDogZmFkZShAY2FsYy1iZywgMiUpO1xufVxuXG4vLyBHZW5lcmFsIGhpZ2hsaWdodHNcbi8vXG4vLyBgLmhpZ2hsaWdodCBjb2RlYCAgICAgICAgIC0gUm91Z2UgR0ZNIGFuZCBKZWt5bGwgbGlxdWlkIGNvZGUgYmxvY2tzXG4vLyBgLmhpZ2hsaWdodGVyLXJvdWdlIGNvZGVgIC0gUm91Z2UgaW5saW5lIGNvZGVcbi5oaWdobGlnaHQsXG4uaGlnaGxpZ2h0ZXItcm91Z2Uge1xuXG4gIC8vIFJlc2V0IGRlZmF1bHQgYGNvZGVgXG4gIGNvZGUgeyBjb2xvcjogZGVzYXR1cmF0ZShAbGluay1jb2xvciwgOTUlKTsgfSAvLyBOb3JtYWwgY29kZVxuXG4gIC8vIFNwZWNpYWwgYmFja2dyb3VuZCBmb3Igc3ludGF4IGVycm9yc1xuICAuZXJyIHsgYmFja2dyb3VuZC1jb2xvcjogZmFkZShzYXR1cmF0ZShAaGlnaGxpZ2h0ZXItdGludCwgMTAlKSwgMTAlKSB9IC8vIEVycm9yXG5cbiAgLmMgICB7IGZvbnQtc3R5bGU6IGl0YWxpYyB9IC8vIENvbW1lbnRcbiAgLmNtICB7IGZvbnQtc3R5bGU6IGl0YWxpYyB9IC8vIENvbW1lbnQuTXVsdGlsaW5lXG4gIC5jcCAgeyBmb250LXdlaWdodDogYm9sZCB9ICAvLyBDb21tZW50LlByZXByb2NcbiAgLmMxICB7IGZvbnQtc3R5bGU6IGl0YWxpYyB9IC8vIENvbW1lbnQuU2luZ2xlXG4gIC5jcyAgeyBmb250LXdlaWdodDogYm9sZDsgZm9udC1zdHlsZTogaXRhbGljIH0gLy8gQ29tbWVudC5TcGVjaWFsXG5cbiAgLm5jICB7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLy8gTmFtZS5DbGFzc1xuICAubmUgIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvLyBOYW1lLkV4Y2VwdGlvblxuICAubmYgIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvLyBOYW1lLkZ1bmN0aW9uXG5cbiAgLm8gICB7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLy8gT3BlcmF0b3JcbiAgLm93ICB7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLy8gT3BlcmF0b3IuV29yZFxuXG4gIC5ncyAgeyBmb250LXdlaWdodDogYm9sZCB9ICAvLyBHZW5lcmljLlN0cm9uZ1xuICAuZ2UgIHsgZm9udC1zdHlsZTogaXRhbGljIH0gLy8gR2VuZXJpYy5FbXBoXG5cbiAgLmsgICB7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLy8gS2V5d29yZFxuICAua3QgIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvLyBLZXl3b3JkLlR5cGVcbiAgLmtjICB7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLy8gS2V5d29yZC5Db25zdGFudFxuICAua2QgIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvLyBLZXl3b3JkLkRlY2xhcmF0aW9uXG4gIC5rcCAgeyBmb250LXdlaWdodDogYm9sZCB9IC8vIEtleXdvcmQuUHNldWRvXG4gIC5rciAgeyBmb250LXdlaWdodDogYm9sZCB9IC8vIEtleXdvcmQuUmVzZXJ2ZWRcblxuICBAdG9rZW4tbWFpbjpcbiAgICBlcnIgLy8gRXJyb3JcbiAgICB4ICAgLy8gT3RoZXJcblxuICAgIG4gIC8vIE5hbWVcbiAgICBuYSAvLyBOYW1lLkF0dHJpYnV0ZVxuICAgIG5iIC8vIE5hbWUuQnVpbHRpblxuICAgIGJwIC8vIE5hbWUuQnVpbHRpbi5Qc2V1ZG9cbiAgICBuYyAvLyBOYW1lLkNsYXNzXG4gICAgbm8gLy8gTmFtZS5Db25zdGFudFxuICAgIG5kIC8vIE5hbWUuRGVjb3JhdG9yXG4gICAgbmkgLy8gTmFtZS5FbnRpdHlcbiAgICBuZSAvLyBOYW1lLkV4Y2VwdGlvblxuICAgIG5mIC8vIE5hbWUuRnVuY3Rpb25cbiAgICBubCAvLyBOYW1lLkxhYmVsXG4gICAgbm4gLy8gTmFtZS5OYW1lc3BhY2VcbiAgICBueCAvLyBOYW1lLk90aGVyXG4gICAgbnQgLy8gTmFtZS5UYWdcbiAgICBudiAvLyBOYW1lLlZhcmlhYmxlXG4gICAgdmMgLy8gTmFtZS5WYXJpYWJsZS5DbGFzc1xuICAgIHZnIC8vIE5hbWUuVmFyaWFibGUuR2xvYmFsXG4gICAgdmkgLy8gTmFtZS5WYXJpYWJsZS5JbnN0YW5jZVxuXG4gICAgZyAgLy8gR2VuZXJpY1xuICAgIGdkIC8vIEdlbmVyaWMuRGVsZXRlZFxuICAgIGdlIC8vIEdlbmVyaWMuRW1waFxuICAgIGdyIC8vIEdlbmVyaWMuRXJyb3JcbiAgICBnaCAvLyBHZW5lcmljLkhlYWRpbmdcbiAgICBnaSAvLyBHZW5lcmljLkluc2VydGVkXG4gICAgZ28gLy8gR2VuZXJpYy5PdXRwdXRcbiAgICBncCAvLyBHZW5lcmljLlByb21wdFxuICAgIGdzIC8vIEdlbmVyaWMuU3Ryb25nXG4gICAgZ3UgLy8gR2VuZXJpYy5TdWJoZWFkaW5nXG4gICAgZ3QgLy8gR2VuZXJpYy5UcmFjZWJhY2tcbiAgICBnbCAvLyBHZW5lcmljLkxpbmVub1xuXG4gICAgayAgLy8gS2V5d29yZFxuICAgIGtjIC8vIEtleXdvcmQuQ29uc3RhbnRcbiAgICBrZCAvLyBLZXl3b3JkLkRlY2xhcmF0aW9uXG4gICAga24gLy8gS2V5d29yZC5OYW1lc3BhY2VcbiAgICBrcCAvLyBLZXl3b3JkLlBzZXVkb1xuICAgIGtyIC8vIEtleXdvcmQuUmVzZXJ2ZWRcbiAgICBrdCAvLyBLZXl3b3JkLlR5cGVcbiAgICBrdiAvLyBLZXl3b3JkLlZhcmlhYmxlXG5cbiAgICB3ICAvLyBUZXh0LldoaXRlc3BhY2VcblxuICAgIGwgIC8vIExpdGVyYWxcblxuICAgIGxkIC8vIExpdGVyYWwuRGF0ZVxuXG4gICAgcyAgLy8gTGl0ZXJhbC5TdHJpbmdcbiAgICBzYiAvLyBMaXRlcmFsLlN0cmluZy5CYWNrdGlja1xuICAgIHNjIC8vIExpdGVyYWwuU3RyaW5nLkNoYXJcbiAgICBzZCAvLyBMaXRlcmFsLlN0cmluZy5Eb2NcbiAgICBzMiAvLyBMaXRlcmFsLlN0cmluZy5Eb3VibGVcbiAgICBzZSAvLyBMaXRlcmFsLlN0cmluZy5Fc2NhcGVcbiAgICBzaCAvLyBMaXRlcmFsLlN0cmluZy5IZXJlZG9jXG4gICAgc2kgLy8gTGl0ZXJhbC5TdHJpbmcuSW50ZXJwb2xcbiAgICBzeCAvLyBMaXRlcmFsLlN0cmluZy5PdGhlclxuICAgIHNyIC8vIExpdGVyYWwuU3RyaW5nLlJlZ2V4XG4gICAgczEgLy8gTGl0ZXJhbC5TdHJpbmcuU2luZ2xlXG4gICAgc3MgLy8gTGl0ZXJhbC5TdHJpbmcuU3ltYm9sXG5cbiAgICBtICAvLyBMaXRlcmFsLk51bWJlclxuICAgIG1mIC8vIExpdGVyYWwuTnVtYmVyLkZsb2F0XG4gICAgbWggLy8gTGl0ZXJhbC5OdW1iZXIuSGV4XG4gICAgbWkgLy8gTGl0ZXJhbC5OdW1iZXIuSW50ZWdlclxuICAgIGlsIC8vIExpdGVyYWwuTnVtYmVyLkludGVnZXIuTG9uZ1xuICAgIG1vIC8vIExpdGVyYWwuTnVtYmVyLk9jdFxuICAgIG1iIC8vIExpdGVyYWwuTnVtYmVyLkJpblxuICAgIG14IC8vIExpdGVyYWwuTnVtYmVyLk90aGVyXG5cbiAgICBvICAvLyBPcGVyYXRvclxuICAgIG93IC8vIE9wZXJhdG9yLldvcmRcblxuICAgIHAgIC8vIFB1bmN0dWF0aW9uXG4gICAgcGkgLy8gUHVuY3R1YXRpb24uSW5kaWNhdG9yXG4gIDtcblxuICAvLyBHZW5lcmF0ZSBtYWluIGhpZ2hsaWdodHNcbiAgLy8gUmVmOiBodHRwczovL2dpdGh1Yi5jb20vbGVzcy9sZXNzLmpzL2lzc3Vlcy8yMDcxXG4gIC5sb29wLW1haW4gKEBpKSB3aGVuIChAaSA8IChsZW5ndGgoQHRva2VuLW1haW4pICsgMSkpIHtcbiAgICBAdG9rZW46IGV4dHJhY3QoQHRva2VuLW1haW4sIEBpKTtcblxuICAgIC5Ae3Rva2VufSB7XG4gICAgICBjb2xvcjogbWl4KHNwaW4oQGNvZGUtY29sb3IsIChAaSAqIDM2MCAvIGxlbmd0aChAdG9rZW4tbWFpbikpKSwgQGxpbmstY29sb3IsIDgwJSk7XG4gICAgfVxuICAgIC5sb29wLW1haW4oKEBpICsgMSkpO1xuICB9XG4gIC5sb29wLW1haW4oMSk7XG5cbiAgQHRva2VuLWNvbW1lbnRzOlxuICAgIGMgLy8gQ29tbWVudFxuICAgIGNkIC8vIENvbW1lbnQuTXVsdGlsaW5lXG4gICAgY20gLy8gQ29tbWVudC5NdWx0aWxpbmVcbiAgICBjcCAvLyBDb21tZW50LlByZXByb2NcbiAgICBjMSAvLyBDb21tZW50LlNpbmdsZVxuICAgIGNzIC8vIENvbW1lbnQuU3BlY2lhbFxuICA7XG5cbiAgLy8gR2VuZXJhdGUgaGlnaGxpZ2h0IGZvciBjb21tZW50c1xuICAubG9vcC1jb21tZW50cyAoQGkpIHdoZW4gKEBpIDwgKGxlbmd0aChAdG9rZW4tY29tbWVudHMpICsgMSkpIHtcbiAgICBAdG9rZW46IGV4dHJhY3QoQHRva2VuLWNvbW1lbnRzLCBAaSk7XG5cbiAgICAuQHt0b2tlbn0ge1xuICAgICAgY29sb3I6IG1peChkZXNhdHVyYXRlKHNwaW4oQGNvZGUtY29sb3IsIChAaSAqIDM2MCAvIGxlbmd0aChAdG9rZW4tY29tbWVudHMpKSksIDcwJSksIEBsaW5rLWNvbG9yLCA5MCUpO1xuICAgICAgb3BhY2l0eTogLjY7XG4gICAgfVxuICAgIC5sb29wLWNvbW1lbnRzKChAaSArIDEpKTtcbiAgfVxuICAubG9vcC1jb21tZW50cygxKTtcblxuICAvLyBSZXNldCBjb2RlIGJsb2NrcyBhcHBlYXJhbmNlIHdpdGggbGluZSBudW1iZXJzXG4gIHRhYmxlIHtcblxuICAgICYsXG4gICAgdGgsXG4gICAgdGQsXG4gICAgdGQgcHJlIHtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICB9XG5cbiAgICAvLyBSb3VnZSBnZW5lcmF0ZWQgY29kZWJsb2NrcyB3aXRoIGBsaW5lbm9gIHdpbGwgbmVzdCBgcHJlYCBpbnNpZGUgYW5cbiAgICAvLyBvdXR0ZXIgYHByZWAsIHRoaXMgY291bGQgaGVscCBwcmV2ZW50IFwiZG91YmxlXCIgc2Nyb2xsZXIgaXNzdWUgb24gc29tZVxuICAgIC8vIHBsYXRmb3Jtc1xuICAgIHByZSB7XG4gICAgICBvdmVyZmxvdy14OiB2aXNpYmxlO1xuICAgIH1cblxuICAgIC5ndXR0ZXIge1xuXG4gICAgICAvLyBSZXNldCB0aGVtZS1zcGVjaWZpYyB0YWJsZSBzdHlsZXNcbiAgICAgICY6Zmlyc3QtY2hpbGQsXG4gICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gICAgICB9XG5cbiAgICAgIC5saW5lbm8ge1xuICAgICAgICBjb2xvcjogZGVzYXR1cmF0ZShAbGluay1jb2xvciwgOTUlKTtcbiAgICAgICAgb3BhY2l0eTogLjU7XG4gICAgICAgIHVzZXItc2VsZWN0OiBub25lO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5jb2RlIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMWVtO1xuICAgIH1cbiAgfVxufVxuIl19 */